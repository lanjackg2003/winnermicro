<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\objs\WM_SDK.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\objs\WM_SDK.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Wed Dec 23 19:55:02 2015
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3ca]">get_server_conn</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3ca]">get_server_conn</a><BR>
 <LI><a href="#[425]">netconn_drain</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[425]">netconn_drain</a><BR>
 <LI><a href="#[3c4]">lwip_sendto</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3c2]">lwip_send</a><BR>
 <LI><a href="#[720]">inc_byte_array</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[720]">inc_byte_array</a><BR>
 <LI><a href="#[822]">sm_WPA_PTK_PTKINITDONE_Enter</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[820]">wpa_sta_disconnect</a><BR>
 <LI><a href="#[81f]">sm_WPA_PTK_DISCONNECT_Enter</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[820]">wpa_sta_disconnect</a><BR>
 <LI><a href="#[46a]">dns_parse_name</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[46a]">dns_parse_name</a><BR>
 <LI><a href="#[7d]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7d]">Undef_Handler</a><BR>
 <LI><a href="#[7f]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7f]">PAbt_Handler</a><BR>
 <LI><a href="#[80]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[80]">DAbt_Handler</a><BR>
 <LI><a href="#[82]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[82]">FIQ_Handler</a><BR>
 <LI><a href="#[174]">_sys_exit</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[174]">_sys_exit</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[80]">DAbt_Handler</a> from start.o(RESET) referenced from start.o(RESET)
 <LI><a href="#[10d]">DHCPS_RecvCb</a> from dhcp_server.o(.text) referenced from dhcp_server.o(.text)
 <LI><a href="#[10e]">DNSS_RecvCb</a> from dns_server.o(.text) referenced from dns_server.o(.text)
 <LI><a href="#[82]">FIQ_Handler</a> from start.o(RESET) referenced from start.o(RESET)
 <LI><a href="#[10b]">HF_Cloudfunc</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[fa]">HF_ConnectToCloud</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[fd]">HF_FirmwareUpdate</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[fe]">HF_FirmwareUpdateFinish</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[106]">HF_GetMac</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[fb]">HF_ListenClient</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[104]">HF_ReadDataFromFlash</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[107]">HF_Reboot</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[102]">HF_Rest</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[ff]">HF_SendDataToMoudle</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[fc]">HF_SendTcpData</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[105]">HF_SendUdpData</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[100]">HF_SetTimer</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[101]">HF_StopTimer</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[103]">HF_WriteDataToFlash</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[f9]">HF_timer_callback</a> from zc_hf_adpter.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[f7]">KeyScanTimerProc</a> from user_main.o(.text) referenced from user_main.o(.text)
 <LI><a href="#[7f]">PAbt_Handler</a> from start.o(RESET) referenced from start.o(RESET)
 <LI><a href="#[85]">ResetTimerProc</a> from wm_cmdp.o(.text) referenced from wm_cmdp.o(.text)
 <LI><a href="#[7c]">Reset_Handler</a> from start.o(RESET) referenced 2 times from start.o(RESET)
 <LI><a href="#[7d]">Undef_Handler</a> from start.o(RESET) referenced from start.o(RESET)
 <LI><a href="#[f8]">UserTaskProc</a> from user_main.o(.text) referenced from user_main.o(.text)
 <LI><a href="#[f5]">UserUartRxCallback</a> from user_main.o(.text) referenced from user_main.o(.text)
 <LI><a href="#[f6]">UserWlanStatusChangedEvent</a> from user_main.o(.text) referenced from user_main.o(.text)
 <LI><a href="#[10c]">_DhcpTickHandle</a> from dhcp_server.o(.text) referenced 2 times from dhcp_server.o(.text)
 <LI><a href="#[130]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[134]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[133]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[136]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[132]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[131]">_sputc</a> from _sputc.o(.text) referenced from __2sprintf.o(.text)
 <LI><a href="#[d0]">accept_function</a> from api_msg.o(.text) referenced from api_msg.o(.text)
 <LI><a href="#[122]">ap_handle_timer</a> from hostapd_sta_info.o(.text) referenced from hostapd_sta_info.o(.text)
 <LI><a href="#[123]">ap_sta_disassoc_cb_timeout</a> from hostapd_sta_info.o(.text) referenced from hostapd_sta_info.o(.text)
 <LI><a href="#[e0]">arp_timer</a> from timers.o(.text) referenced from timers.o(.text)
 <LI><a href="#[34]">atcmd_aolm_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[37]">atcmd_atlt_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[32]">atcmd_atm_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[3c]">atcmd_atpt_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[33]">atcmd_atrm_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[27]">atcmd_brd_ssid_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[26]">atcmd_bssid_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[2a]">atcmd_chll_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[29]">atcmd_chnl_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[42]">atcmd_cmdm_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[66]">atcmd_custdata_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[3d]">atcmd_dbg_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[39]">atcmd_ddns_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[3b]">atcmd_dname_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[38]">atcmd_dns_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[25]">atcmd_encrypt_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[f]">atcmd_entm_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[3e]">atcmd_espc_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[3f]">atcmd_espt_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[4f]">atcmd_flsr_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[50]">atcmd_flsw_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[28]">atcmd_get_connect_param_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[18]">atcmd_get_sta_info</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[13]">atcmd_gpio_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[46]">atcmd_http_client_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[52]">atcmd_hwv_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[e]">atcmd_insdisp_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[41]">atcmd_iom_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[24]">atcmd_key_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[17]">atcmd_link_status_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[54]">atcmd_lpchl_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[61]">atcmd_lpchlr_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[5e]">atcmd_lpchrs_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[5c]">atcmd_lppstp_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[5b]">atcmd_lppstr_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[63]">atcmd_lpragc_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[5d]">atcmd_lprfps_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[64]">atcmd_lprsr_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[59]">atcmd_lprstp_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[58]">atcmd_lprstr_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[5a]">atcmd_lprstt_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[62]">atcmd_lpstpr_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[60]">atcmd_lpstpt_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[5f]">atcmd_lptbd_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[56]">atcmd_lptstp_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[55]">atcmd_lptstr_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[57]">atcmd_lptstt_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[47]">atcmd_mac_proc</a> from wm_cmdp_at.o(.text) referenced 4 times from wm_cmdp_at.o(.data)
 <LI><a href="#[31]">atcmd_nip_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[43]">atcmd_pass_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[12]">atcmd_pmtf_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[35]">atcmd_portm_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[10]">atcmd_ps_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[4b]">atcmd_regr_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[4c]">atcmd_regw_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[11]">atcmd_reset_flash_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[d]">atcmd_reset_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[4d]">atcmd_rfr_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[4e]">atcmd_rfw_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[65]">atcmd_rwhwv_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[44]">atcmd_set_oneshot_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[1b]">atcmd_skclose_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[19]">atcmd_skct_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[21]">atcmd_skghbn_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[1e]">atcmd_skrcv_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[1c]">atcmd_sksdf_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[1d]">atcmd_sksnd_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[1a]">atcmd_skstt_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[1f]">atcmd_sktrptmode_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[20]">atcmd_sktsrceip_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[53]">atcmd_spif_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[23]">atcmd_ssid_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[51]">atcmd_txg_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[36]">atcmd_uart_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[4a]">atcmd_updd_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[49]">atcmd_updm_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[45]">atcmd_updp_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[3a]">atcmd_upnp_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[48]">atcmd_ver_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[2f]">atcmd_warc_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[30]">atcmd_warm_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[2d]">atcmd_watc_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[2c]">atcmd_wbgr_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[40]">atcmd_webs_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[14]">atcmd_wjoin_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[15]">atcmd_wleave_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[22]">atcmd_wprt_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[2e]">atcmd_wpsm_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[2b]">atcmd_wreg_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[16]">atcmd_wscan_proc</a> from wm_cmdp_at.o(.text) referenced 2 times from wm_cmdp_at.o(.data)
 <LI><a href="#[126]">bss_release</a> from tls_wl_bss.o(.text) referenced 2 times from tls_wl_bss.o(.text)
 <LI><a href="#[da]">dhcp_recv</a> from dhcp.o(.text) referenced from dhcp.o(.text)
 <LI><a href="#[ed]">dhcp_start</a> from dhcp.o(.text) referenced from ethernet.o(.text)
 <LI><a href="#[ee]">dhcp_stop</a> from dhcp.o(.text) referenced from ethernet.o(.text)
 <LI><a href="#[e1]">dhcp_timer_coarse</a> from timers.o(.text) referenced from timers.o(.text)
 <LI><a href="#[e2]">dhcp_timer_fine</a> from timers.o(.text) referenced from timers.o(.text)
 <LI><a href="#[db]">dns_recv</a> from dns.o(.text) referenced from dns.o(.text)
 <LI><a href="#[e3]">dns_timer</a> from timers.o(.text) referenced from timers.o(.text)
 <LI><a href="#[c2]">do_bind</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[ca]">do_close</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[b9]">do_close_connect</a> from tls_netconn.o(.text) referenced from tls_netconn.o(.text)
 <LI><a href="#[c3]">do_connect</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[cf]">do_connected</a> from api_msg.o(.text) referenced from api_msg.o(.text)
 <LI><a href="#[b8]">do_create_connect</a> from tls_netconn.o(.text) referenced from tls_netconn.o(.text)
 <LI><a href="#[c0]">do_delconn</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[c4]">do_disconnect</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[d1]">do_dns_found</a> from api_msg.o(.text) referenced from api_msg.o(.text)
 <LI><a href="#[c1]">do_getaddr</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[c9]">do_gethostbyname</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[c5]">do_listen</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[d4]">do_netifapi_netif_add</a> from netifapi.o(.text) referenced from netifapi.o(.text)
 <LI><a href="#[d6]">do_netifapi_netif_common</a> from netifapi.o(.text) referenced from netifapi.o(.text)
 <LI><a href="#[d5]">do_netifapi_netif_set_addr</a> from netifapi.o(.text) referenced from netifapi.o(.text)
 <LI><a href="#[bf]">do_newconn</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[c6]">do_recv</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[c7]">do_send</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[c8]">do_write</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[112]">eloop_timeout</a> from wpa_supplicant.o(.text) referenced from wpa_supplicant.o(.text)
 <LI><a href="#[cd]">err_tcp</a> from api_msg.o(.text) referenced 2 times from api_msg.o(.text)
 <LI><a href="#[e5]">etharp_output</a> from etharp.o(.text) referenced from ethernetif.o(.text)
 <LI><a href="#[e9]">ethernetif_init</a> from ethernetif.o(.text) referenced from ethernet.o(.text)
 <LI><a href="#[e7]">ethernetif_input</a> from ethernetif.o(.text) referenced from ethernet.o(.text)
 <LI><a href="#[d7]">event_callback</a> from sockets.o(.text) referenced from sockets.o(.text)
 <LI><a href="#[135]">fputc</a> from retarget.o(.text) referenced from _printf_char_file.o(.text)
 <LI><a href="#[10a]">free</a> from h1_free_mt.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[81]">freeRtosirqHandler</a> from portasm.o(PORT_ASM) referenced from start.o(RESET)
 <LI><a href="#[f3]">fwup_request_complete</a> from wm_fwup.o(.text) referenced from wm_fwup.o(.text)
 <LI><a href="#[f4]">fwup_scheduler</a> from wm_fwup.o(.text) referenced from wm_fwup.o(.text)
 <LI><a href="#[6b]">gd25qxx_chip_erase</a> from wm_fls_gd25qxx.o(.text) referenced 2 times from wm_fls_gd25qxx.o(.data)
 <LI><a href="#[6a]">gd25qxx_erase</a> from wm_fls_gd25qxx.o(.text) referenced 2 times from wm_fls_gd25qxx.o(.data)
 <LI><a href="#[68]">gd25qxx_fast_read</a> from wm_fls_gd25qxx.o(.text) referenced 2 times from wm_fls_gd25qxx.o(.data)
 <LI><a href="#[69]">gd25qxx_page_write</a> from wm_fls_gd25qxx.o(.text) referenced 2 times from wm_fls_gd25qxx.o(.data)
 <LI><a href="#[6c]">gd25qxx_probe</a> from wm_fls_gd25qxx.o(.text) referenced 2 times from wm_fls_gd25qxx.o(.data)
 <LI><a href="#[67]">gd25qxx_read</a> from wm_fls_gd25qxx.o(.text) referenced 2 times from wm_fls_gd25qxx.o(.data)
 <LI><a href="#[6d]">gd25qxx_remove</a> from wm_fls_gd25qxx.o(.text) referenced 2 times from wm_fls_gd25qxx.o(.data)
 <LI><a href="#[8d]">hostif_default_socket_err</a> from wm_cmdp_hostif.o(.text) referenced from wm_cmdp_hostif.o(.text)
 <LI><a href="#[8b]">hostif_default_socket_setup</a> from wm_cmdp_hostif.o(.text) referenced from wm_cmdp_hostif.o(.text)
 <LI><a href="#[8e]">hostif_default_socket_state_changed</a> from wm_cmdp_hostif.o(.text) referenced from wm_cmdp_hostif.o(.text)
 <LI><a href="#[8c]">hostif_socket_recv</a> from wm_cmdp_hostif.o(.text) referenced from wm_cmdp_hostif.o(.text)
 <LI><a href="#[8f]">hostif_socket_rpt</a> from wm_cmdp_hostif.o(.text) referenced from wm_cmdp_hostif.o(.text)
 <LI><a href="#[91]">hostif_socket_state_changed_ATCMD</a> from wm_cmdp_hostif.o(.text) referenced from wm_cmdp_hostif.o(.text)
 <LI><a href="#[90]">hostif_socket_state_changed_RICMD</a> from wm_cmdp_hostif.o(.text) referenced from wm_cmdp_hostif.o(.text)
 <LI><a href="#[8a]">hostif_wscan_cmplt</a> from wm_cmdp_hostif.o(.text) referenced from wm_cmdp_hostif.o(.text)
 <LI><a href="#[84]">http_client_rx</a> from wm_httpclient_task.o(.text) referenced from wm_httpclient_task.o(.text)
 <LI><a href="#[127]">ieee80211_bss_timeout</a> from tls_wl_bss.o(.text) referenced from tls_wl_bss.o(.text)
 <LI><a href="#[129]">ieee80211_sta_timer</a> from tls_wl_mlme.o(.text) referenced from tls_wl_mlme.o(.text)
 <LI><a href="#[124]">ieee80211_tkip_countermeasures_stop</a> from tkip_countermeasures.o(.text) referenced from tkip_countermeasures.o(.text)
 <LI><a href="#[df]">ip_reass_timer</a> from timers.o(.text) referenced from timers.o(.text)
 <LI><a href="#[e4]">ipfrag_free_pbuf_custom</a> from ip_frag.o(.text) referenced from ip_frag.o(.text)
 <LI><a href="#[137]">isspace</a> from isspace.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[e6]">low_level_output</a> from ethernetif.o(.text) referenced from ethernetif.o(.text)
 <LI><a href="#[d8]">lwip_getsockopt_internal</a> from sockets.o(.text) referenced from sockets.o(.text)
 <LI><a href="#[d9]">lwip_setsockopt_internal</a> from sockets.o(.text) referenced from sockets.o(.text)
 <LI><a href="#[83]">main</a> from main.o(.text) referenced from rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
 <LI><a href="#[109]">malloc</a> from h1_alloc_mt.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[be]">mem_free_int</a> from tcpip.o(.text) referenced from tcpip.o(.text)
 <LI><a href="#[ba]">net_do_send</a> from tls_netconn.o(.text) referenced from tls_netconn.o(.text)
 <LI><a href="#[bb]">net_do_write</a> from tls_netconn.o(.text) referenced from tls_netconn.o(.text)
 <LI><a href="#[b6]">net_tcp_accept_cb</a> from tls_netconn.o(.text) referenced from tls_netconn.o(.text)
 <LI><a href="#[b5]">net_tcp_connect_cb</a> from tls_netconn.o(.text) referenced from tls_netconn.o(.text)
 <LI><a href="#[b2]">net_tcp_err_cb</a> from tls_netconn.o(.text) referenced 2 times from tls_netconn.o(.text)
 <LI><a href="#[b1]">net_tcp_poll_cb</a> from tls_netconn.o(.text) referenced 2 times from tls_netconn.o(.text)
 <LI><a href="#[b4]">net_tcp_recv_cb</a> from tls_netconn.o(.text) referenced from tls_netconn.o(.text)
 <LI><a href="#[b7]">net_udp_recv_cb</a> from tls_netconn.o(.text) referenced from tls_netconn.o(.text)
 <LI><a href="#[ea]">netif_set_default</a> from netif.o(.text) referenced from ethernet.o(.text)
 <LI><a href="#[f0]">netif_set_down</a> from netif.o(.text) referenced from ethernet.o(.text)
 <LI><a href="#[ef]">netif_set_up</a> from netif.o(.text) referenced from ethernet.o(.text)
 <LI><a href="#[eb]">netif_status_changed</a> from ethernet.o(.text) referenced from ethernet.o(.text)
 <LI><a href="#[bd]">pbuf_free_int</a> from tcpip.o(.text) referenced from tcpip.o(.text)
 <LI><a href="#[cc]">poll_tcp</a> from api_msg.o(.text) referenced 2 times from api_msg.o(.text)
 <LI><a href="#[108]">printf</a> from printf.o(.text) referenced from zc_hf_adpter.o(.text)
 <LI><a href="#[a8]">prvIdleTask</a> from tasks.o(.text) referenced from tasks.o(.text)
 <LI><a href="#[a7]">prvTimerTask</a> from rtostimers.o(.text) referenced from rtostimers.o(.text)
 <LI><a href="#[b0]">pwm_timer_cb</a> from wm_pwm.o(.text) referenced from wm_pwm.o(.text)
 <LI><a href="#[b3]">raw_sk_free_pbuf_custom_fn</a> from tls_netconn.o(.text) referenced from tls_netconn.o(.text)
 <LI><a href="#[d2]">recv_raw</a> from api_msg.o(.text) referenced from api_msg.o(.text)
 <LI><a href="#[ce]">recv_tcp</a> from api_msg.o(.text) referenced from api_msg.o(.text)
 <LI><a href="#[d3]">recv_udp</a> from api_msg.o(.text) referenced from api_msg.o(.text)
 <LI><a href="#[128]">rf65_set_channel</a> from tls_wl_rf65.o(.text) referenced from tls_wl_hw.o(.text)
 <LI><a href="#[cb]">sent_tcp</a> from api_msg.o(.text) referenced 2 times from api_msg.o(.text)
 <LI><a href="#[a9]">spi_complete</a> from wm_hostspi.o(.text) referenced from wm_hostspi.o(.text)
 <LI><a href="#[ab]">spi_interrupt_handler</a> from wm_hostspi.o(.text) referenced from wm_hostspi.o(.text)
 <LI><a href="#[aa]">spi_scheduler</a> from wm_hostspi.o(.text) referenced from wm_hostspi.o(.text)
 <LI><a href="#[12a]">sta_info_release</a> from tls_wl_sta_info.o(.text) referenced from tls_wl_sta_info.o(.text)
 <LI><a href="#[116]">standby_timeout</a> from tls_wl_core.o(.text) referenced from tls_wl_core.o(.text)
 <LI><a href="#[6e]">supplicant_event_assoc</a> from wpa_supplicant.o(.text) referenced 2 times from wpa_supplicant.o(.data)
 <LI><a href="#[74]">supplicant_event_beacon_done</a> from wpa_supplicant.o(.text) referenced 2 times from wpa_supplicant.o(.data)
 <LI><a href="#[6f]">supplicant_event_disassoc</a> from wpa_supplicant.o(.text) referenced 2 times from wpa_supplicant.o(.data)
 <LI><a href="#[71]">supplicant_event_mic_err</a> from wpa_supplicant.o(.text) referenced 2 times from wpa_supplicant.o(.data)
 <LI><a href="#[79]">supplicant_event_net_down</a> from wpa_supplicant.o(.text) referenced 2 times from wpa_supplicant.o(.data)
 <LI><a href="#[7a]">supplicant_event_net_up</a> from wpa_supplicant.o(.text) referenced 2 times from wpa_supplicant.o(.data)
 <LI><a href="#[72]">supplicant_event_rx_eapol</a> from wpa_supplicant.o(.text) referenced 2 times from wpa_supplicant.o(.data)
 <LI><a href="#[78]">supplicant_event_rx_from_unknown</a> from wpa_supplicant.o(.text) referenced 2 times from wpa_supplicant.o(.data)
 <LI><a href="#[73]">supplicant_event_rx_mgmt</a> from wpa_supplicant.o(.text) referenced 2 times from wpa_supplicant.o(.data)
 <LI><a href="#[75]">supplicant_event_rx_ps</a> from wpa_supplicant.o(.text) referenced 2 times from wpa_supplicant.o(.data)
 <LI><a href="#[76]">supplicant_event_rx_pspoll</a> from wpa_supplicant.o(.text) referenced 2 times from wpa_supplicant.o(.data)
 <LI><a href="#[70]">supplicant_event_scan_completed</a> from wpa_supplicant.o(.text) referenced 2 times from wpa_supplicant.o(.data)
 <LI><a href="#[77]">supplicant_event_sta_active</a> from wpa_supplicant.o(.text) referenced 2 times from wpa_supplicant.o(.data)
 <LI><a href="#[7b]">supplicant_event_update_stat</a> from wpa_supplicant.o(.text) referenced 2 times from wpa_supplicant.o(.data)
 <LI><a href="#[113]">supplicant_ps_pkt_timer_expire</a> from wpa_supplicant.o(.text) referenced from wpa_supplicant.o(.text)
 <LI><a href="#[f2]">sys_net_status_changed</a> from tls_sys.o(.text) referenced from tls_sys.o(.text)
 <LI><a href="#[a5]">task_start</a> from wm_main.o(.text) referenced from wm_main.o(.text)
 <LI><a href="#[dc]">tcp_accept_null</a> from tcp.o(.text) referenced from tcp.o(.text)
 <LI><a href="#[dd]">tcp_recv_null</a> from tcp.o(.text) referenced from tcp.o(.text)
 <LI><a href="#[e8]">tcpip_input</a> from tcpip.o(.text) referenced from ethernet.o(.text)
 <LI><a href="#[de]">tcpip_tcp_timer</a> from timers.o(.text) referenced from timers.o(.text)
 <LI><a href="#[bc]">tcpip_thread</a> from tcpip.o(.text) referenced from tcpip.o(.text)
 <LI><a href="#[88]">tls_hostif_http_client_err_callback</a> from wm_cmdp_hostif.o(.text) referenced from wm_cmdp_at.o(.text)
 <LI><a href="#[87]">tls_hostif_http_client_recv_callback</a> from wm_cmdp_hostif.o(.text) referenced from wm_cmdp_at.o(.text)
 <LI><a href="#[92]">tls_hostif_net_status_changed</a> from wm_cmdp_hostif.o(.text) referenced from wm_cmdp_hostif.o(.text)
 <LI><a href="#[89]">tls_hostif_tx_timeout</a> from wm_cmdp_hostif.o(.text) referenced from wm_cmdp_hostif.o(.text)
 <LI><a href="#[af]">tls_irq_handler_dummy</a> from wm_irq.o(.text) referenced from wm_irq.o(.text)
 <LI><a href="#[a4]">tls_main_net_status_changed</a> from wm_main.o(.text) referenced from wm_main.o(.text)
 <LI><a href="#[a6]">tls_os_timer_isr</a> from clock.o(.text) referenced from clock.o(.text)
 <LI><a href="#[114]">tls_supplicant_task</a> from wpa_supplicant.o(.text) referenced from wpa_supplicant.o(.text)
 <LI><a href="#[115]">tls_supplicant_timer_task</a> from wpa_supplicant.o(.text) referenced from wpa_supplicant.o(.text)
 <LI><a href="#[f1]">tls_sys_task</a> from tls_sys.o(.text) referenced from tls_sys.o(.text)
 <LI><a href="#[a0]">tls_timer2_isr</a> from wm_uart_timer.o(.text) referenced from wm_uart_timer.o(.text)
 <LI><a href="#[93]">tls_uart0_task_rx_cb</a> from wm_uart_task.o(.text) referenced from wm_uart_task.o(.text)
 <LI><a href="#[94]">tls_uart0_task_tx_cb</a> from wm_uart_task.o(.text) referenced from wm_uart_task.o(.text)
 <LI><a href="#[95]">tls_uart1_task_rx_cb</a> from wm_uart_task.o(.text) referenced from wm_uart_task.o(.text)
 <LI><a href="#[96]">tls_uart1_task_tx_cb</a> from wm_uart_task.o(.text) referenced from wm_uart_task.o(.text)
 <LI><a href="#[9a]">tls_uart_0_rx_task</a> from wm_uart_task.o(.text) referenced from wm_uart_task.o(.text)
 <LI><a href="#[99]">tls_uart_0_tx_task</a> from wm_uart_task.o(.text) referenced from wm_uart_task.o(.text)
 <LI><a href="#[98]">tls_uart_1_rx_task</a> from wm_uart_task.o(.text) referenced from wm_uart_task.o(.text)
 <LI><a href="#[97]">tls_uart_1_tx_task</a> from wm_uart_task.o(.text) referenced from wm_uart_task.o(.text)
 <LI><a href="#[ac]">tls_uart_isr</a> from wm_uart.o(.text) referenced from wm_uart.o(.text)
 <LI><a href="#[ad]">tls_uart_tx_cb</a> from wm_uart.o(.text) referenced from wm_uart.o(.text)
 <LI><a href="#[ae]">tls_watchdog_isr</a> from wm_cpu.o(.text) referenced from wm_cpu.o(.text)
 <LI><a href="#[a3]">tls_wifi_dataframe_recv</a> from wm_wifi_oneshot.o(.text) referenced from wm_wifi_oneshot.o(.text)
 <LI><a href="#[a2]">tls_wifi_switch_channel_tim</a> from wm_wifi_oneshot.o(.text) referenced from wm_wifi_oneshot.o(.text)
 <LI><a href="#[11c]">tls_wl_bss_mgmt_task</a> from tls_wl_bss.o(.text) referenced from tls_wl_core.o(.text)
 <LI><a href="#[11e]">tls_wl_data_tx_isr</a> from tls_wl_core.o(.text) referenced from tls_wl_core.o(.text)
 <LI><a href="#[11d]">tls_wl_mac_isr</a> from tls_wl_core.o(.text) referenced from tls_wl_core.o(.text)
 <LI><a href="#[11f]">tls_wl_mgmt_tx_isr</a> from tls_wl_core.o(.text) referenced from tls_wl_core.o(.text)
 <LI><a href="#[119]">tls_wl_mlme_task</a> from tls_wl_mlme.o(.text) referenced from tls_wl_core.o(.text)
 <LI><a href="#[121]">tls_wl_pm_isr</a> from tls_wl_core.o(.text) referenced from tls_wl_core.o(.text)
 <LI><a href="#[117]">tls_wl_power_save_awake</a> from tls_wl_core.o(.text) referenced from tls_wl_core.o(.text)
 <LI><a href="#[120]">tls_wl_rx_isr</a> from tls_wl_core.o(.text) referenced from tls_wl_core.o(.text)
 <LI><a href="#[11a]">tls_wl_rx_task</a> from tls_wl_rx.o(.text) referenced from tls_wl_core.o(.text)
 <LI><a href="#[118]">tls_wl_scan_task</a> from tls_wl_scan.o(.text) referenced from tls_wl_core.o(.text)
 <LI><a href="#[11b]">tls_wl_txmgmt_cmpt_task</a> from tls_wl_tx.o(.text) referenced from tls_wl_core.o(.text)
 <LI><a href="#[9d]">uart_get_uart1_port</a> from wm_uart_task.o(.text) referenced from wm_uart_task.o(.text)
 <LI><a href="#[9c]">uart_send_tx_msg</a> from wm_uart_task.o(.text) referenced from wm_uart_task.o(.text)
 <LI><a href="#[9b]">uart_set_uart0_mode</a> from wm_uart_task.o(.text) referenced from wm_uart_task.o(.text)
 <LI><a href="#[9e]">uart_set_uart1_mode</a> from wm_uart_task.o(.text) referenced from wm_uart_task.o(.text)
 <LI><a href="#[9f]">uart_set_uart1_sock_param</a> from wm_uart_task.o(.text) referenced from wm_uart_task.o(.text)
 <LI><a href="#[7e]">vPortYieldProcessor</a> from portasm.o(PORT_ASM) referenced from start.o(RESET)
 <LI><a href="#[139]">vTaskIncrementTick</a> from tasks.o(.text) referenced from portasm.o(PORT_ASM)
 <LI><a href="#[138]">vTaskSwitchContext</a> from tasks.o(.text) referenced from portasm.o(PORT_ASM)
 <LI><a href="#[ec]">wifi_status_changed</a> from ethernet.o(.text) referenced from ethernet.o(.text)
 <LI><a href="#[86]">wm_cmdp_oneshot_status_event</a> from wm_cmdp_oneshot_task.o(.text) referenced from wm_cmdp_at.o(.text)
 <LI><a href="#[a1]">wm_cmdp_oneshot_task</a> from wm_cmdp_oneshot_task.o(.text) referenced from wm_cmdp_oneshot_task.o(.text)
 <LI><a href="#[12e]">wpa_group_update_sta</a> from wpa_auth.o(.text) referenced from wpa_auth.o(.text)
 <LI><a href="#[12b]">wpa_rekey_gmk</a> from wpa_auth.o(.text) referenced 2 times from wpa_auth.o(.text)
 <LI><a href="#[12f]">wpa_rekey_gtk</a> from wpa_auth.o(.text) referenced 2 times from wpa_auth.o(.text)
 <LI><a href="#[12d]">wpa_rekey_ptk</a> from wpa_auth.o(.text) referenced 3 times from wpa_auth.o(.text)
 <LI><a href="#[12c]">wpa_send_eapol_timeout</a> from wpa_auth.o(.text) referenced 4 times from wpa_auth.o(.text)
 <LI><a href="#[125]">wpa_sm_rekey_ptk</a> from wpa.o(.text) referenced from wpa.o(.text)
 <LI><a href="#[110]">wpa_supplicant_auth_timer</a> from wpa_supplicant.o(.text) referenced from wpa_supplicant.o(.text)
 <LI><a href="#[111]">wpa_supplicant_connect_timer</a> from wpa_supplicant.o(.text) referenced from wpa_supplicant.o(.text)
 <LI><a href="#[10f]">wpa_supplicant_scan_timer</a> from scan.o(.text) referenced from wpa_supplicant.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[7c]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_MPU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> start.o(RESET)
</UL>
<P><STRONG><a name="[13a]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_MPU
</UL>

<P><STRONG><a name="[13c]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size 0 bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[13e]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size 0 bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[13f]"></a>__scatterload_copy</STRONG> (ARM, 40 bytes, Stack size 0 bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[140]"></a>_printf_n</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount (via Veneer)
</UL>

<P><STRONG><a name="[86a]"></a>_printf_percent</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf (via BLX)
</UL>

<P><STRONG><a name="[142]"></a>_printf_p</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr (via Veneer)
</UL>

<P><STRONG><a name="[144]"></a>_printf_f</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[146]"></a>_printf_e</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[147]"></a>_printf_g</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[148]"></a>_printf_a</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[14a]"></a>_printf_i</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[14c]"></a>_printf_d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[14d]"></a>_printf_u</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via Veneer)
</UL>

<P><STRONG><a name="[14e]"></a>_printf_o</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct (via Veneer)
</UL>

<P><STRONG><a name="[150]"></a>_printf_x</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex (via Veneer)
</UL>

<P><STRONG><a name="[152]"></a>_printf_lli</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (via Veneer)
</UL>

<P><STRONG><a name="[154]"></a>_printf_lld</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (via Veneer)
</UL>

<P><STRONG><a name="[155]"></a>_printf_llu</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (via Veneer)
</UL>

<P><STRONG><a name="[156]"></a>_printf_llo</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct (via Veneer)
</UL>

<P><STRONG><a name="[158]"></a>_printf_llx</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex (via Veneer)
</UL>

<P><STRONG><a name="[15a]"></a>_printf_c</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char (via Veneer)
</UL>

<P><STRONG><a name="[15c]"></a>_printf_s</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string (via Veneer)
</UL>

<P><STRONG><a name="[15e]"></a>_printf_lc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar (via Veneer)
</UL>

<P><STRONG><a name="[160]"></a>_printf_ls</STRONG> (ARM, 0 bytes, Stack size 0 bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring (via Veneer)
</UL>

<P><STRONG><a name="[16e]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li (via BLX)
</UL>

<P><STRONG><a name="[162]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[164]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$0000000B))
<BR><BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[166]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via BLX)
</UL>

<P><STRONG><a name="[168]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype (via BLX)
</UL>

<P><STRONG><a name="[169]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$00000014))
<BR><BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric (via BLX)
</UL>

<P><STRONG><a name="[172]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via BLX)
</UL>

<P><STRONG><a name="[13d]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[16b]"></a>__rt_entry_sh</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[16d]"></a>__rt_entry_li</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via BLX)
</UL>

<P><STRONG><a name="[16f]"></a>__rt_entry_main</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>

<P><STRONG><a name="[89a]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BLX)
</UL>

<P><STRONG><a name="[171]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via BLX)
</UL>

<P><STRONG><a name="[173]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit (via BLX)
</UL>

<P><STRONG><a name="[1c1]"></a>rand</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, rand.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_enter
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetRandomeNumber
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_pkcs1_encrypt
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendUnbindMsg
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_Rand
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Cloudfunc
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_create_msg
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_wep_init
</UL>

<P><STRONG><a name="[175]"></a>HTTPClientSetVerb</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientOpenRequest
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersSend
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSessionReset
</UL>

<P><STRONG><a name="[177]"></a>HTTPClientOpenRequest</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSetVerb
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_post
</UL>

<P><STRONG><a name="[17e]"></a>HTTPClientReset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, httpclient.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSessionReset
</UL>

<P><STRONG><a name="[17f]"></a>HTTPIntrnConnectionClose</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;closesocket
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSendRequest
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientCloseRequest
</UL>

<P><STRONG><a name="[182]"></a>HTTPClientCloseRequest</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnConnectionClose
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_post
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req
</UL>

<P><STRONG><a name="[185]"></a>HTTPClientAddRequestHeaders</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, httpclient.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersAdd
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[19d]"></a>HTTPClientSendRequest</STRONG> (Thumb, 502 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperItoa
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetUpTime
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnConnectionClose
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSessionEvalTimeout
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSetURL
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnConnectionOpen
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersSend
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSend
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersAdd
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req
</UL>

<P><STRONG><a name="[1a5]"></a>HTTPClientRecvResponse</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req
</UL>

<P><STRONG><a name="[1a6]"></a>HTTPClientWriteData</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, httpclient.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetUpTime
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrLToH
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersReceive
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSend
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[1a8]"></a>HTTPClientReadData</STRONG> (Thumb, 226 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetUpTime
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnGetRemoteChunkLength
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnRecv
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req
</UL>

<P><STRONG><a name="[1aa]"></a>HTTPClientGetInfo</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, httpclient.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>

<P><STRONG><a name="[1ab]"></a>HTTPClientGetNextHeader</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersFind
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientFindFirstHeader
</UL>

<P><STRONG><a name="[1ac]"></a>HTTPClientFindFirstHeader</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientGetNextHeader
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req
</UL>

<P><STRONG><a name="[1c8]"></a>HTTPClientFindCloseHeader</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req
</UL>

<P><STRONG><a name="[19b]"></a>HTTPStrInsensitiveCompare</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, httpclientstring.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stricmp
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrCaseStr
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersParse
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSetURL
</UL>

<P><STRONG><a name="[195]"></a>HTTPStrExtract</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, httpclientstring.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnConnectionOpen
</UL>

<P><STRONG><a name="[19a]"></a>HTTPStrSearch</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, httpclientstring.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSetURL
</UL>

<P><STRONG><a name="[1af]"></a>stricmp</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, httpclientstring.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrInsensitiveCompare
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[18e]"></a>HTTPStrCaseStr</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, httpclientstring.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrInsensitiveCompare
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toupper
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersFind
</UL>

<P><STRONG><a name="[1a0]"></a>HTTPStrGetToken</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, httpclientstring.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersParse
</UL>

<P><STRONG><a name="[1ae]"></a>HTTPStrHToL</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, httpclientstring.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toupper
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnGetRemoteChunkLength
</UL>

<P><STRONG><a name="[1a7]"></a>HTTPStrLToH</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, httpclientstring.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientWriteData
</UL>

<P><STRONG><a name="[1b5]"></a>HTTPWrapperIsAscii</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, httpclientwrapper.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperIsAlNum
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperIsAlpha
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperToLower
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperToUpper
</UL>

<P><STRONG><a name="[1b4]"></a>HTTPWrapperToUpper</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, httpclientwrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperIsAscii
</UL>

<P><STRONG><a name="[1b6]"></a>HTTPWrapperToLower</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, httpclientwrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperIsAscii
</UL>

<P><STRONG><a name="[1b7]"></a>HTTPWrapperIsAlpha</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, httpclientwrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperIsAscii
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperIsAlNum
</UL>

<P><STRONG><a name="[1b8]"></a>HTTPWrapperIsAlNum</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, httpclientwrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperIsAlpha
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperIsAscii
</UL>

<P><STRONG><a name="[192]"></a>HTTPWrapperItoa</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, httpclientwrapper.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSendRequest
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersSend
</UL>

<P><STRONG><a name="[1bb]"></a>HTTPWrapperShutDown</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, httpclientwrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown
</UL>

<P><STRONG><a name="[18b]"></a>HTTPWrapperGetSocketError</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, httpclientwrapper.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnRecv
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnConnectionOpen
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSend
</UL>

<P><STRONG><a name="[1bd]"></a>HTTPWrapperInitRandomeNumber</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, httpclientwrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>

<P><STRONG><a name="[1c0]"></a>HTTPWrapperGetRandomeNumber</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, httpclientwrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via BLX)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d (via BLX)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz (via BLX)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>

<P><STRONG><a name="[17d]"></a>HTTPWrapperGetUpTime</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, httpclientwrapper.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientReadData
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientWriteData
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSendRequest
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSessionEvalTimeout
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSessionReset
</UL>

<P><STRONG><a name="[196]"></a>HTTPWrapperGetHostByName</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, httpclientwrapper.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnConnectionOpen
</UL>

<P><STRONG><a name="[1cc]"></a>http_client_task_init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, wm_httpclient_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[1cf]"></a>http_client_post</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, wm_httpclient_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientCloseRequest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientOpenRequest
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_http_client_proc
</UL>

<P><STRONG><a name="[268]"></a>tls_get_fwup_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updm_proc
</UL>

<P><STRONG><a name="[1d1]"></a>tls_cmd_get_ver</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_hwv_proc
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ver_proc
</UL>

<P><STRONG><a name="[1d2]"></a>tls_cmd_get_hw_ver</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hw_version
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rwhwv_proc
</UL>

<P><STRONG><a name="[1d4]"></a>tls_cmd_set_hw_ver</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_set_hw_version
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rwhwv_proc
</UL>

<P><STRONG><a name="[269]"></a>tls_set_fwup_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updm_proc
</UL>

<P><STRONG><a name="[1d6]"></a>tls_cmd_get_auto_mode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_close_default_socket
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_create_default_socket
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_default_socket_err
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_ps
</UL>

<P><STRONG><a name="[2b0]"></a>tls_cmd_get_socket_cfg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_create_default_socket
</UL>

<P><STRONG><a name="[2b4]"></a>tls_cmd_set_net_up</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_net_status_changed
</UL>

<P><STRONG><a name="[24e]"></a>tls_cmd_get_net_up</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wjoin_proc
</UL>

<P><STRONG><a name="[1d8]"></a>tls_cmd_init_socket_cfg</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtodec
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_ipaddr
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init
</UL>

<P><STRONG><a name="[1dc]"></a>tls_cmd_reset_sys</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateExt
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_reset_proc
</UL>

<P><STRONG><a name="[1e1]"></a>tls_cmd_pmtf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_to_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_pmtf_proc
</UL>

<P><STRONG><a name="[1e3]"></a>tls_cmd_reset_flash</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_to_default
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_reset_flash_proc
</UL>

<P><STRONG><a name="[1e5]"></a>tls_cmd_ps</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_standby
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sleep
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_ps
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_auto_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ps_proc
</UL>

<P><STRONG><a name="[1e9]"></a>tls_cmd_scan</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_scan
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wscan_proc
</UL>

<P><STRONG><a name="[1ec]"></a>tls_cmd_get_key</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_key_proc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_net
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_join_net
</UL>

<P><STRONG><a name="[1ed]"></a>tls_cmd_get_ssid</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ssid_proc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_net
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_join_net
</UL>

<P><STRONG><a name="[1ee]"></a>tls_cmd_get_bssid</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_get_connect_param_proc
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_bssid_proc
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_join_net
</UL>

<P><STRONG><a name="[1ef]"></a>tls_cmd_join_net</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_bssid
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_bssid
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_ssid
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_key
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_join
</UL>

<P><STRONG><a name="[1f2]"></a>tls_cmd_get_dnsname</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_dns_proc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_net
</UL>

<P><STRONG><a name="[1f3]"></a>tls_cmd_get_ip_info</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_nip_proc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_net
</UL>

<P><STRONG><a name="[1f4]"></a>tls_cmd_get_channel</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpchl_proc
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_chnl_proc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_net
</UL>

<P><STRONG><a name="[1f5]"></a>tls_cmd_get_encrypt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_encrypt_proc
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_net
</UL>

<P><STRONG><a name="[1f6]"></a>tls_cmd_create_net</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_encrypt
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_channel
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_ip_info
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_dnsname
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_ssid
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_key
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_join
</UL>

<P><STRONG><a name="[1f8]"></a>tls_cmd_get_wireless_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wprt_proc
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_get_sta_info
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_join
</UL>

<P><STRONG><a name="[1f9]"></a>tls_cmd_join</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_wireless_mode
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_net
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_join_net
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wjoin_proc
</UL>

<P><STRONG><a name="[1fa]"></a>tls_cmd_disconnect_network</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_disconnect
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_auto_connect_flag
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updm_proc
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wleave_proc
</UL>

<P><STRONG><a name="[1fd]"></a>tls_cmd_get_link_status</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_get_ethif
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_link_status_proc
</UL>

<P><STRONG><a name="[1ff]"></a>tls_cmd_set_wireless_mode</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wprt_proc
</UL>

<P><STRONG><a name="[201]"></a>tls_cmd_set_ssid</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ssid_proc
</UL>

<P><STRONG><a name="[202]"></a>tls_cmd_get_sta_detail</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_authed_sta_info
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dhcps_getip
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_get_sta_info
</UL>

<P><STRONG><a name="[206]"></a>tls_cmd_set_key</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_key_proc
</UL>

<P><STRONG><a name="[207]"></a>tls_cmd_set_encrypt</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_encrypt_proc
</UL>

<P><STRONG><a name="[208]"></a>tls_cmd_set_bssid</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_bssid_proc
</UL>

<P><STRONG><a name="[209]"></a>tls_cmd_get_original_ssid</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_get_connect_param_proc
</UL>

<P><STRONG><a name="[20a]"></a>tls_cmd_get_original_key</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_get_connect_param_proc
</UL>

<P><STRONG><a name="[20b]"></a>tls_cmd_set_hide_ssid</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_brd_ssid_proc
</UL>

<P><STRONG><a name="[20c]"></a>tls_cmd_get_hide_ssid</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_brd_ssid_proc
</UL>

<P><STRONG><a name="[20d]"></a>tls_cmd_set_channel</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_chnl_proc
</UL>

<P><STRONG><a name="[20e]"></a>tls_cmd_set_channellist</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_chll_proc
</UL>

<P><STRONG><a name="[20f]"></a>tls_cmd_get_channellist</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_chll_proc
</UL>

<P><STRONG><a name="[210]"></a>tls_cmd_set_region</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wreg_proc
</UL>

<P><STRONG><a name="[211]"></a>tls_cmd_get_region</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wreg_proc
</UL>

<P><STRONG><a name="[212]"></a>tls_cmd_set_hw_mode</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wbgr_proc
</UL>

<P><STRONG><a name="[213]"></a>tls_cmd_get_hw_mode</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wbgr_proc
</UL>

<P><STRONG><a name="[214]"></a>tls_cmd_set_adhoc_create_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_watc_proc
</UL>

<P><STRONG><a name="[215]"></a>tls_cmd_get_adhoc_create_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_watc_proc
</UL>

<P><STRONG><a name="[216]"></a>tls_cmd_set_wl_ps_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wpsm_proc
</UL>

<P><STRONG><a name="[217]"></a>tls_cmd_get_wl_ps_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wpsm_proc
</UL>

<P><STRONG><a name="[218]"></a>tls_cmd_set_roaming_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_warm_proc
</UL>

<P><STRONG><a name="[219]"></a>tls_cmd_get_roaming_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_warm_proc
</UL>

<P><STRONG><a name="[21a]"></a>tls_cmd_set_ip_info</STRONG> (Thumb, 282 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get_updp_mode
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_set_addr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_get_ethif
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dhcp_stop
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dhcp_start
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_nip_proc
</UL>

<P><STRONG><a name="[21f]"></a>tls_cmd_set_work_mode</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atm_proc
</UL>

<P><STRONG><a name="[220]"></a>tls_cmd_get_work_mode</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atm_proc
</UL>

<P><STRONG><a name="[221]"></a>tls_cmd_get_hostif_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_portm_proc
</UL>

<P><STRONG><a name="[222]"></a>tls_cmd_set_hostif_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_portm_proc
</UL>

<P><STRONG><a name="[223]"></a>tls_cmd_set_default_socket_params</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get_updp_mode
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atrm_proc
</UL>

<P><STRONG><a name="[224]"></a>tls_cmd_get_default_socket_params</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atrm_proc
</UL>

<P><STRONG><a name="[225]"></a>tls_cmd_get_uart_params</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_uart_proc
</UL>

<P><STRONG><a name="[246]"></a>tls_cmd_get_uart1_port</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_entm_proc
</UL>

<P><STRONG><a name="[226]"></a>tls_cmd_set_uart_params</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_check_baudrate
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get_updp_mode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_uart_proc
</UL>

<P><STRONG><a name="[228]"></a>tls_cmd_get_atlt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atlt_proc
</UL>

<P><STRONG><a name="[229]"></a>tls_cmd_set_atlt</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atlt_proc
</UL>

<P><STRONG><a name="[22a]"></a>tls_cmd_get_atpt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atpt_proc
</UL>

<P><STRONG><a name="[22b]"></a>tls_cmd_set_dnsname</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_dns_proc
</UL>

<P><STRONG><a name="[22c]"></a>tls_cmd_set_atpt</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atpt_proc
</UL>

<P><STRONG><a name="[22d]"></a>tls_cmd_get_espc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_espc_proc
</UL>

<P><STRONG><a name="[22e]"></a>tls_cmd_set_espc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_espc_proc
</UL>

<P><STRONG><a name="[22f]"></a>tls_cmd_get_espt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_espt_proc
</UL>

<P><STRONG><a name="[230]"></a>tls_cmd_set_espt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_espt_proc
</UL>

<P><STRONG><a name="[231]"></a>tls_cmd_get_iom</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_iom_proc
</UL>

<P><STRONG><a name="[232]"></a>tls_cmd_set_iom</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_iom_proc
</UL>

<P><STRONG><a name="[233]"></a>tls_cmd_get_cmdm</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_cmdm_proc
</UL>

<P><STRONG><a name="[234]"></a>tls_cmd_set_cmdm</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_cmdm_proc
</UL>

<P><STRONG><a name="[235]"></a>tls_cmd_set_oneshot</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_oneshot_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_set_oneshot_proc
</UL>

<P><STRONG><a name="[237]"></a>tls_cmd_get_oneshot</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_oneshot_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_set_oneshot_proc
</UL>

<P><STRONG><a name="[239]"></a>tls_cmd_set_sha1</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>

<P><STRONG><a name="[23a]"></a>tls_cmd_get_sha1</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>

<P><STRONG><a name="[23b]"></a>tls_cmd_get_pass</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_pass_proc
</UL>

<P><STRONG><a name="[23c]"></a>tls_cmd_set_pass</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_pass_proc
</UL>

<P><STRONG><a name="[23d]"></a>tls_cmd_get_warc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_warc_proc
</UL>

<P><STRONG><a name="[23e]"></a>tls_cmd_set_warc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_warc_proc
</UL>

<P><STRONG><a name="[23f]"></a>tls_cmd_set_webs</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_webs_proc
</UL>

<P><STRONG><a name="[240]"></a>tls_cmd_get_webs</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_webs_proc
</UL>

<P><STRONG><a name="[25f]"></a>tls_cmd_set_dbg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_dbg_proc
</UL>

<P><STRONG><a name="[241]"></a>tls_cmd_wr_flash</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_cmdp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_read
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>

<P><STRONG><a name="[2e0]"></a>tls_cmd_register_get_uart1_port</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init
</UL>

<P><STRONG><a name="[2e1]"></a>tls_cmd_register_set_uart1_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init
</UL>

<P><STRONG><a name="[247]"></a>tls_cmd_get_set_uart1_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updd_proc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sksnd_proc
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_entm_proc
</UL>

<P><STRONG><a name="[2e2]"></a>tls_cmd_register_set_uart1_sock_param</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init
</UL>

<P><STRONG><a name="[257]"></a>tls_cmd_get_set_uart1_sock_param</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sksnd_proc
</UL>

<P><STRONG><a name="[2de]"></a>tls_cmd_register_set_uart0_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init
</UL>

<P><STRONG><a name="[26e]"></a>tls_cmd_get_set_uart0_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updd_proc
</UL>

<P><STRONG><a name="[250]"></a>atcmd_filter_quotation</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rwhwv_proc
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_mac_proc
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_http_client_proc
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_pass_proc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_dns_proc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atrm_proc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_nip_proc
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_key_proc
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ssid_proc
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skghbn_proc
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skct_proc
</UL>

<P><STRONG><a name="[244]"></a>atcmd_err_resp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_atcmd_exec
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lptbd_proc
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpchrs_proc
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lppstp_proc
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lppstr_proc
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lprstr_proc
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lptstr_proc
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpchl_proc
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_spif_proc
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rwhwv_proc
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_hwv_proc
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_txg_proc
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_flsw_proc
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_flsr_proc
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rfw_proc
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rfr_proc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_regw_proc
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_regr_proc
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updd_proc
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updm_proc
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ver_proc
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_mac_proc
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_custdata_proc
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_http_client_proc
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updp_proc
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_dbg_proc
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_pass_proc
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_set_oneshot_proc
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_cmdm_proc
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_iom_proc
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_webs_proc
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_espt_proc
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_espc_proc
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atpt_proc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_dns_proc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atlt_proc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_uart_proc
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_portm_proc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atrm_proc
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atm_proc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_nip_proc
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_warc_proc
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_warm_proc
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wpsm_proc
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_watc_proc
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wbgr_proc
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wreg_proc
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_chll_proc
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_chnl_proc
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_get_connect_param_proc
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_brd_ssid_proc
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_bssid_proc
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_encrypt_proc
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_key_proc
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ssid_proc
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wprt_proc
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skghbn_proc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sktsrceip_proc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sktrptmode_proc
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skrcv_proc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sksnd_proc
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sksdf_proc
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skclose_proc
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skstt_proc
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skct_proc
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_get_sta_info
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_link_status_proc
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wscan_proc
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wleave_proc
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wjoin_proc
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_pmtf_proc
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_reset_flash_proc
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ps_proc
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_reset_proc
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_entm_proc
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_insdisp_proc
</UL>

<P><STRONG><a name="[245]"></a>atcmd_ok_resp</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_atcmd_exec
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lprfps_proc
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lppstp_proc
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lppstr_proc
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lprstp_proc
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lprstr_proc
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lptstp_proc
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lptstr_proc
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpchl_proc
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_spif_proc
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_txg_proc
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_flsw_proc
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rfw_proc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_regw_proc
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updm_proc
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_mac_proc
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updp_proc
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_dbg_proc
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_pass_proc
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_set_oneshot_proc
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_cmdm_proc
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_iom_proc
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_webs_proc
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_espt_proc
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_espc_proc
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atpt_proc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_dns_proc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atlt_proc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_uart_proc
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_portm_proc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atrm_proc
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atm_proc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_nip_proc
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_warc_proc
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_warm_proc
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wpsm_proc
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_watc_proc
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wbgr_proc
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wreg_proc
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_chll_proc
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_chnl_proc
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_brd_ssid_proc
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_bssid_proc
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_encrypt_proc
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_key_proc
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ssid_proc
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wprt_proc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sktrptmode_proc
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sksdf_proc
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wleave_proc
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_pmtf_proc
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_reset_flash_proc
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ps_proc
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_reset_proc
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_entm_proc
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_insdisp_proc
</UL>

<P><STRONG><a name="[27c]"></a>tls_atcmd_parse</STRONG> (Thumb, 516 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler
</UL>

<P><STRONG><a name="[27d]"></a>tls_atcmd_exec</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler
</UL>

<P><STRONG><a name="[1ea]"></a>tls_get_hostif</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tcp_recv
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cache_tcp_recv
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updd_proc
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_espt_proc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sktrptmode_proc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sksnd_proc
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skct_proc
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wscan_proc
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wjoin_proc
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_insdisp_proc
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_espc
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_atpt
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_atpt
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_atlt
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_atlt
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_uart_params
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_disconnect_network
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_join
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_scan
</UL>

<P><STRONG><a name="[254]"></a>tls_hostif_get_recvmit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cache_tcp_recv
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_recvmit
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_recvmit
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skstt_proc
</UL>

<P><STRONG><a name="[2b7]"></a>tls_hostif_fill_cmdrsp_hdr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ricmd_default_proc
</UL>

<P><STRONG><a name="[295]"></a>tls_hostif_fill_event_hdr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
</UL>

<P><STRONG><a name="[293]"></a>tls_hostif_fill_hdr</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler
</UL>

<P><STRONG><a name="[289]"></a>tls_hostif_get_tx_event_msg</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_del
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_process_cmdrsp
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_atcmd_loopback
</UL>

<P><STRONG><a name="[28e]"></a>tls_hostif_get_tx_msg</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_del
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_recv
</UL>

<P><STRONG><a name="[28f]"></a>tls_hostif_atcmd_loopback</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_tx_event_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler
</UL>

<P><STRONG><a name="[290]"></a>tls_hostif_process_cmdrsp</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_tx_event_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fwup_rsp
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_scan_cmplt
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_rpt
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_http_client_recv_callback
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_http_client_err_callback
</UL>

<P><STRONG><a name="[291]"></a>tls_hostif_cmd_handler</STRONG> (Thumb, 406 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_ricmd_exec
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_process_cmdrsp
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_atcmd_loopback
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_fill_hdr
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_atcmd_exec
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_atcmd_parse
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toupper
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_ricmd_line
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_atcmd_line
</UL>

<P><STRONG><a name="[297]"></a>tls_hostif_send_event_port_check</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_dis
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_join
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_conn
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tx_fail
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_crc_err
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_sta_leave
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_sta_join
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_linkdown
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_wjoin_failed
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_wjoin_success
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_init_cmplt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_net_status_changed
</UL>

<P><STRONG><a name="[294]"></a>tls_hostif_send_event</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_tx_event_msg
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_fill_hdr
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_fill_event_hdr
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_scan_cmplt
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_dis
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_join
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_conn
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tx_fail
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_crc_err
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_sta_leave
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_sta_join
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_linkdown
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_wjoin_failed
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_wjoin_success
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_init_cmplt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_net_status_changed
</UL>

<P><STRONG><a name="[296]"></a>tls_hostif_send_event_init_cmplt</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_port_check
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>

<P><STRONG><a name="[298]"></a>tls_hostif_send_event_wjoin_success</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_port_check
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_current_bss
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_net_status_changed
</UL>

<P><STRONG><a name="[299]"></a>tls_hostif_send_event_wjoin_failed</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_port_check
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_net_status_changed
</UL>

<P><STRONG><a name="[29a]"></a>tls_hostif_send_event_linkdown</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_port_check
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_net_status_changed
</UL>

<P><STRONG><a name="[29b]"></a>tls_hostif_send_event_sta_join</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_port_check
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>

<P><STRONG><a name="[29c]"></a>tls_hostif_send_event_sta_leave</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_port_check
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>

<P><STRONG><a name="[29d]"></a>tls_hostif_send_event_crc_err</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_port_check
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>

<P><STRONG><a name="[29e]"></a>tls_hostif_send_event_tx_fail</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_port_check
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>

<P><STRONG><a name="[29f]"></a>tls_hostif_send_event_tcp_conn</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_port_check
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_state_changed_RICMD
</UL>

<P><STRONG><a name="[2a0]"></a>tls_hostif_send_event_tcp_join</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_port_check
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_state_changed_RICMD
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_state_changed_ATCMD
</UL>

<P><STRONG><a name="[2a1]"></a>tls_hostif_send_event_tcp_dis</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_port_check
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_state_changed_RICMD
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_state_changed_ATCMD
</UL>

<P><STRONG><a name="[2a2]"></a>tls_hostif_send_event_scan_cmplt</STRONG> (Thumb, 362 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_process_cmdrsp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_wscan_cmplt
</UL>

<P><STRONG><a name="[89]"></a>tls_hostif_tx_timeout</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_hostif.o(.text)
</UL>
<P><STRONG><a name="[2a4]"></a>tls_hostif_init</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_scan_result_cb_register
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_start
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_create
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[2ae]"></a>tls_hostif_recv_data</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_recv
</UL>

<P><STRONG><a name="[2a8]"></a>tls_hostif_send_data</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_udp_sendto
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_send
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_net_send
</UL>

<P><STRONG><a name="[253]"></a>tls_cmd_get_socket_status</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_get_status
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_socket_state
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skstt_proc
</UL>

<P><STRONG><a name="[252]"></a>tls_cmd_get_socket_state</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_socket_status
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_recv
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skrcv_proc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sksnd_proc
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skct_proc
</UL>

<P><STRONG><a name="[2af]"></a>tls_hostif_create_default_socket</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_create
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_default_socket_create_tmr
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_socket_cfg
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_auto_mode
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_default_socket_setup
</UL>

<P><STRONG><a name="[2b2]"></a>tls_hostif_close_default_socket</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_close
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_recvmit
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_auto_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_net_status_changed
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_default_socket_setup
</UL>

<P><STRONG><a name="[251]"></a>tls_cmd_create_socket</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_create
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skct_proc
</UL>

<P><STRONG><a name="[255]"></a>tls_cmd_close_socket</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_close
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_recvmit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skclose_proc
</UL>

<P><STRONG><a name="[2bf]"></a>tls_cmd_get_default_socket</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_net_send
</UL>

<P><STRONG><a name="[256]"></a>tls_cmd_set_default_socket</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sksnd_proc
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sksdf_proc
</UL>

<P><STRONG><a name="[2b5]"></a>tls_hostif_set_net_status_callback</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_add_status_event
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init
</UL>

<P><STRONG><a name="[87]"></a>tls_hostif_http_client_recv_callback</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_process_cmdrsp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.text)
</UL>
<P><STRONG><a name="[88]"></a>tls_hostif_http_client_err_callback</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_process_cmdrsp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.text)
</UL>
<P><STRONG><a name="[2b6]"></a>ricmd_default_proc</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_cmdp_ri.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_fill_cmdrsp_hdr
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_ricmd_exec
</UL>

<P><STRONG><a name="[292]"></a>tls_ricmd_exec</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, wm_cmdp_ri.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ricmd_default_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler
</UL>

<P><STRONG><a name="[2be]"></a>uart_net_send</STRONG> (Thumb, 270 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_set_uart_rx_status
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_default_socket
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_data
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer2_start
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx
</UL>

<P><STRONG><a name="[2c2]"></a>parse_ricmd_line</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx
</UL>

<P><STRONG><a name="[2c4]"></a>uart_fwup_send</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_set_update_numer
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_sync
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc32
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fwup_rsp
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_get_current_session_id
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx
</UL>

<P><STRONG><a name="[2cd]"></a>uart_rx</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer2_stop
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fwup_send
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_ricmd_line
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_net_send
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_atcmd_line
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_process_cmdrsp
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer2_start
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_0_rx_task
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_1_rx_task
</UL>

<P><STRONG><a name="[98]"></a>tls_uart_1_rx_task</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_uart_task.o(.text)
</UL>
<P><STRONG><a name="[2d1]"></a>uart_tx</STRONG> (Thumb, 750 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_write
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_chars_start
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tcp_recv
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cache_tcp_recv
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_del
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_uint
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_recvmit
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_socket_state
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_0_tx_task
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_1_tx_task
</UL>

<P><STRONG><a name="[97]"></a>tls_uart_1_tx_task</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_uart_task.o(.text)
</UL>
<P><STRONG><a name="[9a]"></a>tls_uart_0_rx_task</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_uart_task.o(.text)
</UL>
<P><STRONG><a name="[99]"></a>tls_uart_0_tx_task</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_uart_task.o(.text)
</UL>
<P><STRONG><a name="[2d8]"></a>tls_uart_open</STRONG> (Thumb, 290 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_register
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_rx_register
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer2_irq_register
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_create
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_task_create
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init
</UL>

<P><STRONG><a name="[2dd]"></a>tls_uart_init</STRONG> (Thumb, 292 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_fc_status
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_port_init
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_open
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_set_net_status_callback
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_register_set_uart0_mode
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_register_set_uart1_sock_param
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_register_set_uart1_mode
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_register_get_uart1_port
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_init_socket_cfg
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_auto_mode
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[2ce]"></a>tls_timer2_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_uart_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx
</UL>

<P><STRONG><a name="[258]"></a>tls_timer2_start</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, wm_uart_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_net_send
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sksnd_proc
</UL>

<P><STRONG><a name="[a0]"></a>tls_timer2_isr</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, wm_uart_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_uart_timer.o(.text)
</UL>
<P><STRONG><a name="[2db]"></a>tls_timer2_irq_register</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_uart_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_register_handler
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_open
</UL>

<P><STRONG><a name="[86]"></a>wm_cmdp_oneshot_status_event</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, wm_cmdp_oneshot_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.text)
</UL>
<P><STRONG><a name="[2e6]"></a>wm_cmdp_oneshot_send_mac</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, wm_cmdp_oneshot_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_mac_addr
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_send
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_create
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_close
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_task
</UL>

<P><STRONG><a name="[25d]"></a>wm_cmdp_oneshot_task_init</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, wm_cmdp_oneshot_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateExt
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDeleteExt
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_set_oneshot_proc
</UL>

<P><STRONG><a name="[263]"></a>tls_wifi_get_customdata</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_custdata_proc
</UL>

<P><STRONG><a name="[2ec]"></a>tls_wifi_wait_disconnect</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_disconnect
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_get_ethif
</UL>

<P><STRONG><a name="[2ed]"></a>tls_wifi_clear_oneshot_data</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_start_oneshot
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_switch_channel_tim
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_dataframe_recv
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_jd_oneshot
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_lsd_oneshot
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_stop_oneshot
</UL>

<P><STRONG><a name="[2ef]"></a>tls_wifi_stop_oneshot</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_data_recv_cb_register
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_clear_oneshot_data
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_oneshot_flag
</UL>

<P><STRONG><a name="[2f1]"></a>tls_wifi_oneshot_connect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_oneshot_flag
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_dataframe_recv
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_jd_oneshot
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_lsd_oneshot
</UL>

<P><STRONG><a name="[2f4]"></a>tls_wifi_lsd_oneshot</STRONG> (Thumb, 790 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_decode_new_oneshot_data
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_connect_by_ssid_bssid
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_connect
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_clear_oneshot_data
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_is_zero_ether_addr
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_DA
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_compare_mac_addr
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_SA
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_dataframe_recv
</UL>

<P><STRONG><a name="[2fb]"></a>tls_wifi_jd_check_condition</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_jd_oneshot
</UL>

<P><STRONG><a name="[2fa]"></a>tls_wifi_jd_oneshot</STRONG> (Thumb, 548 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_jd_check_condition
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_connect
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_clear_oneshot_data
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_DA
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_compare_mac_addr
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_SA
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_dataframe_recv
</UL>

<P><STRONG><a name="[2fc]"></a>tls_wifi_decrypt_data</STRONG> (Thumb, 218 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_dataframe_recv
</UL>

<P><STRONG><a name="[238]"></a>tls_wifi_get_oneshot_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_enter
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_oneshot
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_auto_reconnect
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_status_changed
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_pbreq_recv
</UL>

<P><STRONG><a name="[a3]"></a>tls_wifi_dataframe_recv</STRONG> (Thumb, 522 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_parse_elems
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_connect_by_ssid_bssid
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_decrypt_data
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_jd_oneshot
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_lsd_oneshot
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_connect
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_clear_oneshot_data
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_is_zero_ether_addr
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_compare_ether_addr
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_wifi_oneshot.o(.text)
</UL>
<P><STRONG><a name="[a2]"></a>tls_wifi_switch_channel_tim</STRONG> (Thumb, 264 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_clear_oneshot_data
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_change_chanel
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_wifi_oneshot.o(.text)
</UL>
<P><STRONG><a name="[2fe]"></a>tls_wifi_start_oneshot</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_data_recv_cb_register
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_clear_oneshot_data
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateExt
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_oneshot_flag
</UL>

<P><STRONG><a name="[236]"></a>tls_wifi_set_oneshot_flag</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_listen_mode
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_start_oneshot
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_stop_oneshot
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_connect_by_bssid
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_connect_by_ssid_bssid
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_connect
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_exit
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_enter
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_oneshot
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Rest
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
</UL>

<P><STRONG><a name="[2f9]"></a>tls_wifi_oneshot_connect_by_ssid_bssid</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_ssid_bssid
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_oneshot_flag
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_dataframe_recv
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_lsd_oneshot
</UL>

<P><STRONG><a name="[301]"></a>tls_wifi_oneshot_connect_by_bssid</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_oneshot_flag
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_bssid
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[83]"></a>main</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_main
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_init
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P><STRONG><a name="[305]"></a>CreateUserTask</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDeviceInit
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Init
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_Init
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[310]"></a>RestoreParamToDefault</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[87b]"></a>_mutex_initialize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
</UL>

<P><STRONG><a name="[309]"></a>_mutex_acquire</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[30a]"></a>_mutex_release</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wm_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[a5]"></a>task_start</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, wm_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_init
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_auto_mode_run
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_slave_sel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_restore_param_from_backup
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_init
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_tx_gain
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_init
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_gd25qxx_drv_install
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_ethernet_init
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreParamToDefault
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateUserTask
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_mac_addr
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_init
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_add_status_event
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hw_version
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_task_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_main.o(.text)
</UL>
<P><STRONG><a name="[303]"></a>tls_main</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, wm_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[319]"></a>disp_task_stat_info</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskList
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>

<P><STRONG><a name="[a6]"></a>tls_os_timer_isr</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freeRtosTickIrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> clock.o(.text)
</UL>
<P><STRONG><a name="[31c]"></a>tls_os_timer_init</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, clock.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_register_handler
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[31d]"></a>pvPortMalloc</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, heap_2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateExt
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreate
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateExt
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[320]"></a>vPortFree</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, heap_2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateExt
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDeleteExt
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[321]"></a>vListInitialise</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateExt
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreate
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[339]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateExt
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[33d]"></a>vListInsertEnd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskIncrementTick
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[330]"></a>vListInsert</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[33b]"></a>vListRemove</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, list.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskIncrementTick
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[2e3]"></a>xQueueCreate</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_create
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>

<P><STRONG><a name="[2e8]"></a>xQueueCreateExt</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_init
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_init
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_task_init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateUserTask
</UL>

<P><STRONG><a name="[2a6]"></a>xQueueCreateCountingSemaphore</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_sync
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_create
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_init
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_init
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_create
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_tx_init
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_init
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_list_init
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_create
</UL>

<P><STRONG><a name="[282]"></a>xQueueGenericSend</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield (via BLX)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_chars
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer2_isr
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_send
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_status_event
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_timer_callback
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_async
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan_timer
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
</UL>

<P><STRONG><a name="[281]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_chars
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer2_isr
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_send
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_status_event
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_timer_callback
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_async
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan_timer
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
</UL>

<P><STRONG><a name="[27f]"></a>xQueueGenericReceive</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield (via BLX)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_sync
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_scheduler
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_task
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_receive
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_timer_callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_task
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_get_mgmt_txbuf
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_scan_task
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_task
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_timer_task
</UL>

<P><STRONG><a name="[2bb]"></a>xQueueReceiveFromISR</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_scheduler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_task
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_receive
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_task
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_timer_task
</UL>

<P><STRONG><a name="[32b]"></a>uxQueueMessagesWaiting</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[32c]"></a>vQueueDelete</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_sync
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_sync
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_init
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_sync
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
</UL>

<P><STRONG><a name="[2e9]"></a>vQueueDeleteExt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_init
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_task_init
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
</UL>

<P><STRONG><a name="[32d]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[1df]"></a>xTimerGenericCommand</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, rtostimers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDeviceInit
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_net_status_changed
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_start
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_reset_sys
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_SetTimer
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_StopTimer
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_list_init
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_power_save
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_start
</UL>

<P><STRONG><a name="[337]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rtostimers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[338]"></a>xTimerCreate</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, rtostimers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[1dd]"></a>xTimerCreateExt</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, rtostimers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDeviceInit
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_start_oneshot
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_create
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_reset_sys
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_SetTimer
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_mlme_init
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_list_init
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_create
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_create
</UL>

<P><STRONG><a name="[33a]"></a>xTimerIsTimerActive</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtostimers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[1ce]"></a>xTaskGenericCreate</STRONG> (Thumb, 356 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield (via BLX)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy (via BLX)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_init
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_init
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_main
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Init
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_task_create
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_task_init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_task_init
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateUserTask
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_thread_new
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_task_create
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_task_create
</UL>

<P><STRONG><a name="[33e]"></a>vTaskDelete</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield (via BLX)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[139]"></a>vTaskIncrementTick</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freeRtosTickIrqHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> portasm.o(PORT_ASM)
</UL>
<P><STRONG><a name="[31f]"></a>xTaskResumeAll</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskIncrementTick
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield (via BLX)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskList
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[31e]"></a>vTaskSuspendAll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskList
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[2c1]"></a>vTaskDelay</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield (via BLX)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsDmaWaitComplt
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_wait_disconnect
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_send_mac
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_net_send
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tcp_recv
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_udp_sendto
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Cloudfunc
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_auto_reconnect
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_buffer_acquire
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_erase
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_tx
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_scan_task
</UL>

<P><STRONG><a name="[340]"></a>uxTaskPriorityGet</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[341]"></a>vTaskPrioritySet</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield (via BLX)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[138]"></a>vTaskSwitchContext</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_chars
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_scheduler
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freeRtosTickIrqHandler
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDeviceInit
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_task
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer2_isr
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_receive
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_send
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_net_status_changed
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_start
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_status_event
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_reset_sys
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_SetTimer
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_timer_callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_async
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_task
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_list_init
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_power_save
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan_timer
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_timer_task
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_start
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> portasm.o(PORT_ASM)
</UL>
<P><STRONG><a name="[343]"></a>vTaskSuspend</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield (via BLX)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>

<P><STRONG><a name="[345]"></a>xTaskIsTaskSuspended</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
</UL>

<P><STRONG><a name="[344]"></a>vTaskResume</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIsTaskSuspended
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield (via BLX)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[346]"></a>xTaskResumeFromISR</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIsTaskSuspended
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>

<P><STRONG><a name="[304]"></a>vTaskStartScheduler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portDISABLE_INTERRUPTS (via BLX)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34a]"></a>vTaskEndScheduler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEndScheduler
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portDISABLE_INTERRUPTS (via BLX)
</UL>

<P><STRONG><a name="[1e0]"></a>xTaskGetTickCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDeviceInit
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_start
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_reset_sys
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_SetTimer
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_list_init
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_power_save
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_start
</UL>

<P><STRONG><a name="[1be]"></a>xTaskGetTickCountFromISR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDeviceInit
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_jd_oneshot
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_lsd_oneshot
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_recv
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_start
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_reset_sys
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperInitRandomeNumber
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetUpTime
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_SetTimer
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_buffer_release
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_get_ntp_timestamp
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_expire
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_scan_completed
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_defragment
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_reassemble_find
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_handle
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_probe_resp
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_beacon
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associated
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_nullfunc
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_assoc
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_wep_init
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_flush_by_age
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_add_randomness
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_tx
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_get_inact_sec
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_add
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_list_init
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_power_save
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;michael_mic_failure
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_rx_eapol
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_handle_timeout
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_start
</UL>

<P><STRONG><a name="[31a]"></a>vTaskList</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvListTaskWithinSingleList
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task_stat_info
</UL>

<P><STRONG><a name="[34e]"></a>vTaskStartTrace</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[34f]"></a>ulTaskEndTrace</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[329]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[32e]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[323]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[327]"></a>vTaskSetTimeOutState</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[328]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[324]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[350]"></a>uxTaskGetStackHighWaterMark</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usTaskCheckFreeStackSpace
</UL>

<P><STRONG><a name="[331]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[33c]"></a>pxPortInitialiseStack</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[349]"></a>xPortStartScheduler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortStartFirstTask (via BLX)
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[34b]"></a>vPortEndScheduler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, port.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskEndScheduler
</UL>

<P><STRONG><a name="[31b]"></a>freeRtosTickIrqHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskIncrementTick
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_isr
</UL>

<P><STRONG><a name="[28a]"></a>vPortEnterCritical</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portDISABLE_INTERRUPTS (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_write
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskEndTrace
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartTrace
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskPriorityGet
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerIsTimerActive
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueMessagesWaiting
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_init
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_chars_start
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_set_uart_rx_status
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tcp_recv
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cache_tcp_recv
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_tx_msg
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_tx_msg
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_tx_event_msg
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_add_status_event
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_exit
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_enter
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_proc_data
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_clear_error
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_reset
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_realloc_debug
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_remove_status_event
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_accept_cb
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_alloc_socket
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_free_socket
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_drv_register
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_scan_completed
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sta_flags
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atomic_sub_return
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_free_rxbuf
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_mgmt
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_delba
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_rd
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sta_flags
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sta_flags
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_and_clear_bit
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bit
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_addba_resp
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_enable_tx_mgmt_frm
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_get_mgmt_txbuf
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_req
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_put
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_get
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx_rate_ctrl
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_tx_start
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_free
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_deauth_disassoc
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_request_scan
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sta_flags
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_txmgmt_cmpt_task
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_mlme_task
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_change_iface
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[28d]"></a>vPortExitCritical</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portENABLE_INTERRUPTS (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_write
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskEndTrace
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartTrace
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskPriorityGet
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerIsTimerActive
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueMessagesWaiting
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_init
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_chars_start
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_set_uart_rx_status
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tcp_recv
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cache_tcp_recv
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_tx_msg
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_tx_msg
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_tx_event_msg
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_add_status_event
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_exit
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_enter
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_proc_data
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_clear_error
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_reset
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_realloc_debug
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_remove_status_event
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_accept_cb
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_alloc_socket
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_free_socket
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_drv_register
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_scan_completed
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sta_flags
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atomic_sub_return
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_free_rxbuf
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_mgmt
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_delba
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_rd
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sta_flags
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sta_flags
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_and_clear_bit
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bit
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_addba_resp
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_enable_tx_mgmt_frm
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_get_mgmt_txbuf
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_req
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_put
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_get
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx_rate_ctrl
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_tx_start
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_free
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_deauth_disassoc
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_request_scan
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sta_flags
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_txmgmt_cmpt_task
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_mlme_task
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_change_iface
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[342]"></a>vApplicationStackOverflowHook</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>

<P><STRONG><a name="[358]"></a>spiWaitIdle</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_read
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockRead
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockWrite
</UL>

<P><STRONG><a name="[35e]"></a>tls_spi_trans_type</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_endian
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMasterInit
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
</UL>

<P><STRONG><a name="[36e]"></a>tls_spi_setup</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMasterInit
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_probe
</UL>

<P><STRONG><a name="[36f]"></a>tls_spi_async</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_sync
</UL>

<P><STRONG><a name="[371]"></a>tls_spi_sync</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_async
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_create
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write32_then_writen
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_read
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write_then_read
</UL>

<P><STRONG><a name="[373]"></a>tls_spi_write_then_read</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_sync
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_message_init
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockRead
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_probe
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_read
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_wait_flash_ready
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_wait_write_enable
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_probe
</UL>

<P><STRONG><a name="[375]"></a>tls_spi_read</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, wm_hostspi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_sync
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiWaitIdle
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_message_init
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockRead
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>

<P><STRONG><a name="[376]"></a>tls_spi_write</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_sync
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiWaitIdle
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_message_init
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockWrite
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_write_enable
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_chip_erase
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_erase
</UL>

<P><STRONG><a name="[377]"></a>tls_spi_write32_then_writen</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_sync
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_message_init
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockWrite
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_page_write
</UL>

<P><STRONG><a name="[30c]"></a>tls_spi_init</STRONG> (Thumb, 356 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_write
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_cfg
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_trans_type
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_sclk
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_chipselect_mode
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_endian
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_create
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_mode
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateExt
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDeleteExt
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_register_handler
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_enable
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[30b]"></a>tls_spi_slave_sel</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_write
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[3ae]"></a>tls_timer_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_pwm_stop
</UL>

<P><STRONG><a name="[3ac]"></a>tls_timer_start</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_pwm_init
</UL>

<P><STRONG><a name="[37a]"></a>tls_timer_irq_register</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_register_handler
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_pwm_init
</UL>

<P><STRONG><a name="[384]"></a>UartRegInit</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_port_init
</UL>

<P><STRONG><a name="[227]"></a>tls_uart_check_baudrate</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_baud_rate
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_uart_params
</UL>

<P><STRONG><a name="[37b]"></a>tls_uart_set_baud_rate</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_check_baudrate
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_user_uart_set_baud_rate
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_config
</UL>

<P><STRONG><a name="[380]"></a>tls_uart_set_parity</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_user_uart_set_parity
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_config
</UL>

<P><STRONG><a name="[381]"></a>tls_uart_set_data_bits</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_config
</UL>

<P><STRONG><a name="[382]"></a>tls_uart_set_stop_bits</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_user_uart_set_stop_bits
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_config
</UL>

<P><STRONG><a name="[37d]"></a>tls_uart_set_flow_ctrl</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_config
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_fc_status
</UL>

<P><STRONG><a name="[2bd]"></a>tls_uart_set_fc_status</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_flow_ctrl
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_enable
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_chars
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart0_task_rx_cb
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart1_task_rx_cb
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_uart0_mode
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_uart1_mode
</UL>

<P><STRONG><a name="[249]"></a>tls_uart_rx_disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_entm_proc
</UL>

<P><STRONG><a name="[24a]"></a>tls_uart_rx_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_entm_proc
</UL>

<P><STRONG><a name="[37f]"></a>tls_uart_config</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_flow_ctrl
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_stop_bits
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_data_bits
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_parity
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_baud_rate
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_port_init
</UL>

<P><STRONG><a name="[2d3]"></a>tls_uart_write</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_cb
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
</UL>

<P><STRONG><a name="[2d4]"></a>tls_uart_tx_chars_start</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tcp_recv
</UL>

<P><STRONG><a name="[2c0]"></a>tls_set_uart_rx_status</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_isr
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_net_send
</UL>

<P><STRONG><a name="[383]"></a>tls_uart_disable_user_mode</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_isr
</UL>

<P><STRONG><a name="[ac]"></a>tls_uart_isr</STRONG> (Thumb, 318 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_disable_user_mode
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_enable
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_chars
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_set_uart_rx_status
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_uart.o(.text)
</UL>
<P><STRONG><a name="[2df]"></a>tls_uart_port_init</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_config
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartRegInit
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_register_handler
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_enable
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init
</UL>

<P><STRONG><a name="[2d9]"></a>tls_uart_rx_register</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_user_uart_rx_register
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_open
</UL>

<P><STRONG><a name="[2da]"></a>tls_uart_tx_register</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_user_uart_tx_register
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_open
</UL>

<P><STRONG><a name="[385]"></a>tls_uart_copy_rxbuf</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, wm_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>

<P><STRONG><a name="[386]"></a>tls_uart_cfg_user_mode</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
</UL>

<P><STRONG><a name="[387]"></a>tls_uart_tx</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_write
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_register
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_chars_start
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_sync
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_UartSend
</UL>

<P><STRONG><a name="[388]"></a>tls_uart_tx_sync</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, wm_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[389]"></a>tls_user_uart_rx_register</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_rx_register
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
</UL>

<P><STRONG><a name="[38a]"></a>tls_user_uart_tx_register</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_register
</UL>

<P><STRONG><a name="[38b]"></a>tls_user_uart_set_parity</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_parity
</UL>

<P><STRONG><a name="[38c]"></a>tls_user_uart_set_baud_rate</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_baud_rate
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
</UL>

<P><STRONG><a name="[38d]"></a>tls_user_uart_set_stop_bits</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_stop_bits
</UL>

<P><STRONG><a name="[35b]"></a>tlsDmaWaitComplt</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wm_dma.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockRead
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockWrite
</UL>

<P><STRONG><a name="[35a]"></a>tlsDmaStart</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wm_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockRead
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockWrite
</UL>

<P><STRONG><a name="[38e]"></a>tlsDmaStop</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsDmaFree
</UL>

<P><STRONG><a name="[359]"></a>tlsDmaRequest</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, wm_dma.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockRead
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockWrite
</UL>

<P><STRONG><a name="[35c]"></a>tlsDmaFree</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, wm_dma.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsDmaStop
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockRead
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockWrite
</UL>

<P><STRONG><a name="[356]"></a>tlsDmaInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMasterInit
</UL>

<P><STRONG><a name="[276]"></a>tls_efuse_read</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_efuse.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_read
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_tx_gain
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_mac_addr
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_spif_proc
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hw_version
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_hed_rf65_init
</UL>

<P><STRONG><a name="[274]"></a>tls_efuse_write</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_efuse.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_set_tx_gain
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_restore_param_from_backup
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_set_mac_addr
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lppstp_proc
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_spif_proc
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_txg_proc
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_set_hw_version
</UL>

<P><STRONG><a name="[2e7]"></a>tls_get_mac_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_efuse.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_efuse_read
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_decode_new_oneshot_data
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_send_mac
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_GetMac
</UL>

<P><STRONG><a name="[267]"></a>tls_set_mac_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_efuse.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_efuse_write
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_mac_proc
</UL>

<P><STRONG><a name="[313]"></a>tls_get_tx_gain</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm_efuse.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_efuse_read
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[38f]"></a>tls_set_tx_gain</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_efuse.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_efuse_write
</UL>

<P><STRONG><a name="[1d3]"></a>tls_get_hw_version</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_efuse.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_efuse_read
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_hw_ver
</UL>

<P><STRONG><a name="[1d5]"></a>tls_set_hw_version</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_efuse.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_efuse_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_hw_ver
</UL>

<P><STRONG><a name="[243]"></a>tls_fls_read</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, wm_fls.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_restore_param_from_backup
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_init
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_load_user
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_efuse_read
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_flsr_proc
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_wr_flash
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ReadDataFromFlash
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_to_flash
</UL>

<P><STRONG><a name="[392]"></a>tls_fls_page_write</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, wm_fls.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_flush_sector
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write
</UL>

<P><STRONG><a name="[242]"></a>tls_fls_write</STRONG> (Thumb, 352 bytes, Stack size 0 bytes, wm_fls.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_page_write
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_restore_param_from_backup
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_save_user_default
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_efuse_write
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_flsw_proc
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_wr_flash
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_WriteDataToFlash
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_to_flash
</UL>

<P><STRONG><a name="[394]"></a>tls_fls_fast_write_init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, wm_fls.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_enter
</UL>

<P><STRONG><a name="[395]"></a>tls_fls_fast_write_destroy</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_fls.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_flush_sector
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
</UL>

<P><STRONG><a name="[396]"></a>tls_fls_fast_write</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, wm_fls.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_flush_sector
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
</UL>

<P><STRONG><a name="[397]"></a>tls_fls_erase</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, wm_fls.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>

<P><STRONG><a name="[398]"></a>tls_fls_get_param</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, wm_fls.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>

<P><STRONG><a name="[399]"></a>tls_fls_drv_register</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, wm_fls.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_gd25qxx_drv_install
</UL>

<P><STRONG><a name="[39a]"></a>tls_fls_probe</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, wm_fls.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write_then_read
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_setup
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_low
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_high
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_gd25qxx_drv_install
</UL>

<P><STRONG><a name="[30d]"></a>tls_fls_init</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wm_fls.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[39b]"></a>fls_cs_low</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_fls_gd25qxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_write
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_write_enable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_probe
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_chip_erase
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_erase
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_page_write
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_read
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_wait_flash_ready
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_wait_write_enable
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_probe
</UL>

<P><STRONG><a name="[39c]"></a>fls_cs_high</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_fls_gd25qxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_write
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_write_enable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_probe
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_chip_erase
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_erase
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_page_write
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_read
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_wait_flash_ready
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_wait_write_enable
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_probe
</UL>

<P><STRONG><a name="[30e]"></a>tls_fls_gd25qxx_drv_install</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_fls_gd25qxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_probe
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_drv_register
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[378]"></a>tls_gpio_cfg</STRONG> (Thumb, 280 bytes, Stack size 0 bytes, wm_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_slave_sel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScanTimerProc
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_pwm_init
</UL>

<P><STRONG><a name="[509]"></a>tls_gpio_read</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScanTimerProc
</UL>

<P><STRONG><a name="[379]"></a>tls_gpio_write</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, wm_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_slave_sel
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_timer_cb
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_low
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_high
</UL>

<P><STRONG><a name="[3a1]"></a>tls_gpio_int_enable</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, wm_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_enable
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>

<P><STRONG><a name="[3a2]"></a>tls_gpio_int_disable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_disable
</UL>

<P><STRONG><a name="[3a3]"></a>tls_gpio_isr_register</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_register_handler
</UL>

<P><STRONG><a name="[ae]"></a>tls_watchdog_isr</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wm_cpu.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wm_cpu.o(.text)
</UL>
<P><STRONG><a name="[3a4]"></a>tls_watchdog_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, wm_cpu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_register_handler
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_enable
</UL>

<P><STRONG><a name="[1db]"></a>tls_sys_reset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_cpu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimerProc
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Reboot
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_rf65
</UL>

<P><STRONG><a name="[36d]"></a>tls_sys_clk_set</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_cpu.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_pwm_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_scheduler
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_continue_transfer
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_set_pwm_flag
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_sleep
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_wake_up
</UL>

<P><STRONG><a name="[af]"></a>tls_irq_handler_dummy</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wm_irq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wm_irq.o(.text)
</UL>
<P><STRONG><a name="[302]"></a>tls_irq_init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, wm_irq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e5]"></a>tls_irq_register_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_irq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer_irq_register
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_init
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_port_init
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer2_irq_register
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_watchdog_init
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_isr_register
</UL>

<P><STRONG><a name="[24b]"></a>tls_irq_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_irq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer_irq_register
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_init
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_port_init
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer2_irq_register
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_entm_proc
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_watchdog_init
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_int_enable
</UL>

<P><STRONG><a name="[248]"></a>tls_irq_disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_irq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_entm_proc
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_int_disable
</UL>

<P><STRONG><a name="[8a5]"></a>freeRtos_irq_isr_handler</STRONG> (Thumb, 448 bytes, Stack size 0 bytes, wm_irq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freeRtosirqHandler (via BLX)
</UL>

<P><STRONG><a name="[1de]"></a>tls_get_isr_count</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_irq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_chars
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_write
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_scheduler
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDeviceInit
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_task
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer2_isr
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_receive
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_send
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_net_status_changed
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_start
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_status_event
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_reset_sys
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_SetTimer
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_timer_callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_async
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_task
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_list_init
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_power_save
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan_timer
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_timer_task
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_start
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
</UL>

<P><STRONG><a name="[b0]"></a>pwm_timer_cb</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, wm_pwm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_pwm.o(.text)
</UL>
<P><STRONG><a name="[3a7]"></a>tls_pwm_duty_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm_pwm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_count
</UL>

<P><STRONG><a name="[3a8]"></a>tls_pwm_freq_set</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wm_pwm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_count
</UL>

<P><STRONG><a name="[3a9]"></a>tls_pwm_freq_duty_set</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, wm_pwm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_count
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_pwm_init
</UL>

<P><STRONG><a name="[3aa]"></a>tls_set_pwm_flag</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm_pwm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_clk_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_pwm_stop
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_pwm_init
</UL>

<P><STRONG><a name="[3ab]"></a>tls_pwm_init</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, wm_pwm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer_irq_register
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer_start
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_cfg
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_set_pwm_flag
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_pwm_freq_duty_set
</UL>

<P><STRONG><a name="[3ad]"></a>tls_pwm_stop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_pwm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer_stop
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_set_pwm_flag
</UL>

<P><STRONG><a name="[3a5]"></a>tls_get_pwm_flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_clk_set
</UL>

<P><STRONG><a name="[3af]"></a>accept</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tls_sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_CloudRecvfunc
</UL>

<P><STRONG><a name="[197]"></a>bind</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tls_sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnConnectionOpen
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ListenClient
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_BcInit
</UL>

<P><STRONG><a name="[180]"></a>shutdown</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tls_sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperShutDown
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnConnectionClose
</UL>

<P><STRONG><a name="[181]"></a>closesocket</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tls_sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnConnectionClose
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Cloudfunc
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ListenClient
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ConnectToCloud
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_CloudRecvfunc
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Sleep
</UL>

<P><STRONG><a name="[198]"></a>connect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tls_sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnConnectionOpen
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ConnectToCloud
</UL>

<P><STRONG><a name="[3b5]"></a>getsockname</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tls_sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockname
</UL>

<P><STRONG><a name="[3b7]"></a>getpeername</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tls_sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getpeername
</UL>

<P><STRONG><a name="[3b9]"></a>setsockopt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tls_sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
</UL>
<BR>[Called By]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_BcInit
</UL>

<P><STRONG><a name="[3bb]"></a>getsockopt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tls_sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
</UL>

<P><STRONG><a name="[3bd]"></a>listen</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tls_sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_listen
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ListenClient
</UL>

<P><STRONG><a name="[1a2]"></a>recv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tls_sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnRecv
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_CloudRecvfunc
</UL>

<P><STRONG><a name="[3c0]"></a>recvfrom</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_CloudRecvfunc
</UL>

<P><STRONG><a name="[18a]"></a>send</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tls_sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSend
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_SendTcpData
</UL>

<P><STRONG><a name="[3c3]"></a>sendto</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_SendUdpData
</UL>

<P><STRONG><a name="[194]"></a>socket</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tls_sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnConnectionOpen
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ListenClient
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ConnectToCloud
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_BcInit
</UL>

<P><STRONG><a name="[189]"></a>select</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tls_sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnRecv
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSend
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_CloudRecvfunc
</UL>

<P><STRONG><a name="[3c7]"></a>ioctlsocket</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tls_sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ioctl
</UL>

<P><STRONG><a name="[1c5]"></a>gethostbyname</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tls_sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_gethostbyname
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skghbn_proc
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skct_proc
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetHostByName
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ConnectToCloud
</UL>

<P><STRONG><a name="[25a]"></a>tls_net_set_sourceip</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sktsrceip_proc
</UL>

<P><STRONG><a name="[259]"></a>tls_net_get_sourceip</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sktsrceip_proc
</UL>

<P><STRONG><a name="[3ca]"></a>get_server_conn</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_server_conn
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_get_status
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_server_conn
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_do_write
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_recv_cb
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_poll_cb
</UL>

<P><STRONG><a name="[3eb]"></a>tls_net_get_socket</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_udp_sendto
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_send
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_get_status
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_close
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_connect
</UL>

<P><STRONG><a name="[2b1]"></a>tls_socket_create</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_alloc_socket
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_free_socket
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_send_mac
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_create_default_socket
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_socket
</UL>

<P><STRONG><a name="[2ac]"></a>tls_socket_get_status</STRONG> (Thumb, 292 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_get_ethif
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_net_get_socket
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_server_conn
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_socket_status
</UL>

<P><STRONG><a name="[2b3]"></a>tls_socket_close</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_net_get_socket
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_send_mac
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_close_default_socket
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_close_socket
</UL>

<P><STRONG><a name="[2aa]"></a>tls_socket_udp_sendto</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_net_get_socket
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_data
</UL>

<P><STRONG><a name="[2a9]"></a>tls_socket_send</STRONG> (Thumb, 226 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_net_get_socket
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_msg
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_send_mac
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_data
</UL>

<P><STRONG><a name="[3ef]"></a>tls_net_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_ethernet_init
</UL>

<P><STRONG><a name="[e8]"></a>tcpip_input</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, tcpip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernet.o(.text)
</UL>
<P><STRONG><a name="[3ec]"></a>tcpip_callback_with_block</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, tcpip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_udp_sendto
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_create
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_close
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_gethostbyname
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_callback
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free_callback
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_msg
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
</UL>

<P><STRONG><a name="[3f8]"></a>tcpip_timeout</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, tcpip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
</UL>

<P><STRONG><a name="[3f9]"></a>tcpip_untimeout</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, tcpip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
</UL>

<P><STRONG><a name="[3fa]"></a>tcpip_apimsg</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, tcpip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_write_partly
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_send
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recved
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_listen_with_backlog
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_disconnect
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_connect
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_bind
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close_shutdown
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
</UL>

<P><STRONG><a name="[3fb]"></a>tcpip_netifapi</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, tcpip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netifapi_netif_common
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netifapi_netif_set_addr
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netifapi_netif_add
</UL>

<P><STRONG><a name="[3fc]"></a>tcpip_callbackmsg_new</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, tcpip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>

<P><STRONG><a name="[3fd]"></a>tcpip_callbackmsg_delete</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tcpip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>

<P><STRONG><a name="[3fe]"></a>tcpip_trycallback</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tcpip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
</UL>

<P><STRONG><a name="[3ff]"></a>tcpip_init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, tcpip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_thread_new
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tcpip_stack_init
</UL>

<P><STRONG><a name="[402]"></a>pbuf_free_callback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tcpip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
</UL>

<P><STRONG><a name="[403]"></a>mem_free_callback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tcpip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
</UL>

<P><STRONG><a name="[404]"></a>netconn_new_with_proto_and_callback</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
</UL>

<P><STRONG><a name="[407]"></a>netconn_delete</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
</UL>

<P><STRONG><a name="[409]"></a>netconn_getaddr</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
</UL>

<P><STRONG><a name="[40c]"></a>netconn_bind</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
</UL>

<P><STRONG><a name="[40d]"></a>netconn_connect</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
</UL>

<P><STRONG><a name="[40e]"></a>netconn_disconnect</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
</UL>

<P><STRONG><a name="[40f]"></a>netconn_listen_with_backlog</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_listen
</UL>

<P><STRONG><a name="[410]"></a>netconn_accept</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
</UL>

<P><STRONG><a name="[412]"></a>netconn_recv_tcp_pbuf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>

<P><STRONG><a name="[413]"></a>netconn_recv</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>

<P><STRONG><a name="[414]"></a>netconn_recved</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>

<P><STRONG><a name="[415]"></a>netconn_send</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_sendto
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
</UL>

<P><STRONG><a name="[416]"></a>netconn_sendto</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, api_lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_send
</UL>

<P><STRONG><a name="[417]"></a>netconn_write_partly</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
</UL>

<P><STRONG><a name="[418]"></a>netconn_close</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, api_lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close_shutdown
</UL>

<P><STRONG><a name="[41a]"></a>netconn_shutdown</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_shutdown
</UL>

<P><STRONG><a name="[41b]"></a>netconn_gethostbyname</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrinfo
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_gethostbyname_r
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_gethostbyname
</UL>

<P><STRONG><a name="[408]"></a>netconn_free</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_set_invalid
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
</UL>

<P><STRONG><a name="[405]"></a>netconn_alloc</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
</UL>

<P><STRONG><a name="[bf]"></a>do_newconn</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[c0]"></a>do_delconn</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_valid
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_remove
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[c2]"></a>do_bind</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_bind
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[c3]"></a>do_connect</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_connect
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_connect
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>do_disconnect</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_disconnect
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[c5]"></a>do_listen</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_set_invalid
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_with_backlog
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_accept
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>do_send</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_send
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_send
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[c6]"></a>do_recv</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[c8]"></a>do_write</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[c1]"></a>do_getaddr</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[ca]"></a>do_close</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[c9]"></a>do_gethostbyname</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_gethostbyname
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[431]"></a>netbuf_new</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, netbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>

<P><STRONG><a name="[41d]"></a>netbuf_delete</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, netbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
</UL>

<P><STRONG><a name="[432]"></a>netbuf_alloc</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, netbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>

<P><STRONG><a name="[433]"></a>netbuf_free</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, netbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
</UL>

<P><STRONG><a name="[434]"></a>netbuf_ref</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, netbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
</UL>

<P><STRONG><a name="[435]"></a>netbuf_chain</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, netbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
</UL>

<P><STRONG><a name="[3c9]"></a>lwip_gethostbyname</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, netdb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_gethostbyname
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gethostbyname
</UL>

<P><STRONG><a name="[437]"></a>lwip_gethostbyname_r</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, netdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_gethostbyname
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[438]"></a>lwip_freeaddrinfo</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, netdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>

<P><STRONG><a name="[439]"></a>lwip_getaddrinfo</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, netdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_gethostbyname
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[d4]"></a>do_netifapi_netif_add</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, netifapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netifapi.o(.text)
</UL>
<P><STRONG><a name="[d5]"></a>do_netifapi_netif_set_addr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, netifapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netifapi.o(.text)
</UL>
<P><STRONG><a name="[d6]"></a>do_netifapi_netif_common</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, netifapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netifapi.o(.text)
</UL>
<P><STRONG><a name="[43c]"></a>netifapi_netif_add</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, netifapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_netifapi
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tcpip_stack_init
</UL>

<P><STRONG><a name="[43d]"></a>netifapi_netif_set_addr</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, netifapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_netifapi
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_set_addr
</UL>

<P><STRONG><a name="[43e]"></a>netifapi_netif_common</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, netifapi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_netifapi
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dhcp_stop
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dhcp_start
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_set_down
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_set_up
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tcpip_stack_init
</UL>

<P><STRONG><a name="[473]"></a>lwip_socket_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[1bc]"></a>get_socket</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetSocketError
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_fcntl
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_shutdown
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_listen
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ioctl
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
</UL>

<P><STRONG><a name="[3b0]"></a>lwip_accept</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_socket
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept
</UL>

<P><STRONG><a name="[3b1]"></a>lwip_bind</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_bind
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bind
</UL>

<P><STRONG><a name="[3b3]"></a>lwip_close</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;closesocket
</UL>

<P><STRONG><a name="[3b4]"></a>lwip_connect</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_disconnect
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connect
</UL>

<P><STRONG><a name="[3be]"></a>lwip_listen</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_listen_with_backlog
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;listen
</UL>

<P><STRONG><a name="[3c1]"></a>lwip_recvfrom</STRONG> (Thumb, 438 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recved
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_tcp_pbuf
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_read
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recvfrom
</UL>

<P><STRONG><a name="[440]"></a>lwip_read</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>

<P><STRONG><a name="[3bf]"></a>lwip_recv</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv
</UL>

<P><STRONG><a name="[3c4]"></a>lwip_sendto</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_ref
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_free
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_send
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendto
</UL>

<P><STRONG><a name="[3c2]"></a>lwip_send</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_write_partly
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_write
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
</UL>

<P><STRONG><a name="[3c5]"></a>lwip_socket</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_socket
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket
</UL>

<P><STRONG><a name="[441]"></a>lwip_write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
</UL>

<P><STRONG><a name="[3c6]"></a>lwip_select</STRONG> (Thumb, 586 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
</UL>

<P><STRONG><a name="[3b2]"></a>lwip_shutdown</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown
</UL>

<P><STRONG><a name="[3b8]"></a>lwip_getpeername</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpeername
</UL>

<P><STRONG><a name="[3b6]"></a>lwip_getsockname</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getsockname
</UL>

<P><STRONG><a name="[3bc]"></a>lwip_getsockopt</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getsockopt
</UL>

<P><STRONG><a name="[3ba]"></a>lwip_setsockopt</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setsockopt
</UL>

<P><STRONG><a name="[3c8]"></a>lwip_ioctl</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ioctlsocket
</UL>

<P><STRONG><a name="[445]"></a>lwip_fcntl</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
</UL>

<P><STRONG><a name="[447]"></a>lwip_htons</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, def.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ListenClient
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ConnectToCloud
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_BcInit
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo_partial
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_recv
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_RecvCb
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSNameErrGenAndSend
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSAnswerGenAndSend
</UL>

<P><STRONG><a name="[446]"></a>lwip_ntohs</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, def.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_RecvCb
</UL>

<P><STRONG><a name="[449]"></a>lwip_htonl</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, def.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ListenClient
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ConnectToCloud
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_BcInit
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_Start
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_aton
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_netmask_valid
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_recv
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_parse_reply
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_handle_ack
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_create_msg
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSAnswerGenAndSend
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPNakGenAndSend
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPOfferGenAndSend
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPAckGenAndSend
</UL>

<P><STRONG><a name="[448]"></a>lwip_ntohl</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, def.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_Start
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_recv
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_recv
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_parse_reply
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_reboot
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_select
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_RecvCb
</UL>

<P><STRONG><a name="[457]"></a>dhcp_renew</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_set_state
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_delete_msg
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_create_msg
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_short
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_trailer
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_coarse_tmr
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_timeout
</UL>

<P><STRONG><a name="[459]"></a>dhcp_coarse_tmr</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_renew
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_rebind
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_timer_coarse
</UL>

<P><STRONG><a name="[45b]"></a>dhcp_release</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_netmask
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_gw
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_down
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_set_state
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_delete_msg
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_create_msg
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_trailer
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_timeout
</UL>

<P><STRONG><a name="[45f]"></a>dhcp_fine_tmr</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_timer_fine
</UL>

<P><STRONG><a name="[464]"></a>dhcp_set_struct</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dhcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>

<P><STRONG><a name="[465]"></a>dhcp_cleanup</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dhcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>

<P><STRONG><a name="[ee]"></a>dhcp_stop</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_set_state
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernet.o(.text)
</UL>
<P><STRONG><a name="[ed]"></a>dhcp_start</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_stop
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_discover
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_connect
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernet.o(.text)
</UL>
<P><STRONG><a name="[468]"></a>dhcp_inform</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, dhcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_set_state
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_delete_msg
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_create_msg
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_short
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_trailer
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>

<P><STRONG><a name="[469]"></a>dhcp_network_changed</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, dhcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_down
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_reboot
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_discover
</UL>
<BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_link_up
</UL>

<P><STRONG><a name="[463]"></a>dns_setserver</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, dns.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_dns_setserver
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_init
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_handle_ack
</UL>

<P><STRONG><a name="[46b]"></a>dns_init</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_setserver
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[4d8]"></a>dns_getserver</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dns.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_get_ethif
</UL>

<P><STRONG><a name="[46e]"></a>dns_tmr</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_check_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_timer
</UL>

<P><STRONG><a name="[42e]"></a>dns_gethostbyname</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_enqueue
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_gethostbyname
</UL>

<P><STRONG><a name="[400]"></a>lwip_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_init
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_init
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_init
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_init
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_init
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_init
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
</UL>

<P><STRONG><a name="[472]"></a>netif_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, netif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[45d]"></a>netif_set_gw</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, netif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_release
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_recv
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_bind
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>

<P><STRONG><a name="[45e]"></a>netif_set_netmask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, netif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_release
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_recv
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_bind
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>

<P><STRONG><a name="[45c]"></a>netif_set_ipaddr</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, netif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_release
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_recv
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_bind
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>

<P><STRONG><a name="[43b]"></a>netif_set_addr</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, netif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_netmask
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_gw
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_netifapi_netif_set_addr
</UL>

<P><STRONG><a name="[43a]"></a>netif_add</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, netif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_netifapi_netif_add
</UL>

<P><STRONG><a name="[ea]"></a>netif_set_default</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, netif.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ethernet.o(.text)
</UL>
<P><STRONG><a name="[f0]"></a>netif_set_down</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, netif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_cleanup_netif
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_remove
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_network_changed
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_release
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_recv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernet.o(.text)
</UL>
<P><STRONG><a name="[478]"></a>netif_remove</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, netif.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_down
</UL>

<P><STRONG><a name="[ef]"></a>netif_set_up</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, netif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_bind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernet.o(.text)
</UL>
<P><STRONG><a name="[4d6]"></a>netif_set_status_callback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, netif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tcpip_stack_init
</UL>

<P><STRONG><a name="[47a]"></a>netif_set_link_up</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, netif.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_network_changed
</UL>

<P><STRONG><a name="[2ad]"></a>pbuf_free</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, pbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tcp_recv
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cache_tcp_recv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_recv
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipfrag_free_pbuf_custom
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_coalesce
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_dechain
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_recv
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_delete_msg
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_recv
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_ref
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_free
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_alloc
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free_int
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_shutdown
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_do_send
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_udp_recv_cb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_recv_cb
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sk_free_pbuf_custom_fn
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_RecvCb
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSNameErrGenAndSend
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSAnswerGenAndSend
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_RecvCb
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPNakGenAndSend
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPOfferGenAndSend
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPAckGenAndSend
</UL>

<P><STRONG><a name="[3ed]"></a>pbuf_alloc</STRONG> (Thumb, 262 bytes, Stack size 0 bytes, pbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_udp_sendto
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_send
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pbuf_prealloc
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_coalesce
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_create_msg
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_ref
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_alloc
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSNameErrGenAndSend
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSAnswerGenAndSend
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPNakGenAndSend
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPOfferGenAndSend
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPAckGenAndSend
</UL>

<P><STRONG><a name="[3dc]"></a>pbuf_alloced_custom</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, pbuf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_recv_cb
</UL>

<P><STRONG><a name="[452]"></a>pbuf_realloc</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, pbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_inform
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_release
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_renew
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_reboot
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_rebind
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_select
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_discover
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPNakGenAndSend
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPOfferGenAndSend
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPAckGenAndSend
</UL>

<P><STRONG><a name="[484]"></a>pbuf_header</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, pbuf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
</UL>

<P><STRONG><a name="[4a0]"></a>pbuf_clen</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pbuf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[47b]"></a>pbuf_ref</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, pbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
</UL>

<P><STRONG><a name="[436]"></a>pbuf_cat</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, pbuf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_chain
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[47c]"></a>pbuf_chain</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
</UL>

<P><STRONG><a name="[47d]"></a>pbuf_dechain</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, pbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>

<P><STRONG><a name="[41c]"></a>pbuf_copy</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, pbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_coalesce
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
</UL>

<P><STRONG><a name="[2e4]"></a>pbuf_copy_partial</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, pbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tcp_recv
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cache_tcp_recv
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_recv
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_parse_reply
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_RecvCb
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_RecvCb
</UL>

<P><STRONG><a name="[47e]"></a>pbuf_take</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, pbuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSNameErrGenAndSend
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSAnswerGenAndSend
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPNakGenAndSend
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPOfferGenAndSend
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPAckGenAndSend
</UL>

<P><STRONG><a name="[47f]"></a>pbuf_coalesce</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, pbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>

<P><STRONG><a name="[481]"></a>pbuf_get_at</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, pbuf.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_memcmp
</UL>

<P><STRONG><a name="[480]"></a>pbuf_memcmp</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, pbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_get_at
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_memfind
</UL>

<P><STRONG><a name="[482]"></a>pbuf_memfind</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, pbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_strstr
</UL>

<P><STRONG><a name="[483]"></a>pbuf_strstr</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, pbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_memfind
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[4bc]"></a>raw_input</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, raw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[428]"></a>raw_bind</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, raw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_bind
</UL>

<P><STRONG><a name="[429]"></a>raw_connect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, raw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connect
</UL>

<P><STRONG><a name="[430]"></a>raw_recv</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, raw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
</UL>

<P><STRONG><a name="[42c]"></a>raw_sendto</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, raw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_send
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_send
</UL>

<P><STRONG><a name="[42d]"></a>raw_send</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, raw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_send
</UL>

<P><STRONG><a name="[426]"></a>raw_remove</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, raw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_delconn
</UL>

<P><STRONG><a name="[42f]"></a>raw_new</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, raw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
</UL>

<P><STRONG><a name="[470]"></a>stats_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stats.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[475]"></a>tcp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[487]"></a>tcp_seg_free</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[488]"></a>tcp_segs_free</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[489]"></a>tcp_pcb_purge</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[48a]"></a>tcp_slowtmr</STRONG> (Thumb, 598 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
</UL>

<P><STRONG><a name="[494]"></a>update_shared_rcv_wnd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process_refused_data
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_update_rcv_ann_wnd
</UL>

<P><STRONG><a name="[48f]"></a>tcp_pcb_remove</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[3d4]"></a>tcp_close</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_close_connect
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_poll_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_err_cb
</UL>

<P><STRONG><a name="[493]"></a>tcp_update_rcv_ann_wnd</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_shared_rcv_wnd
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
</UL>

<P><STRONG><a name="[3da]"></a>tcp_recved</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_update_rcv_ann_wnd
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_recv
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sk_free_pbuf_custom_fn
</UL>

<P><STRONG><a name="[dd]"></a>tcp_recv_null</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process_refused_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcp.o(.text)
</UL>
<P><STRONG><a name="[495]"></a>tcp_process_refused_data</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_shared_rcv_wnd
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
</UL>

<P><STRONG><a name="[496]"></a>tcp_fasttmr</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process_refused_data
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
</UL>

<P><STRONG><a name="[497]"></a>tcp_tmr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_tcp_timer
</UL>

<P><STRONG><a name="[3d9]"></a>tcp_shutdown</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_close_connect
</UL>

<P><STRONG><a name="[498]"></a>tcp_abandon</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
</UL>

<P><STRONG><a name="[3d8]"></a>tcp_abort</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_accept_cb
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_connect_cb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_recv_cb
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_poll_cb
</UL>

<P><STRONG><a name="[3df]"></a>tcp_bind</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new_port
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_bind
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_start
</UL>

<P><STRONG><a name="[3e1]"></a>tcp_listen_with_backlog</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_start
</UL>

<P><STRONG><a name="[49a]"></a>tcp_eff_send_mss</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
</UL>
<BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
</UL>

<P><STRONG><a name="[49b]"></a>tcp_next_iss</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
</UL>

<P><STRONG><a name="[3e0]"></a>tcp_connect</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_next_iss
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new_port
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connect
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_start
</UL>

<P><STRONG><a name="[41f]"></a>tcp_sndbuf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poll_tcp
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sent_tcp
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[49d]"></a>tcp_alloc</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_next_iss
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new
</UL>

<P><STRONG><a name="[3de]"></a>tcp_new</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_start
</UL>

<P><STRONG><a name="[3cf]"></a>tcp_arg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_start
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_accept_cb
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_close_connect
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_poll_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_err_cb
</UL>

<P><STRONG><a name="[3d1]"></a>tcp_recv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_start
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_accept_cb
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_close_connect
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_poll_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_err_cb
</UL>

<P><STRONG><a name="[3d0]"></a>tcp_sent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_close_connect
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_poll_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_err_cb
</UL>

<P><STRONG><a name="[3d2]"></a>tcp_err</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_start
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_accept_cb
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_close_connect
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_poll_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_err_cb
</UL>

<P><STRONG><a name="[3d3]"></a>tcp_accept</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_start
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_close_connect
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_poll_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_err_cb
</UL>

<P><STRONG><a name="[3d7]"></a>tcp_poll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_start
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_accept_cb
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_close_connect
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_poll_cb
</UL>

<P><STRONG><a name="[4a6]"></a>tcp_input</STRONG> (Thumb, 1036 bytes, Stack size 0 bytes, tcp_in.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timewait_input
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process_refused_data
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_shared_rcv_wnd
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via BLX)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[49c]"></a>tcp_enqueue_flags</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
</UL>

<P><STRONG><a name="[492]"></a>tcp_send_fin</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
</UL>
<BR>[Called By]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[3e5]"></a>tcp_write</STRONG> (Thumb, 920 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write_checks
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pbuf_prealloc
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_do_write
</UL>

<P><STRONG><a name="[4a1]"></a>tcp_send_empty_ack</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[3e6]"></a>tcp_output</STRONG> (Thumb, 456 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sndbuf
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timewait_input
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_do_write
</UL>

<P><STRONG><a name="[48e]"></a>tcp_rst</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timewait_input
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[48c]"></a>tcp_rexmit_rto</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[4a4]"></a>tcp_rexmit</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_fast
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
</UL>

<P><STRONG><a name="[49f]"></a>tcp_rexmit_fast</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
</UL>

<P><STRONG><a name="[48d]"></a>tcp_keepalive</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[48b]"></a>tcp_zero_window_probe</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[3f4]"></a>sys_timeout_p</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, timers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_Start
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_timer
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_timer_fine
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_timer_coarse
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arp_timer
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_timer
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_tcp_timer
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DhcpTickHandle
</UL>

<P><STRONG><a name="[491]"></a>tcp_timer_needed</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, timers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_p
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_with_backlog
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
</UL>

<P><STRONG><a name="[476]"></a>sys_timeouts_init</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, timers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_p
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[3f5]"></a>sys_untimeout_p</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, timers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_Stop
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
</UL>

<P><STRONG><a name="[3f1]"></a>sys_timeouts_mbox_fetch_p</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, timers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
</UL>

<P><STRONG><a name="[474]"></a>udp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, udp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[4b2]"></a>udp_input</STRONG> (Thumb, 470 bytes, Stack size 0 bytes, udp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[3e8]"></a>udp_bind</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, udp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_Start
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_Start
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_init
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_inform
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_start
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_connect
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_bind
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_create_connect
</UL>

<P><STRONG><a name="[453]"></a>udp_sendto_if</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, udp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_inform
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_release
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_renew
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_reboot
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_rebind
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_select
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_discover
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
</UL>

<P><STRONG><a name="[3e2]"></a>udp_sendto</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, udp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_send
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_send
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_do_send
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSNameErrGenAndSend
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSAnswerGenAndSend
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPNakGenAndSend
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPOfferGenAndSend
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPAckGenAndSend
</UL>

<P><STRONG><a name="[3e4]"></a>udp_send</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, udp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_send
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_do_send
</UL>

<P><STRONG><a name="[42a]"></a>udp_connect</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, udp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_start
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connect
</UL>

<P><STRONG><a name="[42b]"></a>udp_disconnect</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, udp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_disconnect
</UL>

<P><STRONG><a name="[3e9]"></a>udp_recv</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, udp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_Start
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_Start
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_start
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_create_connect
</UL>

<P><STRONG><a name="[3ea]"></a>udp_remove</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, udp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_Stop
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_Stop
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_inform
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_start
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_stop
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_delconn
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_connect
</UL>

<P><STRONG><a name="[3e7]"></a>udp_new</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, udp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_Start
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_Start
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_init
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_inform
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_start
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_create_connect
</UL>

<P><STRONG><a name="[4b4]"></a>icmp_input</STRONG> (Thumb, 388 bytes, Stack size 0 bytes, icmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pbuf
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[4b3]"></a>icmp_dest_unreach</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, icmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[4b8]"></a>icmp_time_exceeded</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, icmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
</UL>

<P><STRONG><a name="[4a8]"></a>inet_chksum_pseudo</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, inet_chksum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
</UL>

<P><STRONG><a name="[4ba]"></a>inet_chksum_pseudo_partial</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, inet_chksum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
</UL>

<P><STRONG><a name="[4b6]"></a>inet_chksum</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, inet_chksum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[4b5]"></a>inet_chksum_pbuf</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, inet_chksum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>

<P><STRONG><a name="[485]"></a>ip_route</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, ip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
</UL>

<P><STRONG><a name="[3f3]"></a>ip_input</STRONG> (Thumb, 496 bytes, Stack size 0 bytes, ip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_input
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
</UL>

<P><STRONG><a name="[486]"></a>ip_output_if</STRONG> (Thumb, 284 bytes, Stack size 0 bytes, ip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via BLX)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
</UL>

<P><STRONG><a name="[4ae]"></a>ip_output</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, ip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
</UL>
<BR>[Called By]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
</UL>

<P><STRONG><a name="[4a7]"></a>ip4_addr_isbroadcast</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ip_addr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[4be]"></a>ip4_addr_netmask_valid</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ip_addr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
</UL>

<P><STRONG><a name="[4bf]"></a>ipaddr_aton</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, ip_addr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
</UL>

<P><STRONG><a name="[1c6]"></a>ipaddr_addr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ip_addr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_aton
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetHostByName
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_BcInit
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_init
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_gethostbyname
</UL>

<P><STRONG><a name="[4c0]"></a>ipaddr_ntoa_r</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, ip_addr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_ntoa
</UL>

<P><STRONG><a name="[4c1]"></a>ipaddr_ntoa</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ip_addr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_ntoa_r
</UL>

<P><STRONG><a name="[4b0]"></a>ip_reass_tmr</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ip_frag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_timer
</UL>

<P><STRONG><a name="[4bb]"></a>ip_reass</STRONG> (Thumb, 466 bytes, Stack size 0 bytes, ip_frag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[4bd]"></a>ip_frag</STRONG> (Thumb, 400 bytes, Stack size 0 bytes, ip_frag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloced_custom
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
</UL>

<P><STRONG><a name="[4b1]"></a>etharp_tmr</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, etharp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arp_timer
</UL>

<P><STRONG><a name="[4ca]"></a>etharp_update_arp_entry</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, etharp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPOfferGenAndSend
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPAckGenAndSend
</UL>

<P><STRONG><a name="[477]"></a>etharp_cleanup_netif</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, etharp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_down
</UL>

<P><STRONG><a name="[4cb]"></a>etharp_find_addr</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, etharp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
</UL>

<P><STRONG><a name="[479]"></a>etharp_request</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, etharp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_link_up
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_up
</UL>

<P><STRONG><a name="[4cf]"></a>etharp_query</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, etharp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
</UL>

<P><STRONG><a name="[e5]"></a>etharp_output</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, etharp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernetif.o(.text)
</UL>
<P><STRONG><a name="[3f2]"></a>ethernet_input</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, etharp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
</UL>

<P><STRONG><a name="[e7]"></a>ethernetif_input</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ethernetif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_netif
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernet.o(.text)
</UL>
<P><STRONG><a name="[e9]"></a>ethernetif_init</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, ethernetif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_mac
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernet.o(.text)
</UL>
<P><STRONG><a name="[4d4]"></a>Tcpip_stack_init</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_status_change_cb_register
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_ethernet_data_rx_callback
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_status_callback
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netifapi_netif_common
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netifapi_netif_add
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_ethernet_init
</UL>

<P><STRONG><a name="[316]"></a>tls_ethernet_init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tcpip_stack_init
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_net_init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[1fe]"></a>tls_netif_get_ethif</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_getserver
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_wait_disconnect
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_get_status
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_ip_info
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_link_status
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_ip_info
</UL>

<P><STRONG><a name="[21e]"></a>tls_dhcp_start</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netifapi_netif_common
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_ip_info
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_net_up
</UL>

<P><STRONG><a name="[21c]"></a>tls_dhcp_stop</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netifapi_netif_common
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_ip_info
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_net_up
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_ip_info
</UL>

<P><STRONG><a name="[21d]"></a>tls_netif_set_addr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netifapi_netif_set_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_ip_info
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_net_up
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_ip_info
</UL>

<P><STRONG><a name="[4d9]"></a>tls_netif_dns_setserver</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_setserver
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_net_up
</UL>

<P><STRONG><a name="[4da]"></a>tls_netif_set_up</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netifapi_netif_common
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_net_up
</UL>

<P><STRONG><a name="[4db]"></a>tls_netif_set_down</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netifapi_netif_common
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_task
</UL>

<P><STRONG><a name="[4dc]"></a>tls_netif_remove_status_event</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_add_status_event
</UL>

<P><STRONG><a name="[25e]"></a>tls_netif_add_status_event</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_remove_status_event
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_set_net_status_callback
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_set_oneshot_proc
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
</UL>

<P><STRONG><a name="[4dd]"></a>tls_dhcps_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_net_up
</UL>

<P><STRONG><a name="[4df]"></a>tls_dhcps_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_task
</UL>

<P><STRONG><a name="[4e1]"></a>tls_dnss_start</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_net_up
</UL>

<P><STRONG><a name="[4e3]"></a>tls_dnss_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_task
</UL>

<P><STRONG><a name="[204]"></a>tls_dhcps_getip</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_GetIpByMac
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_sta_detail
</UL>

<P><STRONG><a name="[4d2]"></a>tls_get_netif</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPOfferGenAndSend
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPAckGenAndSend
</UL>

<P><STRONG><a name="[471]"></a>sys_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[3ce]"></a>sys_sem_new</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_gethostbyname
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_netifapi
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_alloc_socket
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
</UL>

<P><STRONG><a name="[3cc]"></a>sys_sem_free</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_gethostbyname
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_netifapi
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_free_socket
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
</UL>

<P><STRONG><a name="[3e3]"></a>sys_sem_signal</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt_internal
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt_internal
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_netifapi_netif_common
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_netifapi_netif_set_addr
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_netifapi_netif_add
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_dns_found
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connected
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_write
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_send
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_recv
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_newconn
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_gethostbyname
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_getaddr
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_disconnect
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_delconn
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connect
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_bind
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_do_write
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_do_send
</UL>

<P><STRONG><a name="[3f0]"></a>sys_arch_sem_wait</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_gethostbyname
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_netifapi
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_msg
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
</UL>

<P><STRONG><a name="[427]"></a>sys_sem_valid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_delconn
</UL>

<P><STRONG><a name="[422]"></a>sys_sem_set_invalid</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
</UL>

<P><STRONG><a name="[1cd]"></a>sys_mbox_new</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateExt
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_task_init
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
</UL>

<P><STRONG><a name="[406]"></a>sys_mbox_free</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDeleteExt
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
</UL>

<P><STRONG><a name="[3f7]"></a>sys_mbox_post</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_netifapi
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_untimeout
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_timeout
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
</UL>

<P><STRONG><a name="[1d0]"></a>sys_mbox_trypost</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_post
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_trycallback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_input
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
</UL>

<P><STRONG><a name="[1ca]"></a>sys_arch_mbox_fetch</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_rx
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_mbox_fetch_p
</UL>

<P><STRONG><a name="[3f6]"></a>sys_mbox_valid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_trycallback
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_netifapi
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_untimeout
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_timeout
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_input
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
</UL>

<P><STRONG><a name="[423]"></a>sys_mbox_set_invalid</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
</UL>

<P><STRONG><a name="[401]"></a>sys_thread_new</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
</UL>

<P><STRONG><a name="[40a]"></a>sys_arch_protect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_socket
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connected
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_write_partly
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_send
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_listen_with_backlog
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_disconnect
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_connect
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_bind
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close_shutdown
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
</UL>

<P><STRONG><a name="[40b]"></a>sys_arch_unprotect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_socket
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connected
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_write_partly
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_send
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_listen_with_backlog
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_disconnect
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_connect
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_bind
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close_shutdown
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
</UL>

<P><STRONG><a name="[876]"></a>__user_libspace</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via Veneer)
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via BLX)
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor (via BLX)
</UL>

<P><STRONG><a name="[4e7]"></a>sendchar</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[135]"></a>fputc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendchar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[87e]"></a>ferror</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[4e8]"></a>_ttywrch</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendchar
</UL>
<BR>[Called By]<UL><LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[174]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit (via BLX)
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[16c]"></a>__user_setup_stackheap</STRONG> (ARM, 0 bytes, Stack size 0 bytes, start.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[4ea]"></a>tls_auto_reconnect</STRONG> (Thumb, 356 bytes, Stack size 0 bytes, tls_sys.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_oneshot_flag
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_bssid
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_auto_connect_flag
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_task
</UL>

<P><STRONG><a name="[f1]"></a>tls_sys_task</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, tls_sys.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_ap_get_recflag
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_auto_reconnect
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_net_up
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dnss_stop
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dhcps_stop
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_set_down
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_sys.o(.text)
</UL>
<P><STRONG><a name="[318]"></a>tls_sys_auto_mode_run</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tls_sys.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[317]"></a>tls_sys_init</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, tls_sys.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateExt
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_add_status_event
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[178]"></a>mem_alloc_debug</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm_mem.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_fast_write_init
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_init
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_init
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_init
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_ethernet_init
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task_stat_info
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_decode_new_oneshot_data
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_start_oneshot
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_port_init
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_open
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fwup_send
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_atcmd_line
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fwup_rsp
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_udp_sendto
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_send
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_create
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_close
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_scan_cmplt
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_dis
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_join
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_conn
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tx_fail
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_crc_err
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_sta_leave
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_sta_join
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_linkdown
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_wjoin_failed
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_wjoin_success
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_init_cmplt
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_net_status_changed
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_rpt
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_wscan_cmplt
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_recvmit
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_task_init
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_add_status_event
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_http_client_recv_callback
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_http_client_err_callback
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_socket_state
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_mac_proc
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_custdata_proc
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skstt_proc
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_get_sta_info
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wjoin_proc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_scan
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_sta_detail
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_net
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_join_net
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_key
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_post
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientOpenRequest
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersParse
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSetURL
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersFind
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strndup
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_auto_reconnect
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tcpip_stack_init
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_start
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrinfo
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_new
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_new
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_p
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callbackmsg_new
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_untimeout
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_timeout
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_input
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_with_backlog
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_recv_cb
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_alloc_socket
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_ap
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_assoc
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_alloc
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_realloc
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_send_eapol
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_ssid
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_alloc_eapol
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_init
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_scan
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_validate_wpa_ie
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sta_init
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_add
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_notif_assoc
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_auth_reply
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_assoc_resp
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_auth
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_wpa
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_get_res
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_get_bit_rates
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_add
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_alloc_bss_data
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_config_defaults
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_alloc_ps_pkt
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_to_flash
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshotinfo_resolve_probereq
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_data
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key_4_ap
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_beacon_get
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LO_Leakage_Deal
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add_apsta
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_scan_req
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_ssid
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_scan
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_beacon
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key_cfg
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_create_ap
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie_default
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_timer_task
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_default_configs
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_reload_config
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_from_unknown
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_mgmt
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_eapol
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_assoc
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_disassoc
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_disconnect_network
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_mic_err
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_scan_completed
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configs
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_create_softap
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_ps
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_pspoll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_sta_active
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_RecvCb
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSNameErrGenAndSend
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSAnswerGenAndSend
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_RecvCb
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPNakGenAndSend
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPOfferGenAndSend
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPAckGenAndSend
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_gen_wpa_ie
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_init
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__wpa_send_eapol
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKINITNEGOTIATING_Enter
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_GROUP_REKEYNEGOTIATING_Enter
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_strdup
</UL>

<P><STRONG><a name="[17b]"></a>mem_free_debug</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_mem.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_fast_write_destroy
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_init
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_init
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_ethernet_init
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_task_stat_info
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_decode_new_oneshot_data
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_stop_oneshot
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_port_init
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fwup_send
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_atcmd_line
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fwup_rsp
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_udp_sendto
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_send
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_create
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_close
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_scan_cmplt
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_dis
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_join
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_conn
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tx_fail
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_crc_err
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_sta_leave
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_sta_join
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_linkdown
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_wjoin_failed
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_wjoin_success
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_init_cmplt
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_net_status_changed
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_rpt
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_wscan_cmplt
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_recvmit
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_recvmit
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_task_init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_http_client_recv_callback
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_http_client_err_callback
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_socket_state
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_mac_proc
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_custdata_proc
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skstt_proc
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_get_sta_info
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wjoin_proc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_sta_detail
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_net
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_join_net
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_key
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_post
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_rx
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientCloseRequest
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientOpenRequest
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersParse
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSetURL
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersFind
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSessionReset
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_auto_reconnect
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_remove_status_event
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipfrag_free_pbuf_custom
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_cleanup
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_freeaddrinfo
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_chain
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_remove
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_untimeout_p
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_mbox_fetch_p
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callbackmsg_delete
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_input
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_int
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_with_backlog
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sk_free_pbuf_custom
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_connect
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_create_connect
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_free_socket
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_config_free
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_ap
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_release
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_scan_completed
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_config_auth
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_assoc
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_alloc
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_key_destroy
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bss_release
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_realloc
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_send_eapol
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_ssid
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_scan
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_results_free
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_validate_wpa_ie
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_free_sta
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_notif_assoc
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_auth_reply
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_assoc_resp
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_auth
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_wpa
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_config_validate_network_test
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_add
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_remove
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_interface_free
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_clean_ps_multicast
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_send_pkt2sta
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_send_all_pkt2sta
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_alloc_ps_pkt
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_to_flash
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshotinfo_resolve_probereq
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_data
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_clear_1shot_info
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key_4_ap
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LO_Leakage_Deal
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_scan_req
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_ssid
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_del_beacon
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_beacon
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_bss_info_changed
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_free
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key_cfg
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_deinit
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_deinit
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_proc_beacon_done
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_check_ps_pkt
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_mgmt
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_eapol
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_assoc
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configs
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_remove_timeout
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_create_softap
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_ps
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_clear_connection
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_RecvCb
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSNameErrGenAndSend
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSAnswerGenAndSend
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_RecvCb
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPNakGenAndSend
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPOfferGenAndSend
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPAckGenAndSend
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_gen_wpa_ie
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_deinit
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_init
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__wpa_send_eapol
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKINITNEGOTIATING_Enter
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_GROUP_REKEYNEGOTIATING_Enter
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_free_sta_sm
</UL>

<P><STRONG><a name="[4ed]"></a>mem_realloc_debug</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>

<P><STRONG><a name="[6a7]"></a>get_crc8</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_resolve_info
</UL>

<P><STRONG><a name="[4f9]"></a>calculate_crc8</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
</UL>

<P><STRONG><a name="[2c5]"></a>get_crc32</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cal_crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fwup_send
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_save_user_default
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_load_user
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_to_flash
</UL>

<P><STRONG><a name="[4fb]"></a>checksum</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
</UL>

<P><STRONG><a name="[275]"></a>atodec</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rwhwv_proc
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtodec
</UL>

<P><STRONG><a name="[1da]"></a>strtodec</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atodec
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_set_oneshot_proc
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_cmdm_proc
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_iom_proc
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_webs_proc
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_espt_proc
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_warc_proc
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_key_proc
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_init_socket_cfg
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoip
</UL>

<P><STRONG><a name="[4f0]"></a>atohex</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtohexarray
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtohex
</UL>

<P><STRONG><a name="[25c]"></a>strtohex</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atohex
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_espc_proc
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_chll_proc
</UL>

<P><STRONG><a name="[265]"></a>strtohexarray</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atohex
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_spif_proc
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_txg_proc
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_mac_proc
</UL>

<P><STRONG><a name="[4f1]"></a>strtoip</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtodec
</UL>

<P><STRONG><a name="[4f2]"></a>iptostr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[4f3]"></a>mactostr</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[25b]"></a>hex_to_digit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr_to_uinit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_bssid_proc
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key_4_ap
</UL>

<P><STRONG><a name="[270]"></a>hexstr_to_uinit</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex_to_digit
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpchrs_proc
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lppstp_proc
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lppstr_proc
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lprstr_proc
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lptstr_proc
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_flsw_proc
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_flsr_proc
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rfw_proc
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rfr_proc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_regw_proc
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_regr_proc
</UL>

<P><STRONG><a name="[24c]"></a>string_to_uint</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpchl_proc
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_spif_proc
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updd_proc
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updm_proc
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_http_client_proc
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updp_proc
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_dbg_proc
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atpt_proc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atlt_proc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_uart_proc
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_portm_proc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atrm_proc
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atm_proc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_nip_proc
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_warm_proc
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wpsm_proc
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_watc_proc
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wbgr_proc
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wreg_proc
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_chnl_proc
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_brd_ssid_proc
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_bssid_proc
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_encrypt_proc
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wprt_proc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sktrptmode_proc
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skrcv_proc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sksnd_proc
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sksdf_proc
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skclose_proc
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skstt_proc
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skct_proc
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ps_proc
</UL>

<P><STRONG><a name="[1d9]"></a>string_to_ipaddr</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, utils.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atrm_proc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_nip_proc
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skct_proc
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_init_socket_cfg
</UL>

<P><STRONG><a name="[4f5]"></a>strdup</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[4f6]"></a>strndup</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>

<P><STRONG><a name="[f3]"></a>fwup_request_complete</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_fwup.o(.text)
</UL>
<P><STRONG><a name="[26a]"></a>tls_fwup_enter</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_fast_write_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_oneshot_flag
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_oneshot_flag
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_psflag
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updm_proc
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_FirmwareUpdate
</UL>

<P><STRONG><a name="[26c]"></a>tls_fwup_exit</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_oneshot_flag
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_psflag
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updm_proc
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_FirmwareUpdateFinish
</UL>

<P><STRONG><a name="[26b]"></a>tls_fwup_get_current_session_id</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fwup_send
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updd_proc
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updm_proc
</UL>

<P><STRONG><a name="[2c6]"></a>tls_fwup_set_update_numer</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fwup_send
</UL>

<P><STRONG><a name="[26f]"></a>tls_fwup_get_current_update_numer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updd_proc
</UL>

<P><STRONG><a name="[2c7]"></a>tls_fwup_request_sync</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_create
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_async
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fwup_send
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_FirmwareUpdate
</UL>

<P><STRONG><a name="[26d]"></a>tls_fwup_current_state</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updd_proc
</UL>

<P><STRONG><a name="[500]"></a>tls_fwup_reset</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, wm_fwup.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[501]"></a>tls_fwup_clear_error</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, wm_fwup.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[312]"></a>tls_fwup_init</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateExt
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDeleteExt
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_create
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[306]"></a>UserDeviceInit</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, user_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateExt
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_auto_connect_flag
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateUserTask
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateUserTask
</UL>

<P><STRONG><a name="[104]"></a>HF_ReadDataFromFlash</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[103]"></a>HF_WriteDataToFlash</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[50b]"></a>HF_get_timer_id</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_timer_callback
</UL>

<P><STRONG><a name="[f9]"></a>HF_timer_callback</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_TimeoutAction
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_StopTimer
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_get_timer_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[101]"></a>HF_StopTimer</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[100]"></a>HF_SetTimer</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateExt
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_FindIdleTimer
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_AllocateTimer
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[fe]"></a>HF_FirmwareUpdateFinish</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_exit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>HF_FirmwareUpdate</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_sync
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_enter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[ff]"></a>HF_SendDataToMoudle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_RecvMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[102]"></a>HF_Rest</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_oneshot_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[fc]"></a>HF_SendTcpData</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[105]"></a>HF_SendUdpData</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendto
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[511]"></a>HF_CloudRecvfunc</STRONG> (Thumb, 704 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;closesocket
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_StartClientListen
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_SendClientQueryReq
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromClient
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ClientDisconnect
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ClientConnect
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_DisConnectCloud
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_RecvDataFromCloud
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recvfrom
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Cloudfunc
</UL>

<P><STRONG><a name="[106]"></a>HF_GetMac</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_mac_addr
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_HexToString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[107]"></a>HF_Reboot</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[fa]"></a>HF_ConnectToCloud</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;closesocket
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_Rand
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[fb]"></a>HF_ListenClient</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;closesocket
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;listen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[507]"></a>HF_BcInit</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setsockopt
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Cloudfunc
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
</UL>

<P><STRONG><a name="[10b]"></a>HF_Cloudfunc</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;closesocket
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_SendBc
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Run
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ReconnectCloud
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_SendDataToCloud
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_CloudRecvfunc
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_BcInit
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[307]"></a>HF_Init</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateUserTask
</UL>

<P><STRONG><a name="[505]"></a>HF_WakeUp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_WakeUp
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
</UL>

<P><STRONG><a name="[506]"></a>HF_Sleep</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;closesocket
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
</UL>

<P><STRONG><a name="[522]"></a>AC_UartSend</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, zc_hf_adpter.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_DealNotifyMessage
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_DealEvent
</UL>

<P><STRONG><a name="[51d]"></a>ZC_SendBc</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, zc_bc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildBcMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Cloudfunc
</UL>

<P><STRONG><a name="[518]"></a>ZC_SendClientQueryReq</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, zc_bc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_GetStoreInfor
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildMsg
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_CloudRecvfunc
</UL>

<P><STRONG><a name="[516]"></a>ZC_ClientDisconnect</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, zc_client_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_CloudRecvfunc
</UL>

<P><STRONG><a name="[517]"></a>ZC_ClientConnect</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zc_client_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_CloudRecvfunc
</UL>

<P><STRONG><a name="[527]"></a>ZC_ClientInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, zc_client_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ClientSleep
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Init
</UL>

<P><STRONG><a name="[528]"></a>ZC_CheckClientIdle</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, zc_client_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromClient
</UL>

<P><STRONG><a name="[529]"></a>ZC_SetClientBusy</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, zc_client_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromClient
</UL>

<P><STRONG><a name="[512]"></a>ZC_StartClientListen</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, zc_client_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_CloudRecvfunc
</UL>

<P><STRONG><a name="[565]"></a>ZC_ClientWakeUp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zc_client_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_WakeUp
</UL>

<P><STRONG><a name="[526]"></a>ZC_ClientSleep</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, zc_client_manager.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ClientInit
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Sleep
</UL>

<P><STRONG><a name="[515]"></a>ZC_RecvDataFromClient</STRONG> (Thumb, 506 bytes, Stack size 0 bytes, zc_client_manager.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_TraceData
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_CheckCrc
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_RecvData
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_CBC_Encrypt
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_CBC_Decrypt
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_SetClientBusy
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_CheckClientIdle
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_GetStoreInfor
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildMsg
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_CloudRecvfunc
</UL>

<P><STRONG><a name="[530]"></a>EVENT_BuildEmptyMsg</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, zc_cloud_event.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
</UL>
<BR>[Called By]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendEmptyMsg
</UL>

<P><STRONG><a name="[531]"></a>EVENT_BuildHeartMsg</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, zc_cloud_event.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
</UL>
<BR>[Called By]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendHeartMsg
</UL>

<P><STRONG><a name="[525]"></a>EVENT_BuildMsg</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, zc_cloud_event.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendAckToCloud
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendUnbindMsg
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendCloudAccessMsg3
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendCloudAccessMsg1
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendErrorMsg
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendNotifyMsg
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_SendClientQueryReq
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromClient
</UL>

<P><STRONG><a name="[523]"></a>EVENT_BuildBcMsg</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, zc_cloud_event.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_GetStoreInfor
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_SendBc
</UL>

<P><STRONG><a name="[545]"></a>EVENT_ParseOption</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, zc_cloud_event.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
</UL>

<P><STRONG><a name="[532]"></a>EVENT_BuildOption</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, zc_cloud_event.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_DealSessionOpt
</UL>

<P><STRONG><a name="[52e]"></a>ZC_TraceData</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, zc_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromClient
</UL>

<P><STRONG><a name="[51a]"></a>ZC_Rand</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, zc_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_ConnectToCloud
</UL>

<P><STRONG><a name="[519]"></a>ZC_HexToString</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, zc_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_GetMac
</UL>

<P><STRONG><a name="[533]"></a>ZC_ConfigInitPara</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, zc_configuration.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ResetNetWork
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Init
</UL>

<P><STRONG><a name="[534]"></a>ZC_ConfigPara</STRONG> (Thumb, 228 bytes, Stack size 0 bytes, zc_configuration.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
</UL>

<P><STRONG><a name="[535]"></a>ZC_StoreRegisterInfo</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, zc_configuration.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_DealExtCode
</UL>

<P><STRONG><a name="[536]"></a>ZC_StoreTokenKey</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, zc_configuration.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SetTokenKey
</UL>

<P><STRONG><a name="[537]"></a>ZC_StoreConnectionInfo</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, zc_configuration.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>

<P><STRONG><a name="[538]"></a>ZC_StoreAccessInfo</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, zc_configuration.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg2
</UL>

<P><STRONG><a name="[524]"></a>ZC_GetStoreInfor</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, zc_configuration.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_DecryptTextByRsa
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_EncryptTextByRsa
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendCloudAccessMsg3
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendCloudAccessMsg1
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_DealSessionOpt
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildBcMsg
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_SendClientQueryReq
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromClient
</UL>

<P><STRONG><a name="[539]"></a>ZC_ConfigUnBind</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, zc_configuration.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleUnbindMsg
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
</UL>

<P><STRONG><a name="[53a]"></a>ZC_ConfigReset</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, zc_configuration.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
</UL>

<P><STRONG><a name="[53c]"></a>MSG_InitQueue</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, zc_message_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_Init
</UL>

<P><STRONG><a name="[53b]"></a>MSG_Init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, zc_message_queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_InitQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Sleep
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ReconnectCloud
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Init
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_DisConnectCloud
</UL>

<P><STRONG><a name="[53e]"></a>MSG_PushMsg</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zc_message_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendMsgToCloud
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_RecvDataFromCloud
</UL>

<P><STRONG><a name="[53f]"></a>MSG_PopMsg</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, zc_message_queue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleUnbindMsg
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg4
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg2
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_SendDataToCloud
</UL>

<P><STRONG><a name="[52a]"></a>MSG_RecvData</STRONG> (Thumb, 274 bytes, Stack size 0 bytes, zc_message_queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromClient
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_RecvDataFromCloud
</UL>

<P><STRONG><a name="[513]"></a>MSG_RecvDataFromCloud</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, zc_message_queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_Decrypt
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_PushMsg
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_RecvData
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_CloudRecvfunc
</UL>

<P><STRONG><a name="[51c]"></a>MSG_SendDataToCloud</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, zc_message_queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_PopMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Cloudfunc
</UL>

<P><STRONG><a name="[540]"></a>ZC_DealSessionOpt</STRONG> (Thumb, 278 bytes, Stack size 0 bytes, zc_moudle_manager.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildOption
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_CBC_Encrypt
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_GetStoreInfor
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
</UL>

<P><STRONG><a name="[542]"></a>ZC_DealExtCode</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, zc_moudle_manager.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendNotifyMsg
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_StoreRegisterInfo
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_StopTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
</UL>

<P><STRONG><a name="[544]"></a>ZC_RecvDataFromMoudle</STRONG> (Thumb, 310 bytes, Stack size 0 bytes, zc_moudle_manager.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendNotifyMsg
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ModuleOtaFileEndMsg
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ModuleOtaFileChunkMsg
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ModuleOtaFileBeginMsg
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleMoudleEvent
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_DealExtCode
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_DealSessionOpt
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ConfigReset
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ConfigUnBind
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_StoreRegisterInfo
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ConfigPara
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_ParseOption
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_TraceData
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_CheckCrc
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_StopTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_Moudlefunc
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendMessage
</UL>

<P><STRONG><a name="[54a]"></a>ZC_AssemblePkt</STRONG> (Thumb, 392 bytes, Stack size 0 bytes, zc_moudle_manager.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_Moudlefunc
</UL>

<P><STRONG><a name="[54b]"></a>ZC_Moudlefunc</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, zc_moudle_manager.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_Moudlefunc
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_AssemblePkt
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_Moudlefunc
</UL>

<P><STRONG><a name="[52c]"></a>PCT_CheckCrc</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg4
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg2
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromClient
</UL>

<P><STRONG><a name="[543]"></a>PCT_SendNotifyMsg</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleOtaEndMsg
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleOtaBeginMsg
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg4
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ModuleOtaFileEndMsg
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ModuleOtaFileChunkMsg
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ModuleOtaFileBeginMsg
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_DealExtCode
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_TimeoutAction
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_WakeUp
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Sleep
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_DisConnectCloud
</UL>

<P><STRONG><a name="[54c]"></a>PCT_SendMsgToCloud</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_PaddingCheck
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_Encrypt
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_PushMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendAckToCloud
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendUnbindMsg
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendCloudAccessMsg3
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendCloudAccessMsg1
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendErrorMsg
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendEmptyMsg
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendHeartMsg
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleMoudleEvent
</UL>

<P><STRONG><a name="[54f]"></a>PCT_SendHeartMsg</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendMsgToCloud
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildHeartMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_TimeoutAction
</UL>

<P><STRONG><a name="[51f]"></a>PCT_Init</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Init
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_Init
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ConfigInitPara
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ClientInit
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Init
</UL>

<P><STRONG><a name="[551]"></a>PCT_SendEmptyMsg</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendMsgToCloud
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildEmptyMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ResetNetWork
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SetTokenKey
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendMoudleTimeout
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleMoudleEvent
</UL>

<P><STRONG><a name="[552]"></a>PCT_SendErrorMsg</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendMsgToCloud
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleOtaEndMsg
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleOtaFileChunkMsg
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendMoudleTimeout
</UL>

<P><STRONG><a name="[514]"></a>PCT_DisConnectCloud</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendNotifyMsg
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ResetNetWork
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg4
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg2
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendCloudAccessMsg1
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_TimeoutAction
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_CloudRecvfunc
</UL>

<P><STRONG><a name="[553]"></a>PCT_SendCloudAccessMsg1</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendMsgToCloud
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_GetStoreInfor
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildMsg
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_StopTimer
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_DisConnectCloud
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Run
</UL>

<P><STRONG><a name="[554]"></a>PCT_SendCloudAccessMsg3</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendMsgToCloud
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_GetStoreInfor
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildMsg
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg2
</UL>

<P><STRONG><a name="[564]"></a>PCT_ConnectCloud</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Run
</UL>

<P><STRONG><a name="[51e]"></a>PCT_ReconnectCloud</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Init
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_Init
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_StopTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Cloudfunc
</UL>

<P><STRONG><a name="[555]"></a>PCT_SendMoudleTimeout</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendErrorMsg
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendEmptyMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_TimeoutAction
</UL>

<P><STRONG><a name="[549]"></a>PCT_HandleMoudleEvent</STRONG> (Thumb, 290 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendEmptyMsg
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendMsgToCloud
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_StopTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
</UL>

<P><STRONG><a name="[556]"></a>PCT_RecvAccessMsg2</STRONG> (Thumb, 246 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendCloudAccessMsg3
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_PopMsg
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_StoreAccessInfo
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_CheckCrc
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_StopTimer
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_DisConnectCloud
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Run
</UL>

<P><STRONG><a name="[557]"></a>PCT_RecvAccessMsg4</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendNotifyMsg
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_PopMsg
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_CheckCrc
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_StopTimer
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_DisConnectCloud
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Run
</UL>

<P><STRONG><a name="[558]"></a>PCT_HandleUnbindMsg</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_PopMsg
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ConfigUnBind
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_StopTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Run
</UL>

<P><STRONG><a name="[559]"></a>PCT_SendUnbindMsg</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendMsgToCloud
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildMsg
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_TimeoutAction
</UL>

<P><STRONG><a name="[55a]"></a>PCT_SendAckToCloud</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendMsgToCloud
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ResetNetWork
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SetTokenKey
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleOtaEndMsg
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleOtaFileEndMsg
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleOtaFileChunkMsg
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleOtaFileBeginMsg
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleOtaBeginMsg
</UL>

<P><STRONG><a name="[55b]"></a>PCT_HandleOtaBeginMsg</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendAckToCloud
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendNotifyMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
</UL>

<P><STRONG><a name="[546]"></a>PCT_ModuleOtaFileBeginMsg</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendNotifyMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
</UL>

<P><STRONG><a name="[547]"></a>PCT_ModuleOtaFileChunkMsg</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendNotifyMsg
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
</UL>

<P><STRONG><a name="[548]"></a>PCT_ModuleOtaFileEndMsg</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendNotifyMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
</UL>

<P><STRONG><a name="[55c]"></a>PCT_HandleOtaFileBeginMsg</STRONG> (Thumb, 442 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendAckToCloud
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
</UL>

<P><STRONG><a name="[55d]"></a>PCT_HandleOtaFileChunkMsg</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendAckToCloud
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendErrorMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
</UL>

<P><STRONG><a name="[55e]"></a>PCT_HandleOtaFileEndMsg</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendAckToCloud
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
</UL>

<P><STRONG><a name="[55f]"></a>PCT_HandleOtaEndMsg</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendAckToCloud
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendErrorMsg
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendNotifyMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
</UL>

<P><STRONG><a name="[560]"></a>PCT_HandleMoudleMsg</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_StopTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
</UL>

<P><STRONG><a name="[561]"></a>PCT_SetTokenKey</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendAckToCloud
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendEmptyMsg
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_StoreTokenKey
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
</UL>

<P><STRONG><a name="[562]"></a>PCT_ResetNetWork</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendAckToCloud
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendEmptyMsg
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ConfigInitPara
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_DisConnectCloud
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
</UL>

<P><STRONG><a name="[563]"></a>PCT_HandleEvent</STRONG> (Thumb, 258 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ResetNetWork
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SetTokenKey
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleMoudleMsg
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleOtaEndMsg
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleOtaFileEndMsg
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleOtaFileChunkMsg
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleOtaFileBeginMsg
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleOtaBeginMsg
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendUnbindMsg
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendErrorMsg
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendEmptyMsg
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_PopMsg
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_TraceData
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_CheckCrc
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_StopTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Run
</UL>

<P><STRONG><a name="[51b]"></a>PCT_Run</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleUnbindMsg
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg4
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg2
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ConnectCloud
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendCloudAccessMsg1
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Cloudfunc
</UL>

<P><STRONG><a name="[520]"></a>PCT_WakeUp</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendNotifyMsg
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ClientWakeUp
</UL>
<BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_WakeUp
</UL>

<P><STRONG><a name="[521]"></a>PCT_Sleep</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, zc_protocol_controller.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Init
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendNotifyMsg
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_Init
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ClientSleep
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_StopTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Sleep
</UL>

<P><STRONG><a name="[566]"></a>SEC_InitRsaContextWithPublicKey</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, zc_sec_engine.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_init
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_read_binary
</UL>
<BR>[Called By]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_EncryptTextByRsa
</UL>

<P><STRONG><a name="[569]"></a>SEC_EncryptTextByRsa</STRONG> (Thumb, 206 bytes, Stack size 0 bytes, zc_sec_engine.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_pkcs1_encrypt
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_free
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_InitRsaContextWithPublicKey
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_GetStoreInfor
</UL>
<BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_Encrypt
</UL>

<P><STRONG><a name="[56c]"></a>SEC_InitRsaContextWithPrivateKey</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, zc_sec_engine.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_init
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_read_binary
</UL>
<BR>[Called By]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_DecryptTextByRsa
</UL>

<P><STRONG><a name="[56d]"></a>SEC_DecryptTextByRsa</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, zc_sec_engine.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_pkcs1_decrypt
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_free
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_InitRsaContextWithPrivateKey
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_GetStoreInfor
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_Decrypt
</UL>

<P><STRONG><a name="[56f]"></a>SEC_AesEncrypt</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, zc_sec_engine.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_CBC_Encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_Encrypt
</UL>

<P><STRONG><a name="[570]"></a>SEC_AesDecrypt</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, zc_sec_engine.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_CBC_Decrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_Decrypt
</UL>

<P><STRONG><a name="[54d]"></a>SEC_PaddingCheck</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, zc_sec_engine.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendMsgToCloud
</UL>

<P><STRONG><a name="[54e]"></a>SEC_Encrypt</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, zc_sec_engine.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_AesEncrypt
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_EncryptTextByRsa
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendMsgToCloud
</UL>

<P><STRONG><a name="[53d]"></a>SEC_Decrypt</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, zc_sec_engine.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_AesDecrypt
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_DecryptTextByRsa
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_RecvDataFromCloud
</UL>

<P><STRONG><a name="[550]"></a>TIMER_Init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zc_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Sleep
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ReconnectCloud
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Init
</UL>

<P><STRONG><a name="[50e]"></a>TIMER_FindIdleTimer</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, zc_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_SetTimer
</UL>

<P><STRONG><a name="[50f]"></a>TIMER_AllocateTimer</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zc_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_SetTimer
</UL>

<P><STRONG><a name="[50c]"></a>TIMER_TimeoutAction</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, zc_timer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendUnbindMsg
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendMoudleTimeout
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendHeartMsg
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendNotifyMsg
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_DisConnectCloud
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_timer_callback
</UL>

<P><STRONG><a name="[50d]"></a>TIMER_StopTimer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, zc_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleMoudleMsg
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleUnbindMsg
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg4
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg2
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendCloudAccessMsg1
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleMoudleEvent
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_DealExtCode
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Sleep
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ReconnectCloud
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_timer_callback
</UL>

<P><STRONG><a name="[571]"></a>mpi_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_private
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_public
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gen_prime
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_inv_mod
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gcd
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mul_mpi
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_abs
</UL>

<P><STRONG><a name="[572]"></a>mpi_free</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_free
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_private
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_public
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gen_prime
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_inv_mod
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gcd
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mul_mpi
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_abs
</UL>

<P><STRONG><a name="[573]"></a>mpi_grow</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_read_binary
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gen_prime
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mul_mpi
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_add_abs
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_shift_l
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_lset
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_copy
</UL>

<P><STRONG><a name="[574]"></a>mpi_copy</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_grow
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_inv_mod
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gcd
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mul_mpi
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_abs
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_add_abs
</UL>

<P><STRONG><a name="[575]"></a>mpi_swap</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bignum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>

<P><STRONG><a name="[576]"></a>mpi_lset</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_grow
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_read_binary
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gen_prime
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_inv_mod
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mul_mpi
</UL>

<P><STRONG><a name="[591]"></a>mpi_lsb</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, bignum.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gcd
</UL>

<P><STRONG><a name="[578]"></a>mpi_msb</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gen_prime
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_shift_l
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_size
</UL>

<P><STRONG><a name="[577]"></a>mpi_size</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_msb
</UL>
<BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_write_binary
</UL>

<P><STRONG><a name="[568]"></a>mpi_read_binary</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_lset
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_grow
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_InitRsaContextWithPrivateKey
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_InitRsaContextWithPublicKey
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_private
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_public
</UL>

<P><STRONG><a name="[579]"></a>mpi_write_binary</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_size
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_private
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_public
</UL>

<P><STRONG><a name="[57a]"></a>mpi_shift_l</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_msb
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_grow
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gen_prime
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gcd
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
</UL>

<P><STRONG><a name="[589]"></a>mpi_shift_r</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gen_prime
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_inv_mod
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gcd
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
</UL>

<P><STRONG><a name="[57f]"></a>mpi_cmp_abs</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_montmul
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_mpi
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_add_mpi
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_abs
</UL>

<P><STRONG><a name="[57c]"></a>mpi_cmp_mpi</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_private
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_public
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_inv_mod
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gcd
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mod_mpi
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_int
</UL>

<P><STRONG><a name="[57b]"></a>mpi_cmp_int</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_mpi
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_inv_mod
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gcd
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mod_mpi
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
</UL>

<P><STRONG><a name="[57d]"></a>mpi_add_abs</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_copy
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_grow
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_mpi
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_add_mpi
</UL>

<P><STRONG><a name="[57e]"></a>mpi_sub_abs</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_hlp
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_abs
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_copy
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_free
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gcd
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_mpi
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_add_mpi
</UL>

<P><STRONG><a name="[581]"></a>mpi_add_mpi</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_abs
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_add_abs
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_abs
</UL>
<BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_private
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_inv_mod
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mod_mpi
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_add_int
</UL>

<P><STRONG><a name="[582]"></a>mpi_sub_mpi</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_abs
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_add_abs
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_abs
</UL>
<BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_private
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_inv_mod
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mod_mpi
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_int
</UL>

<P><STRONG><a name="[583]"></a>mpi_add_int</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bignum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_add_mpi
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gen_prime
</UL>

<P><STRONG><a name="[584]"></a>mpi_sub_int</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, bignum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_mpi
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gen_prime
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
</UL>

<P><STRONG><a name="[585]"></a>mpi_mul_mpi</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mul_hlp
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_lset
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_copy
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_grow
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_free
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_private
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mul_int
</UL>

<P><STRONG><a name="[587]"></a>mpi_mul_int</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mul_mpi
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
</UL>

<P><STRONG><a name="[588]"></a>mpi_div_mpi</STRONG> (Thumb, 884 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mul_int
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_mpi
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_add_mpi
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_int
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_mpi
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_abs
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_shift_r
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_shift_l
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_msb
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_lset
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_copy
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_grow
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_free
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_init
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mod_mpi
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_int
</UL>

<P><STRONG><a name="[58a]"></a>mpi_div_int</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bignum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
</UL>

<P><STRONG><a name="[58b]"></a>mpi_mod_mpi</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_mpi
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_add_mpi
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_int
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_mpi
</UL>
<BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_private
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_inv_mod
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
</UL>

<P><STRONG><a name="[58c]"></a>mpi_mod_int</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, bignum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
</UL>

<P><STRONG><a name="[58e]"></a>mpi_exp_mod</STRONG> (Thumb, 814 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_montred
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_montmul
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mod_mpi
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_int
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_mpi
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_shift_l
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_msb
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_lset
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_copy
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_grow
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_free
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_private
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_public
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
</UL>

<P><STRONG><a name="[590]"></a>mpi_gcd</STRONG> (Thumb, 274 bytes, Stack size 0 bytes, bignum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_abs
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_int
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_mpi
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_shift_r
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_shift_l
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_lsb
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_copy
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_free
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_inv_mod
</UL>

<P><STRONG><a name="[592]"></a>mpi_inv_mod</STRONG> (Thumb, 608 bytes, Stack size 0 bytes, bignum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gcd
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mod_mpi
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_mpi
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_add_mpi
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_int
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_mpi
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_shift_r
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_lset
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_copy
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_free
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_init
</UL>

<P><STRONG><a name="[593]"></a>mpi_is_prime</STRONG> (Thumb, 500 bytes, Stack size 0 bytes, bignum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mod_int
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mod_mpi
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mul_mpi
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_int
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_int
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_mpi
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_shift_r
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_msb
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_lsb
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_copy
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_grow
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_free
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_gen_prime
</UL>

<P><STRONG><a name="[594]"></a>mpi_gen_prime</STRONG> (Thumb, 272 bytes, Stack size 0 bytes, bignum.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_is_prime
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_int
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_add_int
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_shift_r
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_shift_l
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_msb
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_lset
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_grow
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_free
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_init
</UL>

<P><STRONG><a name="[595]"></a>AES_cbc_core</STRONG> (Thumb, 390 bytes, Stack size 0 bytes, aes_cbc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_encrypt
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_decrypt
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_CBC_Encrypt
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_CBC_Decrypt
</UL>

<P><STRONG><a name="[52f]"></a>AES_CBC_Encrypt</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, aes_cbc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_encrypt_key
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_core
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_AesEncrypt
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_DealSessionOpt
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromClient
</UL>

<P><STRONG><a name="[52b]"></a>AES_CBC_Decrypt</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, aes_cbc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_decrypt_key
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_core
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_AesDecrypt
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromClient
</UL>

<P><STRONG><a name="[598]"></a>AES_set_encrypt_key</STRONG> (Thumb, 636 bytes, Stack size 0 bytes, aes_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_CBC_Encrypt
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_decrypt_key
</UL>

<P><STRONG><a name="[599]"></a>AES_set_decrypt_key</STRONG> (Thumb, 344 bytes, Stack size 0 bytes, aes_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_encrypt_key
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_CBC_Decrypt
</UL>

<P><STRONG><a name="[596]"></a>AES_encrypt</STRONG> (Thumb, 900 bytes, Stack size 0 bytes, aes_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_core
</UL>

<P><STRONG><a name="[597]"></a>AES_decrypt</STRONG> (Thumb, 898 bytes, Stack size 0 bytes, aes_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_core
</UL>

<P><STRONG><a name="[567]"></a>rsa_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rsa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_InitRsaContextWithPrivateKey
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_InitRsaContextWithPublicKey
</UL>

<P><STRONG><a name="[59a]"></a>rsa_public</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, rsa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_read_binary
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_mpi
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_write_binary
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_free
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_pkcs1_encrypt
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_pkcs1_decrypt
</UL>

<P><STRONG><a name="[59b]"></a>rsa_private</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, rsa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_read_binary
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mod_mpi
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mul_mpi
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_mpi
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_add_mpi
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_mpi
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_write_binary
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_free
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_pkcs1_encrypt
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_pkcs1_decrypt
</UL>

<P><STRONG><a name="[56a]"></a>rsa_pkcs1_encrypt</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, rsa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_private
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_public
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_EncryptTextByRsa
</UL>

<P><STRONG><a name="[56e]"></a>rsa_pkcs1_decrypt</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, rsa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_private
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_public
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_DecryptTextByRsa
</UL>

<P><STRONG><a name="[56b]"></a>rsa_free</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, rsa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_free
</UL>
<BR>[Called By]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_DecryptTextByRsa
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_EncryptTextByRsa
</UL>

<P><STRONG><a name="[59c]"></a>crc_cal_by_bit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, crc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
</UL>

<P><STRONG><a name="[52d]"></a>crc16_ccitt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, crc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_cal_by_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_ModuleOtaFileChunkMsg
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_DealSessionOpt
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ConfigReset
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ConfigUnBind
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_StoreAccessInfo
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_StoreConnectionInfo
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_StoreTokenKey
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ConfigPara
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ConfigInitPara
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildHeartMsg
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildEmptyMsg
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_CheckCrc
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildMsg
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildBcMsg
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromClient
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildMessage
</UL>

<P><STRONG><a name="[59d]"></a>AC_BuildOption</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, ac_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildMessage
</UL>

<P><STRONG><a name="[59e]"></a>AC_BuildMessage</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, ac_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_ccitt
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildOption
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendRestMsg
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_DealLed
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendLedStatus2Server
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_UartProcess
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendDeviceRegsiterWithMac
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendUbindMsg
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendDeviceStart
</UL>

<P><STRONG><a name="[5a0]"></a>AC_CalcSum</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ac_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_DealNotifyMessage
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_CheckSum
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildEasyMessage
</UL>

<P><STRONG><a name="[59f]"></a>AC_BuildEasyMessage</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, ac_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_CalcSum
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_DealEvent
</UL>

<P><STRONG><a name="[5a1]"></a>AC_SendMessage</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ac_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromMoudle
</UL>
<BR>[Called By]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendRestMsg
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_DealLed
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendLedStatus2Server
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_UartProcess
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendDeviceRegsiterWithMac
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendUbindMsg
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendDeviceStart
</UL>

<P><STRONG><a name="[5a2]"></a>AC_SendDeviceStart</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ac_api.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendMessage
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildMessage
</UL>

<P><STRONG><a name="[508]"></a>AC_SendRestMsg</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ac_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendMessage
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_UartProcess
</UL>

<P><STRONG><a name="[5a3]"></a>AC_SendUbindMsg</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ac_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendMessage
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_UartProcess
</UL>

<P><STRONG><a name="[5a5]"></a>AC_ParseOption</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, ac_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_RecvMessage
</UL>

<P><STRONG><a name="[5a4]"></a>AC_SendDeviceRegsiterWithMac</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, ac_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendMessage
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildMessage
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_UartProcess
</UL>

<P><STRONG><a name="[510]"></a>AC_RecvMessage</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, ac_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_DealNotifyMessage
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_DealEvent
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_ParseOption
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_SendDataToMoudle
</UL>

<P><STRONG><a name="[5a8]"></a>AC_CheckSum</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ac_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_CalcSum
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_UartProcess
</UL>

<P><STRONG><a name="[5a9]"></a>AC_UartProcess</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, ac_hal.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendRestMsg
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_CheckSum
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendDeviceRegsiterWithMac
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendUbindMsg
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendMessage
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_UartRecv
</UL>

<P><STRONG><a name="[504]"></a>AC_UartRecv</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, ac_hal.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_UartProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_proc_data
</UL>

<P><STRONG><a name="[5aa]"></a>AC_SendLedStatus2Server</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ac_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendMessage
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildMessage
</UL>

<P><STRONG><a name="[5ab]"></a>AC_ConfigWifi</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ac_hal.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_Init
</UL>

<P><STRONG><a name="[5a6]"></a>AC_DealNotifyMessage</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, ac_hal.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_UartSend
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_CalcSum
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_RecvMessage
</UL>

<P><STRONG><a name="[5a7]"></a>AC_DealEvent</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, ac_hal.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_UartSend
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildEasyMessage
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_RecvMessage
</UL>

<P><STRONG><a name="[5ac]"></a>AC_DealLed</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ac_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendMessage
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildMessage
</UL>

<P><STRONG><a name="[308]"></a>AC_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ac_hal.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_ConfigWifi
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateUserTask
</UL>

<P><STRONG><a name="[4e5]"></a>DHCPS_GetIpByMac</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, dhcp_server.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dhcps_getip
</UL>

<P><STRONG><a name="[10d]"></a>DHCPS_RecvCb</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, dhcp_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DhcpClientSMEHandle
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPNakGenAndSend
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ParseDhcpOptions
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClientTableLookup
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dhcp_server.o(.text)
</UL>
<P><STRONG><a name="[5b4]"></a>DHCPS_ClientDelete</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, dhcp_server.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>

<P><STRONG><a name="[4de]"></a>DHCPS_Start</STRONG> (Thumb, 242 bytes, Stack size 0 bytes, dhcp_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_p
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dhcps_start
</UL>

<P><STRONG><a name="[4e0]"></a>DHCPS_Stop</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, dhcp_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_untimeout_p
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dhcps_stop
</UL>

<P><STRONG><a name="[10e]"></a>DNSS_RecvCb</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, dns_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSNameErrGenAndSend
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSAnswerGenAndSend
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dns_server.o(.text)
</UL>
<P><STRONG><a name="[5b7]"></a>DNSS_Config</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dns_server.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[4e2]"></a>DNSS_Start</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, dns_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dnss_start
</UL>

<P><STRONG><a name="[4e4]"></a>DNSS_Stop</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dns_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dnss_stop
</UL>

<P><STRONG><a name="[5be]"></a>eloop_cancel_timeout</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_remove_timeout
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_remove_ptk
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_ptk
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tkip_countermeasures_deinit
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tkip_countermeasures_start
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sta_deinit
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_disconnect
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_free_sta
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_deinit
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_deinit
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKCALCNEGOTIATING_Enter
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKINITDONE_Enter
</UL>

<P><STRONG><a name="[5c1]"></a>eloop_register_timeout</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_ptk
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tkip_countermeasures_start
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sta_deinit
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_handle_timer
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_disconnect
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_add
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_init
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_rekey_gtk
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKINITDONE_Enter
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_send_eapol
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_rekey_gmk
</UL>

<P><STRONG><a name="[5c2]"></a>eloop_handle_timeout</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_remove_timeout
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[5c3]"></a>wpa_supplicant_state_txt</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, wpa_supplicant.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>

<P><STRONG><a name="[112]"></a>eloop_timeout</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.text)
</UL>
<P><STRONG><a name="[5c4]"></a>wpa_supplicant_cancel_connect_timeout</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_connect
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_net_up
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_net_down
</UL>

<P><STRONG><a name="[79]"></a>supplicant_event_net_down</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_connect_timeout
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_timeout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.data)
</UL>
<P><STRONG><a name="[5c5]"></a>wpa_supplicant_cancel_auth_timeout</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_cancel_auth_timeout
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
</UL>

<P><STRONG><a name="[5c6]"></a>wpa_clear_keys</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_key
</UL>
<BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_clear_connection
</UL>

<P><STRONG><a name="[5cb]"></a>wpa_supplicant_disassociate</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_disassociate
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_zero_ether_addr
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_clear_connection
</UL>
<BR>[Called By]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_disassociate
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_timeout
</UL>

<P><STRONG><a name="[5ce]"></a>wpa_supplicant_timeout</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_notify_disassoc
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_net_down
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_zero_ether_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[110]"></a>wpa_supplicant_auth_timer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.text)
</UL>
<P><STRONG><a name="[5d0]"></a>wpa_supplicant_req_auth_timeout</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_rx_eapol
</UL>

<P><STRONG><a name="[5d1]"></a>wpa_supplicant_connect_timeout</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
</UL>
<BR>[Called By]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_connect_network
</UL>

<P><STRONG><a name="[111]"></a>wpa_supplicant_connect_timer</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.text)
</UL>
<P><STRONG><a name="[5d2]"></a>wpa_supplicant_rx_eapol</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_free
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_alloc_copy
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_auth_timeout
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[5d6]"></a>wpa_supplicant_delete_connection</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_connect_network
</UL>

<P><STRONG><a name="[5d7]"></a>wpa_supplicant_set_state</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_scan
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_wake_up
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_psflag
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_frequency_to_channel
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_key_neg_complete
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_mark_disassoc
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
</UL>

<P><STRONG><a name="[5dc]"></a>wpa_supplicant_set_non_wpa_policy</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_param
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
</UL>

<P><STRONG><a name="[5e1]"></a>wpa_set_wep_keys</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_key
</UL>
<BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
</UL>

<P><STRONG><a name="[5e2]"></a>wpa_supplicant_set_suites</STRONG> (Thumb, 516 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_pmk
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_param
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie_default
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_parse_own_wpa_ie
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_get_vendor_ie
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_get_ie
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
</UL>

<P><STRONG><a name="[5ea]"></a>wpa_supplicant_deauthenticate</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_deauthenticate
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_zero_ether_addr
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_clear_connection
</UL>
<BR>[Called By]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_deauthenticate
</UL>

<P><STRONG><a name="[5ec]"></a>wpa_supplicant_associate</STRONG> (Thumb, 390 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_associate
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_get_vendor_ie
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_get_ie
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_set_wep_keys
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_non_wpa_policy
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_auth_timeout
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_clear_keys
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_connect
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
</UL>

<P><STRONG><a name="[5ee]"></a>wpa_config_update_psk</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1
</UL>
<BR>[Called By]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_config_validate_network_test
</UL>

<P><STRONG><a name="[5ef]"></a>wpa_supplicant_cleanup</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_free
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_scan
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ap_deinit
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_deinit
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_cleanup
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_deinit
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_connect_network
</UL>

<P><STRONG><a name="[5f4]"></a>wpa_supplicant_reload_configs</STRONG> (Thumb, 404 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_psflag
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_channel_to_frequency
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_connect_network
</UL>

<P><STRONG><a name="[5f6]"></a>supplicant_send_event</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_scan
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_timer_task
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_reload_config
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_from_unknown
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_mgmt
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_eapol
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_assoc
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_disassoc
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_disconnect_network
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_mic_err
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_scan_completed
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_ps
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_pspoll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_sta_active
</UL>

<P><STRONG><a name="[70]"></a>supplicant_event_scan_completed</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.data)
</UL>
<P><STRONG><a name="[71]"></a>supplicant_event_mic_err</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.data)
</UL>
<P><STRONG><a name="[5f9]"></a>supplicant_event_disconnect_network</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_disconnect
</UL>

<P><STRONG><a name="[6f]"></a>supplicant_event_disassoc</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.data)
</UL>
<P><STRONG><a name="[6e]"></a>supplicant_event_assoc</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.data)
</UL>
<P><STRONG><a name="[72]"></a>supplicant_event_rx_eapol</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.data)
</UL>
<P><STRONG><a name="[73]"></a>supplicant_event_rx_mgmt</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.data)
</UL>
<P><STRONG><a name="[78]"></a>supplicant_event_rx_from_unknown</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.data)
</UL>
<P><STRONG><a name="[7a]"></a>supplicant_event_net_up</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_connect_timeout
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.data)
</UL>
<P><STRONG><a name="[7b]"></a>supplicant_event_update_stat</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.data)
</UL>
<P><STRONG><a name="[5fa]"></a>supplicant_event_reload_config</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_ssid_bssid
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_bssid
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect
</UL>

<P><STRONG><a name="[5fb]"></a>wpa_supplicant_init_default_configs</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key_cfg
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_encrypt_cfg
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_channel_to_frequency
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
</UL>

<P><STRONG><a name="[115]"></a>tls_supplicant_timer_task</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.text)
</UL>
<P><STRONG><a name="[114]"></a>tls_supplicant_task</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.text)
</UL>
<P><STRONG><a name="[315]"></a>wpa_supplicant_init</STRONG> (Thumb, 472 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateExt
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_wif_data
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_default_configs
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_create
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_task_create
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[69e]"></a>wpa_cipher2host</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_current_bss
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
</UL>

<P><STRONG><a name="[264]"></a>wpa_supplicant_get_mac</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_mac_proc
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt
</UL>

<P><STRONG><a name="[266]"></a>wpa_supplicant_set_mac</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_mac_proc
</UL>

<P><STRONG><a name="[4ec]"></a>tls_ap_get_recflag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_task
</UL>

<P><STRONG><a name="[69d]"></a>tls_get_wpa_data</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_current_bss
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_authed_sta
</UL>

<P><STRONG><a name="[11d]"></a>tls_wl_mac_isr</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_core.o(.text)
</UL>
<P><STRONG><a name="[11e]"></a>tls_wl_data_tx_isr</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_litepoint_test
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_core.o(.text)
</UL>
<P><STRONG><a name="[11f]"></a>tls_wl_mgmt_tx_isr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_core.o(.text)
</UL>
<P><STRONG><a name="[120]"></a>tls_wl_rx_isr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_core.o(.text)
</UL>
<P><STRONG><a name="[121]"></a>tls_wl_pm_isr</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_core.o(.text)
</UL>
<P><STRONG><a name="[116]"></a>standby_timeout</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_core.o(.text)
</UL>
<P><STRONG><a name="[117]"></a>tls_wl_power_save_awake</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_wake_up
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_core.o(.text)
</UL>
<P><STRONG><a name="[314]"></a>tls_wl_init</STRONG> (Thumb, 620 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_register_handler
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_enable
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_tx_init
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_init
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_mlme_init
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_init
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_enable_rx
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_enable_mac_int
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_init
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_list_init
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_create
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init_ifdata
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_create
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_task_create
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[626]"></a>ieee80211_hw_config</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_config
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_scan_completed
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_enable_ht
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_associated
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_change_chanel
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_freq
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_disassoc
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_scan_task
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_init
</UL>

<P><STRONG><a name="[628]"></a>ieee80211_bss_info_change_notify</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_bss_info_changed
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_beacon
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_associated
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_disassoc
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_del_beacon
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_beacon
</UL>

<P><STRONG><a name="[78e]"></a>ieee80211_reset_erp_info</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_disassoc
</UL>

<P><STRONG><a name="[62b]"></a>ieee80211_disconnect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_change_iface
</UL>

<P><STRONG><a name="[62a]"></a>ieee80211_change_iface</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_mode
</UL>

<P><STRONG><a name="[62c]"></a>tls_wl_power_save</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_sleep
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_beacon
</UL>

<P><STRONG><a name="[273]"></a>ieee80211_get_tx_gain</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_txg_proc
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_init
</UL>

<P><STRONG><a name="[616]"></a>tls_get_wif_data</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_ethernet_data_rx_callback
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_buffer_release
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_buffer_acquire
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hw_del_multicast_key
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hw_set_multicast_key
</UL>

<P><STRONG><a name="[65d]"></a>tls_get_ieee80211_if_data</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_standby
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sleep
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_ps
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_buffer_release
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_buffer_acquire
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_change_chanel
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_tx
</UL>

<P><STRONG><a name="[62e]"></a>tls_wl_cleanup</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_mlme_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_cleanup
</UL>

<P><STRONG><a name="[633]"></a>tls_wl_if_set_mode</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_change_iface
</UL>
<BR>[Called By]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_mode
</UL>

<P><STRONG><a name="[634]"></a>tls_wl_if_get_scan_res</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_flush
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_scan_rslt
</UL>

<P><STRONG><a name="[637]"></a>tls_wl_if_sta_flush</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_flush
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_deauthenticate
</UL>

<P><STRONG><a name="[639]"></a>tls_wl_if_sta_deauth</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_deauth_disassoc
</UL>
<BR>[Called By]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_deauth
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_deauthenticate
</UL>

<P><STRONG><a name="[63b]"></a>tls_wl_if_sta_disassoc</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_deauth_disassoc
</UL>
<BR>[Called By]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_disassoc
</UL>

<P><STRONG><a name="[842]"></a>tls_wl_if_set_tx_queue_params</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_set_tx_queue_params
</UL>

<P><STRONG><a name="[63c]"></a>tls_wl_if_set_sta_flags</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sta_flags
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_send_pkt2sta
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_send_all_pkt2sta
</UL>

<P><STRONG><a name="[63e]"></a>tls_wl_if_set_bssid</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_bssid
</UL>

<P><STRONG><a name="[63f]"></a>tls_wl_if_set_rate_mode</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_get_rate_table
</UL>
<BR>[Called By]<UL><LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_ap
</UL>

<P><STRONG><a name="[640]"></a>tls_wl_if_set_beacon</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_change_notify
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_ap
</UL>

<P><STRONG><a name="[641]"></a>tls_wl_if_del_beacon</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_change_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_deinit_ap
</UL>

<P><STRONG><a name="[642]"></a>tls_wl_if_scan</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_request_scan
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_scan_req
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_scan
</UL>

<P><STRONG><a name="[645]"></a>tls_wl_if_set_ssid</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_set_ssid
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_req_auth
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_deauth_disassoc
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_ssid
</UL>

<P><STRONG><a name="[648]"></a>tls_wl_if_set_freq</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_freq
</UL>
<BR>[Called By]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_freq
</UL>

<P><STRONG><a name="[64a]"></a>tls_wl_if_set_auth</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_auth_params
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_auth_alg
</UL>

<P><STRONG><a name="[64b]"></a>tls_wl_if_remove_key</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_del_key
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
</UL>
<BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_remove_key
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_add_key
</UL>

<P><STRONG><a name="[64d]"></a>tls_wl_if_add_key</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_add_key
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_remove_key
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sta_flags
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_key
</UL>

<P><STRONG><a name="[64f]"></a>tls_wl_if_xmit</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_tx
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Called By]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_deliver_frame
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_send_pkt2sta
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_send_all_pkt2sta
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_send_eapol
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_proc_beacon_done
</UL>

<P><STRONG><a name="[651]"></a>tls_wl_if_send_eapol</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_xmit
</UL>
<BR>[Called By]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_send_eapol
</UL>

<P><STRONG><a name="[652]"></a>tls_wl_if_send_mlme</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_mgmt
</UL>
<BR>[Called By]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_send_mlme
</UL>

<P><STRONG><a name="[654]"></a>tls_wl_if_sta_add</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_set_key
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add_apsta
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rate_control_init
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sta_flags
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
</UL>
<BR>[Called By]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_add
</UL>

<P><STRONG><a name="[658]"></a>tls_wl_if_sta_remove</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_free
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_remove
</UL>

<P><STRONG><a name="[65a]"></a>tls_wl_if_get_inact_sec</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_get_inact_sec
</UL>

<P><STRONG><a name="[615]"></a>tls_wl_if_disconnect</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_disassoc
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[65c]"></a>tls_wl_if_set_max_rate</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, tls_wl_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_get_rate_table
</UL>

<P><STRONG><a name="[745]"></a>tls_wl_if_set_adhoc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_associate
</UL>

<P><STRONG><a name="[746]"></a>tls_wl_if_set_ps_mode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_associate
</UL>

<P><STRONG><a name="[1e6]"></a>tls_wl_if_ps</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_sleep
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_ieee80211_if_data
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_wake_up
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_ps
</UL>

<P><STRONG><a name="[1e7]"></a>tls_wl_if_standby</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_ieee80211_if_data
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_ps
</UL>

<P><STRONG><a name="[1e8]"></a>tls_wl_if_sleep</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_ieee80211_if_data
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_ps
</UL>

<P><STRONG><a name="[661]"></a>delay_us</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf65_set_channel
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_hed_rf65_init
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LO_leakage
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LO_Leakage_Deal
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mismatch_once
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_rf65
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vco_method
</UL>

<P><STRONG><a name="[271]"></a>hed_rf_read</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lppstp_proc
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lppstr_proc
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rfr_proc
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf65_vco_auto_check
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_rf65
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vco_method
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf65_showregs
</UL>

<P><STRONG><a name="[65f]"></a>hed_rf65_showregs</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_read
</UL>

<P><STRONG><a name="[272]"></a>hed_rf_write</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf65_lo_leakage
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rfw_proc
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf65_vco_auto_check
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf65_set_channel
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_hed_rf65_init
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LO_leakage
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LO_Leakage_Deal
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_rf65
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_adjust_vco
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vco_method
</UL>

<P><STRONG><a name="[660]"></a>_vco_method</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_write
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_read
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_adjust_vco
</UL>

<P><STRONG><a name="[662]"></a>soft_adjust_vco</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_write
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vco_method
</UL>
<BR>[Called By]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_rf65
</UL>

<P><STRONG><a name="[663]"></a>_set_rf65</STRONG> (Thumb, 404 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_write
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_read
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_reset
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_adjust_vco
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_hed_rf65_init
</UL>

<P><STRONG><a name="[668]"></a>fftr2_dit_new</STRONG> (Thumb, 268 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft
</UL>

<P><STRONG><a name="[666]"></a>ReverseBits</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bit_rev
</UL>

<P><STRONG><a name="[665]"></a>NumberOfBitsNeeded</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bit_rev
</UL>

<P><STRONG><a name="[664]"></a>bit_rev</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NumberOfBitsNeeded
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseBits
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft
</UL>

<P><STRONG><a name="[667]"></a>fft</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bit_rev
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fftr2_dit_new
</UL>
<BR>[Called By]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sweep_once
</UL>

<P><STRONG><a name="[66b]"></a>read_IQ_data</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sweep_once
</UL>

<P><STRONG><a name="[669]"></a>mismatch_once</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sweep_once
</UL>

<P><STRONG><a name="[66a]"></a>sweep_once</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mismatch_once
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_IQ_data
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fft
</UL>
<BR>[Called By]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LO_Leakage_Deal
</UL>

<P><STRONG><a name="[66c]"></a>LO_Leakage_Deal</STRONG> (Thumb, 1404 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_write
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_mulss (via BLX)
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sweep_once
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LO_leakage
</UL>

<P><STRONG><a name="[66f]"></a>LO_leakage</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_write
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LO_Leakage_Deal
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_hed_rf65_init
</UL>

<P><STRONG><a name="[670]"></a>_hed_rf65_init</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_efuse_read
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_write
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LO_leakage
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_rf65
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf65_lo_leakage
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf65_init
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf65_init
</UL>

<P><STRONG><a name="[764]"></a>tls_wifi_specialinit_by_hwver</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_init
</UL>

<P><STRONG><a name="[671]"></a>hed_rf65_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_hed_rf65_init
</UL>

<P><STRONG><a name="[672]"></a>hed_rf65_set_channel</STRONG> (Thumb, 282 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_write
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf65_set_channel
</UL>

<P><STRONG><a name="[673]"></a>hed_rf65_vco_auto_check</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_write
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_read
</UL>

<P><STRONG><a name="[27b]"></a>hed_rf65_lo_leakage</STRONG> (Thumb, 288 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_write
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_hed_rf65_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lppstp_proc
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lppstr_proc
</UL>

<P><STRONG><a name="[674]"></a>rf65_init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_hed_rf65_init
</UL>
<BR>[Called By]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_init
</UL>

<P><STRONG><a name="[128]"></a>rf65_set_channel</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tls_wl_rf65.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf65_set_channel
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_frequency_to_channel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_hw.o(.text)
</UL>
<P><STRONG><a name="[61a]"></a>tls_wl_litepoint_test</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_data_tx_isr
</UL>

<P><STRONG><a name="[622]"></a>tls_wl_tx_init</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
</UL>

<P><STRONG><a name="[676]"></a>ieee80211_set_qos_hdr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_qos_ctl
</UL>
<BR>[Called By]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
</UL>

<P><STRONG><a name="[678]"></a>ieee80211_tx_encrypt_add_iv</STRONG> (Thumb, 256 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_wep_get_iv
</UL>
<BR>[Called By]<UL><LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_tx_start
</UL>

<P><STRONG><a name="[67a]"></a>ieee80211_tx_rate_ctrl</STRONG> (Thumb, 508 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_rate
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_is_ht
</UL>
<BR>[Called By]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
</UL>

<P><STRONG><a name="[67d]"></a>ieee80211_tx_michael_mic_add</STRONG> (Thumb, 344 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mic_block
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_has_a4
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via BLX)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
</UL>

<P><STRONG><a name="[11b]"></a>tls_wl_txmgmt_cmpt_task</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_core.o(.text)
</UL>
<P><STRONG><a name="[650]"></a>tls_wl_if_tx</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_ieee80211_if_data
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_xmit
</UL>

<P><STRONG><a name="[4d0]"></a>tls_wifi_buffer_acquire</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_ieee80211_if_data
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_wif_data
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_output
</UL>

<P><STRONG><a name="[4d1]"></a>tls_wifi_buffer_release</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_ieee80211_if_data
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_wif_data
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_output
</UL>

<P><STRONG><a name="[75f]"></a>kref_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add_apsta
</UL>

<P><STRONG><a name="[68a]"></a>kref_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_match_bss
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_get
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add_apsta
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
</UL>

<P><STRONG><a name="[68b]"></a>kref_put</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_del
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_put
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_free
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
</UL>

<P><STRONG><a name="[68c]"></a>ieee80211_get_bssid</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_is_data
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_is_ctl
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_has_a4
</UL>
<BR>[Called By]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_deliver_frame
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_michael_mic_verify
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prepare_for_handlers
</UL>

<P><STRONG><a name="[5f5]"></a>ieee80211_channel_to_frequency</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_handle
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_process_chanswitch
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_enable_ht
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_probe_resp
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_beacon
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_bss_info
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_default_configs
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configs
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_create_softap
</UL>

<P><STRONG><a name="[5d9]"></a>ieee80211_frequency_to_channel</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_current_bss
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf65_set_channel
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_scan_req
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
</UL>

<P><STRONG><a name="[690]"></a>ieee80211_get_channel</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_handle
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_process_chanswitch
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_probe_resp
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_beacon
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_bss_info
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_freq
</UL>

<P><STRONG><a name="[2fd]"></a>ieee802_11_parse_elems</STRONG> (Thumb, 326 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_dataframe_recv
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_handle
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_probe_resp
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_auth
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_beacon
</UL>

<P><STRONG><a name="[649]"></a>ieee80211_set_freq</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_channel
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hw_config
</UL>
<BR>[Called By]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_config_auth
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_freq
</UL>

<P><STRONG><a name="[691]"></a>ieee80211_hdrlen</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_is_data
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_is_ctl
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_has_a4
</UL>
<BR>[Called By]<UL><LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_defragment
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_check_frame
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_h_amsdu
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_data_to_8023
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_mgmt
</UL>

<P><STRONG><a name="[692]"></a>ieee80211_ssid_txt</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, tls_wl_util.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>

<P><STRONG><a name="[693]"></a>ieee80211_beacon_get</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_bss_info_changed
</UL>

<P><STRONG><a name="[5f8]"></a>ieee80211_get_tim_ie</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_clear_unicast_ps_bit
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_clear_multicast_ps_bit
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_ps_rx
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_beacon_done
</UL>

<P><STRONG><a name="[2f0]"></a>tls_wifi_data_recv_cb_register</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_start_oneshot
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_stop_oneshot
</UL>

<P><STRONG><a name="[4d7]"></a>tls_wifi_status_change_cb_register</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tcpip_stack_init
</UL>

<P><STRONG><a name="[4d5]"></a>tls_ethernet_data_rx_callback</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_wif_data
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tcpip_stack_init
</UL>

<P><STRONG><a name="[2a7]"></a>tls_wifi_scan_result_cb_register</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_init
</UL>

<P><STRONG><a name="[1eb]"></a>tls_wifi_scan</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_scan
</UL>

<P><STRONG><a name="[2a3]"></a>tls_wifi_get_scan_rslt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_get_scan_res
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_wscan_cmplt
</UL>

<P><STRONG><a name="[2ff]"></a>tls_wifi_set_listen_mode</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_oneshot_flag
</UL>

<P><STRONG><a name="[7da]"></a>tls_wifi_get_listen_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_mgmt_filter
</UL>

<P><STRONG><a name="[278]"></a>tls_wifi_change_chanel</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_change_chanel
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_switch_channel_tim
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lprstr_proc
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpchl_proc
</UL>

<P><STRONG><a name="[695]"></a>wpa_update_ssid</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_ssid_bssid
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update
</UL>

<P><STRONG><a name="[696]"></a>wpa_update_bssid</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_bssid
</UL>

<P><STRONG><a name="[697]"></a>wpa_update_mode</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_ssid_bssid
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_bssid
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect
</UL>

<P><STRONG><a name="[698]"></a>wpa_update_key</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_ssid_bssid
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_bssid
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect
</UL>

<P><STRONG><a name="[5fc]"></a>wpa_update_encrypt_cfg</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_encrypt
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_default_configs
</UL>

<P><STRONG><a name="[699]"></a>wpa_update_encrypt</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_encrypt_cfg
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
</UL>

<P><STRONG><a name="[5fd]"></a>wpa_update_key_cfg</STRONG> (Thumb, 414 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key_4_ap
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_default_configs
</UL>

<P><STRONG><a name="[69a]"></a>wpa_update_key_4_ap</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex_to_digit
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key_cfg
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
</UL>

<P><STRONG><a name="[69b]"></a>wpa_update_ip_info</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_set_addr
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_get_ethif
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dhcp_stop
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
</UL>

<P><STRONG><a name="[69c]"></a>wpa_update_dnsname</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
</UL>

<P><STRONG><a name="[1f1]"></a>tls_wifi_connect</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_to_flash
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_mode
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_ssid
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_reload_config
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_connect
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_join_net
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_auto_reconnect
</UL>

<P><STRONG><a name="[1f0]"></a>tls_wifi_connect_by_bssid</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_to_flash
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_mode
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_bssid
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_reload_config
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_connect_by_bssid
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_join_net
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_auto_reconnect
</UL>

<P><STRONG><a name="[300]"></a>tls_wifi_connect_by_ssid_bssid</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_to_flash
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_mode
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_ssid
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_reload_config
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_connect_by_ssid_bssid
</UL>

<P><STRONG><a name="[1f7]"></a>tls_wifi_softap_create</STRONG> (Thumb, 250 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_to_flash
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_dnsname
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_ip_info
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key_4_ap
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_encrypt
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_mode
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_ssid
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_channel_to_frequency
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_reload_config
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_net
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_auto_reconnect
</UL>

<P><STRONG><a name="[1fc]"></a>tls_wifi_disconnect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_disconnect_network
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_wait_disconnect
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_oneshot_flag
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_disconnect_network
</UL>

<P><STRONG><a name="[1fb]"></a>tls_wifi_auto_connect_flag</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDeviceInit
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_disconnect_network
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_auto_reconnect
</UL>

<P><STRONG><a name="[24f]"></a>tls_wifi_get_current_bss</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_frequency_to_channel
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_wpa_data
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cipher2host
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_wjoin_success
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wjoin_proc
</UL>

<P><STRONG><a name="[4fd]"></a>tls_wifi_set_psflag</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_exit
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_enter
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configs
</UL>

<P><STRONG><a name="[5da]"></a>tls_wifi_get_psflag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
</UL>

<P><STRONG><a name="[69f]"></a>tls_wifi_send_oneshotdata</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, wm_wifi_api.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_req
</UL>

<P><STRONG><a name="[203]"></a>tls_wifi_get_authed_sta_info</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_wifi_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_authed_sta
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_sta_detail
</UL>

<P><STRONG><a name="[6a5]"></a>decrypt_data</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, wm_wifi_oneshot_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshotinfo_resolve_probereq
</UL>

<P><STRONG><a name="[6a3]"></a>decode_data</STRONG> (Thumb, 274 bytes, Stack size 0 bytes, wm_wifi_oneshot_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshotinfo_resolve_probereq
</UL>

<P><STRONG><a name="[6a4]"></a>tls_wifi_oneshotinfo_resolve_probereq</STRONG> (Thumb, 628 bytes, Stack size 0 bytes, wm_wifi_oneshot_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_data
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decrypt_data
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_resolve_info
</UL>

<P><STRONG><a name="[6a6]"></a>tls_wifi_oneshot_resolve_info</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, wm_wifi_oneshot_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc8
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshotinfo_resolve_probereq
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_decode_new_oneshot_data
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_pbreq_recv
</UL>

<P><STRONG><a name="[6a8]"></a>tls_wifi_pbreq_encry_data</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, wm_wifi_oneshot_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_pbreq_recv
</UL>

<P><STRONG><a name="[6a9]"></a>tls_wifi_pbreq_recv</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, wm_wifi_oneshot_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_oneshot_flag
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_pbreq_encry_data
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_resolve_info
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_clear_1shot_info
</UL>
<BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_check_frame
</UL>

<P><STRONG><a name="[2f7]"></a>tls_wifi_decode_new_oneshot_data</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, wm_wifi_oneshot_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_mac_addr
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_resolve_info
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_clear_1shot_info
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_lsd_oneshot
</UL>

<P><STRONG><a name="[6aa]"></a>tls_tx_send_litepoint_mgmt</STRONG> (Thumb, 350 bytes, Stack size 0 bytes, litepoint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_mac
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_get_mgmt_txbuf
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_get_rate_table
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_ieee80211_if_data
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>

<P><STRONG><a name="[27a]"></a>tls_tx_send_litepoint</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, litepoint.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_mac
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_get_rate_table
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_ieee80211_if_data
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hw_config
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lptstr_proc
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_litepoint_test
</UL>

<P><STRONG><a name="[262]"></a>tls_param_load_user</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, wm_param.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc32
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_read
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updp_proc
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_load_factory_default
</UL>

<P><STRONG><a name="[6ae]"></a>tls_param_load_factory_default</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, wm_param.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_load_user
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_to_default
</UL>

<P><STRONG><a name="[311]"></a>tls_param_init</STRONG> (Thumb, 420 bytes, Stack size 0 bytes, wm_param.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc32
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_read
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_load_factory_default
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_to_flash
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[200]"></a>tls_param_set</STRONG> (Thumb, 560 bytes, Stack size 0 bytes, wm_param.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_to_flash
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_ssid_bssid
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_auto_connect_flag
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_webs
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_warc
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_pass
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_sha1
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_cmdm
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_iom
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_espt
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_espc
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_atpt
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_dnsname
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_atlt
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_uart_params
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_default_socket_params
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_hostif_mode
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_work_mode
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_ip_info
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_roaming_mode
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_wl_ps_mode
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_adhoc_create_mode
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_hw_mode
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_region
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_channellist
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_channel
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_hide_ssid
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_bssid
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_encrypt
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_key
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_ssid
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_wireless_mode
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_psflag
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_wpa
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_wep
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_open
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_config_validate_network_test
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_dnsname
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_ip_info
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key_4_ap
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_encrypt
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_mode
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_bssid
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_ssid
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_default_configs
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_delete_connection
</UL>

<P><STRONG><a name="[1d7]"></a>tls_param_get</STRONG> (Thumb, 476 bytes, Stack size 0 bytes, wm_param.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_init
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_auto_connect_flag
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_webs
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_warc
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_pass
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_sha1
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_cmdm
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_iom
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_espt
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_espc
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_atpt
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_uart_params
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_hostif_mode
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_work_mode
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_ip_info
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_roaming_mode
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_wl_ps_mode
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_adhoc_create_mode
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_hw_mode
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_region
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_channellist
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_hide_ssid
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_original_key
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_original_ssid
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_wireless_mode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_encrypt
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_channel
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_ip_info
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_dnsname
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_bssid
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_ssid
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_key
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_init_socket_cfg
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_auto_mode
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_task
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_auto_reconnect
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_net_up
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_wl_select_max_rate
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_wpa
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_wep
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_open
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_ssid
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_scan_req
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init_ifdata
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_psflag
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_default_configs
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configs
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_delete_connection
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_create_softap
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_connect_network
</UL>

<P><STRONG><a name="[1e2]"></a>tls_param_to_flash</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, wm_param.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_to_flash
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_ssid_bssid
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_bssid
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_pmtf
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
</UL>

<P><STRONG><a name="[1e4]"></a>tls_param_to_default</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wm_param.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_load_factory_default
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_to_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_reset_flash
</UL>

<P><STRONG><a name="[30f]"></a>tls_restore_param_from_backup</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, wm_param.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_efuse_write
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_read
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_to_flash
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_start
</UL>

<P><STRONG><a name="[261]"></a>tls_param_save_user_default</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, wm_param.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc32
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updp_proc
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_save_user
</UL>

<P><STRONG><a name="[6b0]"></a>tls_param_save_user</STRONG> (Thumb, 222 bytes, Stack size 0 bytes, wm_param.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_save_user_default
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>

<P><STRONG><a name="[21b]"></a>tls_param_get_updp_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_param.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_uart_params
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_default_socket_params
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_ip_info
</UL>

<P><STRONG><a name="[260]"></a>tls_param_set_updp_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_param.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updp_proc
</UL>

<P><STRONG><a name="[6b2]"></a>hostapd_clear_unicast_ps_bit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_tim_ie
</UL>
<BR>[Called By]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_free_sta
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_send_pkt2sta
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_send_all_pkt2sta
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_check_ps_pkt
</UL>

<P><STRONG><a name="[60a]"></a>hostapd_check_ps_pkt</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_clear_unicast_ps_bit
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_clear_multicast_ps_bit
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_del
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[6b6]"></a>hostapd_alloc_bss_data</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_create_ap
</UL>

<P><STRONG><a name="[6b7]"></a>hostapd_mac_comp_empty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>

<P><STRONG><a name="[5f3]"></a>wpa_supplicant_ap_deinit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_deinit_ap
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_interface_free
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_interface_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_mark_disassoc
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_create_ap
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_create_softap
</UL>

<P><STRONG><a name="[603]"></a>wpa_supplicant_create_ap</STRONG> (Thumb, 280 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_mode
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_interface
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_alloc_bss_data
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_conf_ap
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_config_defaults
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ap_deinit
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_create_softap
</UL>

<P><STRONG><a name="[60f]"></a>hostapd_mgmt_rx</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_add_randomness
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_mgmt
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_bssid
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[6c2]"></a>hostapd_clean_ps_multicast</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_del
</UL>
<BR>[Called By]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_interface_free
</UL>

<P><STRONG><a name="[60c]"></a>hostapd_proc_beacon_done</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_clear_multicast_ps_bit
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_del
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_xmit
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[60d]"></a>hostapd_ctrl_sta_active</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_send_all_pkt2sta
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[60e]"></a>hostapd_ctrl_rx_pspoll</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_send_pkt2sta
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[60b]"></a>hostapd_ps_rx</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_alloc_ps_pkt
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_tim_ie
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[6c7]"></a>wpa_bss_remove</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
</UL>

<P><STRONG><a name="[6c8]"></a>wpa_bss_add</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
</UL>

<P><STRONG><a name="[5f1]"></a>wpa_bss_deinit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
</UL>

<P><STRONG><a name="[5e4]"></a>wpa_bss_get_ie</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, bss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_get_bit_rates
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_get_max_rate
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL>

<P><STRONG><a name="[5e3]"></a>wpa_bss_get_vendor_ie</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, bss.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL>

<P><STRONG><a name="[6c9]"></a>wpa_bss_get_vendor_ie_multi</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, bss.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_put
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_alloc
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_free
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>

<P><STRONG><a name="[6cc]"></a>wpa_bss_get_max_rate</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, bss.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_get_ie
</UL>

<P><STRONG><a name="[6cd]"></a>wpa_bss_get_bit_rates</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, bss.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_get_ie
</UL>

<P><STRONG><a name="[6ce]"></a>wpa_supplicant_connect</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_scan
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_connect_timeout
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
</UL>

<P><STRONG><a name="[607]"></a>wpa_supplicant_event_assoc</STRONG> (Thumb, 230 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_notify_assoc
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_associnfo
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_add_randomness
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_free
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_non_wpa_policy
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_rx_eapol
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_auth_timeout
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_auth_timeout
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[6d1]"></a>wpa_supplicant_update_key_wep</STRONG> (Thumb, 326 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2digit
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
</UL>

<P><STRONG><a name="[6d4]"></a>wpa_supplicant_update_key_wpa</STRONG> (Thumb, 284 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2digit
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
</UL>

<P><STRONG><a name="[5c9]"></a>wpa_supplicant_mark_disassoc</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ap_deinit
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_disassoc
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_clear_connection
</UL>

<P><STRONG><a name="[608]"></a>wpa_supplicant_event_disassoc</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_mark_disassoc
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_notify_disassoc
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[606]"></a>wpa_supplicant_event_scan_results</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_connect
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_delete_connection
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[6de]"></a>ieee802_1x_set_sta_authorized</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ieee802_1x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_set_authorized
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_set_authorized
</UL>
<BR>[Called By]<UL><LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_set_eapol
</UL>

<P><STRONG><a name="[612]"></a>ieee802_1x_receive</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, ieee802_1x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[6e2]"></a>hostapd_notif_assoc</STRONG> (Thumb, 308 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_validate_wpa_ie
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sta_init
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sm_event
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_parse_elems
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_new_assoc_sta
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_disassoc
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_add
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_free_sta
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_add_randomness
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc
</UL>

<P><STRONG><a name="[6eb]"></a>hostapd_eid_supp_rates</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_assoc_resp
</UL>

<P><STRONG><a name="[6ec]"></a>hostapd_eid_ext_supp_rates</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_assoc_resp
</UL>

<P><STRONG><a name="[6f6]"></a>hostapd_own_capab_info</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_assoc_resp
</UL>

<P><STRONG><a name="[6f1]"></a>ieee802_11_print_ssid</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_assoc_ies
</UL>

<P><STRONG><a name="[6c0]"></a>ieee802_11_mgmt</STRONG> (Thumb, 330 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sm_event
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_disassociate_indication
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_deauthenticate_indication
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_remove
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_free_sta
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_auth
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_set_authorized
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_mgmt_rx
</UL>

<P><STRONG><a name="[613]"></a>ieee802_11_rx_from_unknown</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_disassoc
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_deauth
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[601]"></a>wpa_supplicant_req_scan</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_connect_network
</UL>

<P><STRONG><a name="[609]"></a>wpa_supplicant_scan</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_scan
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_free
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[5d8]"></a>wpa_supplicant_cancel_scan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_connect
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
</UL>

<P><STRONG><a name="[10f]"></a>wpa_supplicant_scan_timer</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.text)
</UL>
<P><STRONG><a name="[6d6]"></a>wpa_scan_get_ie</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, scan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_res_match
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ssid_bss_match
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
</UL>

<P><STRONG><a name="[6d7]"></a>wpa_scan_get_vendor_ie</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, scan.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_res_match
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ssid_bss_match
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
</UL>

<P><STRONG><a name="[709]"></a>wpa_scan_get_vendor_ie_multi</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, scan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_put
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_alloc
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_free
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>

<P><STRONG><a name="[70a]"></a>wpa_scan_results_free</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, scan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>

<P><STRONG><a name="[5e9]"></a>pbkdf2_sha1</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, sha1-pbkdf2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1_f
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_wpa_psk
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_config_update_psk
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL>

<P><STRONG><a name="[6a1]"></a>ap_get_authed_sta</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, hostapd_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_wpa_data
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_authed_sta_info
</UL>

<P><STRONG><a name="[6c3]"></a>ap_get_sta</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, hostapd_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_disconnect
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_add
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_notif_assoc
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc_cb
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_mgmt
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;michael_mic_failure
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_1x_receive
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_rx_from_unknown
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_ps_rx
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_ctrl_sta_active
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_ctrl_rx_pspoll
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__wpa_send_eapol
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_set_eapol
</UL>

<P><STRONG><a name="[712]"></a>ap_sta_hash_add</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hostapd_sta_info.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_add
</UL>

<P><STRONG><a name="[6df]"></a>ap_sta_set_authorized</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, hostapd_sta_info.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tkip_countermeasures_start
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_handle_timer
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_disconnect
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_free_sta
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_1x_set_sta_authorized
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_mgmt
</UL>

<P><STRONG><a name="[122]"></a>ap_handle_timer</STRONG> (Thumb, 302 bytes, Stack size 0 bytes, hostapd_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_get_inact_sec
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_disassociate_indication
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_deauthenticate_indication
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_disassoc
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_deauth
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_free_sta
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_set_authorized
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hostapd_sta_info.o(.text)
</UL>
<P><STRONG><a name="[6e8]"></a>ap_free_sta</STRONG> (Thumb, 494 bytes, Stack size 0 bytes, hostapd_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sta_deinit
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_remove
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_set_authorized
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_clear_unicast_ps_bit
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_free_stas
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_handle_timer
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_notif_assoc
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_mgmt
</UL>

<P><STRONG><a name="[711]"></a>hostapd_free_stas</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, hostapd_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_deauthenticate_indication
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_free_sta
</UL>
<BR>[Called By]<UL><LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_flush_old_stations
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_interface_deinit
</UL>

<P><STRONG><a name="[6e4]"></a>ap_sta_add</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, hostapd_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_hash_add
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_notif_assoc
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_auth
</UL>

<P><STRONG><a name="[705]"></a>ap_sta_disconnect</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, hostapd_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_remove
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sm_event
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_deauthenticate_indication
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_deauth
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_set_authorized
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc_cb
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sta_disconnect
</UL>

<P><STRONG><a name="[714]"></a>ieee80211_tkip_countermeasures_deinit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tkip_countermeasures.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_deinit_wpa
</UL>

<P><STRONG><a name="[614]"></a>michael_mic_failure</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, tkip_countermeasures.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sta_local_mic_failure_report
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_michaelmicfailure_indication
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tkip_countermeasures_start
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive_error_report
</UL>

<P><STRONG><a name="[71a]"></a>wpa_eapol_key_send</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_ether_send
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_mic
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_zero_ether_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_4_of_4
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_4
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_key_request
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_2
</UL>

<P><STRONG><a name="[71e]"></a>wpa_sm_key_request</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_alloc_eapol
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc_byte_array
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rekey_ptk
</UL>

<P><STRONG><a name="[721]"></a>wpa_supplicant_send_2_of_4</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_alloc_eapol
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
</UL>

<P><STRONG><a name="[72e]"></a>wpa_supplicant_send_4_of_4</STRONG> (Thumb, 288 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_alloc_eapol
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
</UL>

<P><STRONG><a name="[5d5]"></a>wpa_sm_rx_eapol</STRONG> (Thumb, 350 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_rx_eapol
</UL>

<P><STRONG><a name="[5df]"></a>wpa_sm_set_assoc_wpa_ie</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_associnfo
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_non_wpa_policy
</UL>

<P><STRONG><a name="[5ca]"></a>wpa_sm_set_config</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_clear_connection
</UL>

<P><STRONG><a name="[73d]"></a>wpa_sm_init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_wpa
</UL>

<P><STRONG><a name="[5f0]"></a>wpa_sm_deinit</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
</UL>

<P><STRONG><a name="[5e6]"></a>wpa_sm_parse_own_wpa_ie</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL>

<P><STRONG><a name="[5e8]"></a>wpa_sm_set_pmk</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL>

<P><STRONG><a name="[5e0]"></a>wpa_sm_set_param</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_non_wpa_policy
</UL>

<P><STRONG><a name="[600]"></a>wpa_sm_set_own_addr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_connect_network
</UL>

<P><STRONG><a name="[5dd]"></a>wpa_sm_set_ap_wpa_ie</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_associnfo
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_non_wpa_policy
</UL>

<P><STRONG><a name="[5de]"></a>wpa_sm_set_ap_rsn_ie</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_associnfo
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_non_wpa_policy
</UL>

<P><STRONG><a name="[5e7]"></a>wpa_sm_set_assoc_wpa_ie_default</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gen_wpa_ie
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL>

<P><STRONG><a name="[6d0]"></a>wpa_sm_notify_assoc</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
</UL>

<P><STRONG><a name="[5cf]"></a>wpa_sm_notify_disassoc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_state
</UL>
<BR>[Called By]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_disassoc
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_timeout
</UL>

<P><STRONG><a name="[708]"></a>wpa_drv_scan</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_scan
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
</UL>

<P><STRONG><a name="[740]"></a>wpa_drv_set_freq</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_freq
</UL>
<BR>[Called By]<UL><LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_set_freq
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_associate
</UL>

<P><STRONG><a name="[741]"></a>wpa_drv_set_auth_alg</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_auth
</UL>
<BR>[Called By]<UL><LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_ap
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_associate
</UL>

<P><STRONG><a name="[742]"></a>wpa_drv_set_auth_params</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_auth
</UL>
<BR>[Called By]<UL><LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_ap
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_associate
</UL>

<P><STRONG><a name="[6bd]"></a>wpa_drv_set_mode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_create_ap
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_associate
</UL>

<P><STRONG><a name="[743]"></a>wpa_drv_set_bssid</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_bssid
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_interface
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_associate
</UL>

<P><STRONG><a name="[6ba]"></a>wpa_drv_deinit_ap</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_del_beacon
</UL>
<BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ap_deinit
</UL>

<P><STRONG><a name="[5f2]"></a>wpa_drv_cleanup</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
</UL>

<P><STRONG><a name="[744]"></a>wpa_drv_set_ssid</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_ssid
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_associate
</UL>

<P><STRONG><a name="[5ed]"></a>wpa_drv_associate</STRONG> (Thumb, 306 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_ssid
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_bssid
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_auth_params
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_auth_alg
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_freq
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cipher2drv
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_mode
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_ps_mode
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_adhoc
</UL>
<BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate
</UL>

<P><STRONG><a name="[5eb]"></a>wpa_drv_deauthenticate</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_deauth
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deauthenticate
</UL>

<P><STRONG><a name="[748]"></a>wpa_drv_send_eapol</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_send_eapol
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_ether_send
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_hapd_send_eapol
</UL>

<P><STRONG><a name="[5cd]"></a>wpa_drv_disassociate</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
</UL>

<P><STRONG><a name="[5c7]"></a>wpa_drv_set_key</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_broadcast_ether_addr
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_add_key
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_key
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_key
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_set_wep_keys
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_clear_keys
</UL>

<P><STRONG><a name="[74a]"></a>wpa_drv_remove_key</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_broadcast_ether_addr
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_remove_key
</UL>
<BR>[Called By]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_bss
</UL>

<P><STRONG><a name="[5e5]"></a>wpa_parse_wpa_ie</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wpa_ie.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_wpa
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_rsn
</UL>
<BR>[Called By]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ssid_bss_match
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_parse_own_wpa_ie
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites
</UL>

<P><STRONG><a name="[73e]"></a>wpa_gen_wpa_ie</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, wpa_ie.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gen_wpa_ie_rsn
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gen_wpa_ie_wpa
</UL>
<BR>[Called By]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie_default
</UL>

<P><STRONG><a name="[723]"></a>wpa_supplicant_parse_ies</STRONG> (Thumb, 236 bytes, Stack size 0 bytes, wpa_ie.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_generic
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_rsn
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
</UL>

<P><STRONG><a name="[6cb]"></a>wpabuf_put</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wpabuf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_zeropad
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_put_data
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_get_vendor_ie_multi
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_get_vendor_ie_multi
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_vendor_ie_concat
</UL>

<P><STRONG><a name="[6ca]"></a>wpabuf_alloc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wpabuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_zalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_zeropad
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_dup
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_resize
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_get_vendor_ie_multi
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_get_vendor_ie_multi
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_alloc_copy
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_vendor_ie_concat
</UL>

<P><STRONG><a name="[751]"></a>wpabuf_resize</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, wpabuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_realloc
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>

<P><STRONG><a name="[753]"></a>wpabuf_dup</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, wpabuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_put_data
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_head
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_alloc
</UL>

<P><STRONG><a name="[5d3]"></a>wpabuf_free</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wpabuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_zeropad
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_get_vendor_ie_multi
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_get_vendor_ie_multi
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_rx_eapol
</UL>

<P><STRONG><a name="[5d4]"></a>wpabuf_alloc_copy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wpabuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_put_data
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_rx_eapol
</UL>

<P><STRONG><a name="[756]"></a>wpabuf_zeropad</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, wpabuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_put_data
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_head
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_put
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_alloc
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_free
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>

<P><STRONG><a name="[5ff]"></a>wpa_supplicant_init_wpa</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wpas_glue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_connect_network
</UL>

<P><STRONG><a name="[71f]"></a>wpa_sm_alloc_eapol</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, wpas_glue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_4_of_4
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_4
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_key_request
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_2
</UL>

<P><STRONG><a name="[726]"></a>wpa_sm_deauthenticate</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wpas_glue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deauthenticate
</UL>
<BR>[Called By]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
</UL>

<P><STRONG><a name="[71d]"></a>wpa_sm_ether_send</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wpas_glue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_send_eapol
</UL>
<BR>[Called By]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
</UL>

<P><STRONG><a name="[72a]"></a>wpa_sm_set_key</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, wpas_glue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_key
</UL>
<BR>[Called By]<UL><LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_ptk
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_gtk
</UL>

<P><STRONG><a name="[73f]"></a>wpa_sm_disassociate</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wpas_glue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
</UL>
<BR>[Called By]<UL><LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_report_ie_mismatch
</UL>

<P><STRONG><a name="[728]"></a>wpa_sm_cancel_auth_timeout</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wpas_glue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_auth_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_key_neg_complete
</UL>

<P><STRONG><a name="[738]"></a>wpa_supplicant_get_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wpas_glue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_notify_disassoc
</UL>

<P><STRONG><a name="[758]"></a>ieee80211_bss_put</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tls_wl_bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_put
</UL>
<BR>[Called By]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_config_auth
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_associated
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_assoc
</UL>

<P><STRONG><a name="[759]"></a>ieee80211_bss_del</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, tls_wl_bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_put
</UL>
<BR>[Called By]<UL><LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_flush_by_age
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_flush
</UL>

<P><STRONG><a name="[636]"></a>ieee80211_bss_flush</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, tls_wl_bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_del
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Called By]<UL><LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_start_scan
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_get_scan_res
</UL>

<P><STRONG><a name="[75b]"></a>ieee80211_bss_flush_by_age</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, tls_wl_bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_del
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_bss_mgmt_task
</UL>

<P><STRONG><a name="[127]"></a>ieee80211_bss_timeout</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tls_wl_bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_bss.o(.text)
</UL>
<P><STRONG><a name="[621]"></a>ieee80211_bss_list_init</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, tls_wl_bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateExt
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
</UL>

<P><STRONG><a name="[75c]"></a>ieee80211_bss_add</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, tls_wl_bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Called By]<UL><LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update
</UL>

<P><STRONG><a name="[75d]"></a>ieee80211_bss_get</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, tls_wl_bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_get
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_associated
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_assoc
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update
</UL>

<P><STRONG><a name="[75e]"></a>ieee80211_bss_info_update</STRONG> (Thumb, 1226 bytes, Stack size 0 bytes, tls_wl_bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_get
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_add
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_ssid
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_put
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_get
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_handle
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_bss_info
</UL>

<P><STRONG><a name="[760]"></a>ieee80211_get_match_bss</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, tls_wl_bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_get
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_config_auth
</UL>

<P><STRONG><a name="[11c]"></a>tls_wl_bss_mgmt_task</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tls_wl_bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_flush_by_age
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_core.o(.text)
</UL>
<P><STRONG><a name="[624]"></a>tls_wl_hw_enable_mac_int</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
</UL>

<P><STRONG><a name="[625]"></a>tls_wl_hw_enable_rx</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
</UL>

<P><STRONG><a name="[5db]"></a>tls_wl_hw_wake_up</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_clk_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_ps
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_start_scan
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_delba
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_addba_resp
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_enable_tx_mgmt_frm
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_req
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_power_save_awake
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
</UL>

<P><STRONG><a name="[62d]"></a>tls_wl_hw_sleep</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_clk_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_ps
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_power_save
</UL>

<P><STRONG><a name="[694]"></a>tls_wl_change_chanel</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_ieee80211_if_data
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hw_config
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_change_chanel
</UL>

<P><STRONG><a name="[61f]"></a>tls_wl_hw_init</STRONG> (Thumb, 318 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_tx_gain
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rc_init
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_bbp_init
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf65_init
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_specialinit_by_hwver
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hw_config
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_wake_up
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
</UL>

<P><STRONG><a name="[7b5]"></a>tls_wl_hw_reset_tsf</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_config_auth
</UL>

<P><STRONG><a name="[627]"></a>tls_wl_hw_config</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Called By]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hw_config
</UL>

<P><STRONG><a name="[629]"></a>tls_wl_hw_bss_info_changed</STRONG> (Thumb, 480 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_set_tx_rate_and_power
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_beacon_get
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_change_notify
</UL>

<P><STRONG><a name="[770]"></a>tls_sec_find_hw_idx</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, tls_wl_hw.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hw_del_multicast_key
</UL>

<P><STRONG><a name="[76b]"></a>hed_sec_set_mac_addr</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_multicast_key
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_ccmp_key
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_wep_key
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_tkip_key
</UL>

<P><STRONG><a name="[76e]"></a>hed_sec_clr_mac_addr</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_del_key
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_del_multicast_key
</UL>

<P><STRONG><a name="[769]"></a>hed_hw_set_multicast_key</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, tls_wl_hw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_mac_addr
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_get_key_table_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hw_set_multicast_key
</UL>

<P><STRONG><a name="[76c]"></a>tls_hw_set_multicast_key</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tls_wl_hw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_multicast_key
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_wif_data
</UL>

<P><STRONG><a name="[76d]"></a>hed_hw_del_multicast_key</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tls_wl_hw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_clr_mac_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hw_del_multicast_key
</UL>

<P><STRONG><a name="[76f]"></a>tls_hw_del_multicast_key</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_hw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_del_multicast_key
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sec_find_hw_idx
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_wif_data
</UL>

<P><STRONG><a name="[656]"></a>tls_wl_hw_set_key</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_ccmp_key
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_wep_key
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_tkip_key
</UL>
<BR>[Called By]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_associated
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_link
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_add
</UL>

<P><STRONG><a name="[777]"></a>tls_wl_hw_del_key</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_clr_mac_addr
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_clr_key_info
</UL>
<BR>[Called By]<UL><LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_key_destroy
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_free
</UL>

<P><STRONG><a name="[67f]"></a>mic_block</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, tls_wl_key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_michael_mic_verify
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx_michael_mic_add
</UL>

<P><STRONG><a name="[77a]"></a>ieee80211_wep_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, tls_wl_key.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>

<P><STRONG><a name="[77b]"></a>ieee80211_key_alloc</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, tls_wl_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_add_key
</UL>

<P><STRONG><a name="[77c]"></a>ieee80211_key_link</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, tls_wl_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_key_destroy
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_key_replace
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_set_key
</UL>
<BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_add_key
</UL>

<P><STRONG><a name="[780]"></a>ieee80211_key_free</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_key_free
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_free
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_del_key
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_add_key
</UL>

<P><STRONG><a name="[64e]"></a>ieee80211_add_key</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, tls_wl_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_free
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_link
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_add_key
</UL>

<P><STRONG><a name="[64c]"></a>ieee80211_del_key</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, tls_wl_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_free
</UL>
<BR>[Called By]<UL><LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_remove_key
</UL>

<P><STRONG><a name="[782]"></a>ieee80211_free_keys</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, tls_wl_key.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_key_free
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>

<P><STRONG><a name="[6ab]"></a>tls_wl_get_mgmt_txbuf</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, tls_wl_mgmt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_delba
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_addba_resp
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_pspoll
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_nullfunc
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_rsp
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_assoc
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_auth
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_req
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_mgmt
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_deauth_disassoc
</UL>

<P><STRONG><a name="[6a0]"></a>ieee80211_send_probe_req</STRONG> (Thumb, 406 bytes, Stack size 0 bytes, tls_wl_mgmt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_set_mac_txbd
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_get_mgmt_txbuf
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_wake_up
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associated
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_send_oneshotdata
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_scan_task
</UL>

<P><STRONG><a name="[786]"></a>ieee80211_send_auth</STRONG> (Thumb, 362 bytes, Stack size 0 bytes, tls_wl_mgmt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_enable_tx_mgmt_frm
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_set_mac_txbd
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_get_mgmt_txbuf
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_authenticate
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_auth
</UL>

<P><STRONG><a name="[788]"></a>ieee80211_bss_get_ie</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, tls_wl_mgmt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_assoc
</UL>

<P><STRONG><a name="[787]"></a>ieee80211_send_assoc</STRONG> (Thumb, 988 bytes, Stack size 0 bytes, tls_wl_mgmt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_get_ie
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_enable_tx_mgmt_frm
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_set_mac_txbd
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_get
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_put
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_get_mgmt_txbuf
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associate
</UL>

<P><STRONG><a name="[789]"></a>ieee80211_send_probe_rsp</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, tls_wl_mgmt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_enable_tx_mgmt_frm
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_set_mac_txbd
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_get_mgmt_txbuf
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>

<P><STRONG><a name="[63a]"></a>ieee80211_send_deauth_disassoc</STRONG> (Thumb, 254 bytes, Stack size 0 bytes, tls_wl_mgmt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_enable_tx_mgmt_frm
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_set_mac_txbd
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_get_mgmt_txbuf
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_disassoc
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_ssid
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_disassoc
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_deauth
</UL>

<P><STRONG><a name="[78a]"></a>ieee80211_send_nullfunc</STRONG> (Thumb, 246 bytes, Stack size 0 bytes, tls_wl_mgmt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_enable_tx_mgmt_frm
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_set_mac_txbd
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_get_mgmt_txbuf
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_beacon
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associated
</UL>

<P><STRONG><a name="[78b]"></a>ieee80211_send_pspoll</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, tls_wl_mgmt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_enable_tx_mgmt_frm
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_set_mac_txbd
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_get_mgmt_txbuf
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_beacon
</UL>

<P><STRONG><a name="[653]"></a>ieee80211_send_mgmt</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, tls_wl_mgmt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_enable_tx_mgmt_frm
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_set_mac_txbd
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_get_mgmt_txbuf
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hdrlen
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_send_mlme
</UL>

<P><STRONG><a name="[65b]"></a>ieee80211_set_disassoc</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_send_apinfo
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_flush
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_deauth_disassoc
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_reset_erp_info
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_change_notify
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hw_config
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_deauth
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_queued_mgmt
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associated
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_req_auth
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_disconnect
</UL>

<P><STRONG><a name="[790]"></a>ieee80211_ht_cap_ie_to_sta_ht_cap</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
</UL>

<P><STRONG><a name="[797]"></a>ieee80211_sta_rx_notify</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
</UL>
<BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle
</UL>

<P><STRONG><a name="[79d]"></a>disable_rd</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_free
</UL>

<P><STRONG><a name="[79e]"></a>ieee80211_send_delba</STRONG> (Thumb, 262 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_set_tx_rate_and_power
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_get_mgmt_txbuf
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_wake_up
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_stop_tx_ba_cb
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_stop_rx_ba_session
</UL>

<P><STRONG><a name="[7a0]"></a>__ieee80211_stop_rx_ba_session</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_delba
</UL>
<BR>[Called By]<UL><LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_process_delba
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_tear_down_BA_sessions
</UL>

<P><STRONG><a name="[7a1]"></a>ieee80211_stop_tx_ba_cb</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_delba
</UL>
<BR>[Called By]<UL><LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;___ieee80211_stop_tx_ba_session
</UL>

<P><STRONG><a name="[7a2]"></a>___ieee80211_stop_tx_ba_session</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_stop_tx_ba_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_process_delba
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_stop_tx_ba_session
</UL>

<P><STRONG><a name="[7a3]"></a>__ieee80211_stop_tx_ba_session</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;___ieee80211_stop_tx_ba_session
</UL>
<BR>[Called By]<UL><LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_tear_down_BA_sessions
</UL>

<P><STRONG><a name="[7a4]"></a>ieee80211_sta_tear_down_BA_sessions</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_stop_tx_ba_session
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_stop_rx_ba_session
</UL>
<BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_free
</UL>

<P><STRONG><a name="[7a5]"></a>ieee80211_enable_ht</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hw_config
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_channel_to_frequency
</UL>
<BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
</UL>

<P><STRONG><a name="[7a7]"></a>ieee80211_process_addba_request</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_addba_resp
</UL>
<BR>[Called By]<UL><LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_action
</UL>

<P><STRONG><a name="[7a8]"></a>ieee80211_process_delba</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;___ieee80211_stop_tx_ba_session
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_stop_rx_ba_session
</UL>
<BR>[Called By]<UL><LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_action
</UL>

<P><STRONG><a name="[7a9]"></a>ieee80211_process_chanswitch</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_channel
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_channel_to_frequency
</UL>
<BR>[Called By]<UL><LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_action
</UL>

<P><STRONG><a name="[7b1]"></a>ieee80211_sta_rx_mgmt</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Called By]<UL><LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_handle
</UL>

<P><STRONG><a name="[647]"></a>ieee80211_sta_req_auth</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bit
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_disassoc
</UL>
<BR>[Called By]<UL><LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_ssid
</UL>

<P><STRONG><a name="[7b3]"></a>ieee80211_sta_commit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_set_ssid
</UL>

<P><STRONG><a name="[646]"></a>ieee80211_sta_set_ssid</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_commit
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_config_auth
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_ssid
</UL>

<P><STRONG><a name="[7b4]"></a>ieee80211_sta_config_auth</STRONG> (Thumb, 280 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bit
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_reset_tsf
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_match_bss
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_put
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_set_ssid
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_freq
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_request_scan
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_scan_req
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_mlme_task
</UL>

<P><STRONG><a name="[129]"></a>ieee80211_sta_timer</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_bit
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_mlme.o(.text)
</UL>
<P><STRONG><a name="[61e]"></a>tls_wl_mlme_init</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
</UL>

<P><STRONG><a name="[119]"></a>tls_wl_mlme_task</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_config_auth
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_authenticate
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_and_clear_bit
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_queued_mgmt
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associate
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associated
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_core.o(.text)
</UL>
<P><STRONG><a name="[62f]"></a>tls_wl_mlme_cleanup</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_cleanup
</UL>

<P><STRONG><a name="[65e]"></a>tls_wl_delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tls_wl_phy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_write
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_read
</UL>

<P><STRONG><a name="[762]"></a>tls_wl_bbp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tls_wl_phy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_init
</UL>

<P><STRONG><a name="[7be]"></a>rate_supported</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tls_wl_rc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rate_control_send_low
</UL>

<P><STRONG><a name="[766]"></a>hw_set_tx_rate_and_power</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, tls_wl_rc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_delba
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_addba_resp
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_set_mac_txbd
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_bss_info_changed
</UL>

<P><STRONG><a name="[61c]"></a>rc_get_rate_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tls_wl_rc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_max_rate
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_rate_mode
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init_ifdata
</UL>

<P><STRONG><a name="[657]"></a>ieee80211_rate_control_init</STRONG> (Thumb, 264 bytes, Stack size 0 bytes, tls_wl_rc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_init
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_add
</UL>

<P><STRONG><a name="[7bd]"></a>rate_control_send_low</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, tls_wl_rc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rate_supported
</UL>
<BR>[Called By]<UL><LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_set_rate
</UL>

<P><STRONG><a name="[67b]"></a>ieee80211_set_rate</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, tls_wl_rc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_set_rate
</UL>
<BR>[Called By]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx_rate_ctrl
</UL>

<P><STRONG><a name="[763]"></a>tls_wl_rc_init</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, tls_wl_rc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_init
</UL>

<P><STRONG><a name="[623]"></a>tls_wl_rx_init</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
</UL>

<P><STRONG><a name="[7b0]"></a>tls_wl_free_rxbuf</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
</UL>
<BR>[Called By]<UL><LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_defragment
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_reassemble_find
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_queued_mgmt
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
</UL>

<P><STRONG><a name="[7c3]"></a>ieee80211_rx_defragment</STRONG> (Thumb, 250 bytes, Stack size 0 bytes, tls_wl_rx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_reassemble_find
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_free_rxbuf
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hdrlen
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>

<P><STRONG><a name="[7cf]"></a>ieee80211_deliver_frame</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_bssid
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_xmit
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_h_amsdu
</UL>

<P><STRONG><a name="[11a]"></a>tls_wl_rx_task</STRONG> (Thumb, 678 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_mgmt_filter
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_is_pspoll
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_is_data
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_is_mgmt
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_has_a4
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atomic_sub_return
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_check_frame
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_handle
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prepare_for_handlers
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_free_rxbuf
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_core.o(.text)
</UL>
<P><STRONG><a name="[643]"></a>alloc_scan_req</STRONG> (Thumb, 318 bytes, Stack size 0 bytes, tls_wl_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_frequency_to_channel
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_config_auth
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_scan
</UL>

<P><STRONG><a name="[7dc]"></a>ieee80211_start_scan</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, tls_wl_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_flush
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_wake_up
</UL>
<BR>[Called By]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_request_scan
</UL>

<P><STRONG><a name="[7dd]"></a>ieee80211_scan_completed</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, tls_wl_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hw_config
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_scan_task
</UL>

<P><STRONG><a name="[644]"></a>ieee80211_request_scan</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, tls_wl_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_start_scan
</UL>
<BR>[Called By]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_config_auth
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_scan
</UL>

<P><STRONG><a name="[118]"></a>tls_wl_scan_task</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, tls_wl_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_scan_completed
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_req
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hw_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_core.o(.text)
</UL>
<P><STRONG><a name="[610]"></a>sta_info_get</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, tls_wl_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_get
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_deliver_frame
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_handle
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_action
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_probe_resp
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_queued_mgmt
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associated
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_associated
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_disassoc
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_get_inact_sec
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_remove
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_add_key
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_remove_key
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_sta_flags
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[611]"></a>sta_info_put</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tls_wl_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_put
</UL>
<BR>[Called By]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_deliver_frame
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_handle
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_action
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_probe_resp
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_queued_mgmt
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associated
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_associated
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_disassoc
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_get_inact_sec
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_remove
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_add
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_add_key
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_remove_key
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_sta_flags
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[655]"></a>sta_info_add_apsta</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, tls_wl_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_hash_add
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_get
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_add
</UL>

<P><STRONG><a name="[7e1]"></a>sta_info_add</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, tls_wl_sta_info.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_hash_add
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_get
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>

<P><STRONG><a name="[659]"></a>sta_info_free</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, tls_wl_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_hash_del
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_tear_down_BA_sessions
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_rd
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_free
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_del_key
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kref_put
</UL>
<BR>[Called By]<UL><LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_expire
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_flush
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_remove
</UL>

<P><STRONG><a name="[638]"></a>sta_info_flush</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, tls_wl_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_free
</UL>
<BR>[Called By]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_disassoc
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_flush
</UL>

<P><STRONG><a name="[7e3]"></a>ieee80211_sta_expire</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, tls_wl_sta_info.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_free
</UL>

<P><STRONG><a name="[620]"></a>sta_info_init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, tls_wl_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
</UL>

<P><STRONG><a name="[735]"></a>aes_unwrap</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, aes_unwrap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesInitKey
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesDecryptBlock
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_wpa
</UL>

<P><STRONG><a name="[7e6]"></a>mlme_deletekeys_request</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ap_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_remove_ptk
</UL>
<BR>[Called By]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_reassociate_indication
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_disassociate_indication
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_deauthenticate_indication
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_authenticate_indication
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_associate_indication
</UL>

<P><STRONG><a name="[6ee]"></a>mlme_authenticate_indication</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ap_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_deletekeys_request
</UL>
<BR>[Called By]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_auth
</UL>

<P><STRONG><a name="[6fe]"></a>mlme_deauthenticate_indication</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ap_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_deletekeys_request
</UL>
<BR>[Called By]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_free_stas
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_handle_timer
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_disconnect
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_mgmt
</UL>

<P><STRONG><a name="[703]"></a>mlme_associate_indication</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ap_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_deletekeys_request
</UL>
<BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc_cb
</UL>

<P><STRONG><a name="[702]"></a>mlme_reassociate_indication</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ap_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_deletekeys_request
</UL>
<BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc_cb
</UL>

<P><STRONG><a name="[700]"></a>mlme_disassociate_indication</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ap_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_deletekeys_request
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_handle_timer
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_disassoc_cb_timeout
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_mgmt
</UL>

<P><STRONG><a name="[716]"></a>mlme_michaelmicfailure_indication</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ap_mlme.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;michael_mic_failure
</UL>

<P><STRONG><a name="[6f7]"></a>hostapd_eid_wmm</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, beacon.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_assoc_resp
</UL>

<P><STRONG><a name="[6f2]"></a>hostapd_eid_wmm_valid</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, beacon.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_assoc_ies
</UL>

<P><STRONG><a name="[6fd]"></a>handle_probe_req</STRONG> (Thumb, 368 bytes, Stack size 0 bytes, beacon.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_ds_params
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_wpa
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_parse_elems
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_wmm
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_send_mlme
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_print_ssid
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_own_capab_info
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_ext_supp_rates
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_supp_rates
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_mgmt
</UL>

<P><STRONG><a name="[6fb]"></a>ieee802_11_set_beacon</STRONG> (Thumb, 596 bytes, Stack size 0 bytes, beacon.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_ap
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_ds_params
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_wpa
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_erp_info
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_wmm
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_own_capab_info
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_ext_supp_rates
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_supp_rates
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_bss
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_free_sta
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc
</UL>

<P><STRONG><a name="[7ed]"></a>wpa_ssid_txt</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>

<P><STRONG><a name="[7ee]"></a>hex2byte</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2num
</UL>
<BR>[Called By]<UL><LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr2bin
</UL>

<P><STRONG><a name="[7f0]"></a>hexstr2bin</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2byte
</UL>

<P><STRONG><a name="[720]"></a>inc_byte_array</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc_byte_array
</UL>
<BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc_byte_array
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_key_request
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__wpa_send_eapol
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_AUTHENTICATION2_Enter
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gtk_update
</UL>

<P><STRONG><a name="[7f1]"></a>wpa_get_ntp_timestamp</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_32
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_init_gmk_and_counter
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gtk_update
</UL>

<P><STRONG><a name="[7f3]"></a>hostapd_setup_wpa_psk</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, hostapd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1
</UL>
<BR>[Called By]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_bss
</UL>

<P><STRONG><a name="[7f4]"></a>hostapd_config_free</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hostapd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_interface_free
</UL>

<P><STRONG><a name="[6b9]"></a>hostapd_interface_free</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, hostapd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_config_free
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_clean_ps_multicast
</UL>
<BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ap_deinit
</UL>

<P><STRONG><a name="[7f6]"></a>hostapd_rate_found</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, hostapd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_prepare_rates
</UL>

<P><STRONG><a name="[7f5]"></a>hostapd_prepare_rates</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, hostapd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_rate_found
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_interface
</UL>

<P><STRONG><a name="[6be]"></a>hostapd_setup_interface</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, hostapd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_set_tx_queue_params
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_set_rts
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_set_freq
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_set_frag
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_prepare_rates
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_bss
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_bssid
</UL>
<BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_create_ap
</UL>

<P><STRONG><a name="[6b8]"></a>hostapd_interface_deinit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hostapd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_deinit_wpa
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_flush_old_stations
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_free_stas
</UL>
<BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ap_deinit
</UL>

<P><STRONG><a name="[6ea]"></a>hostapd_new_assoc_sta</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, hostapd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sta_associated
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sm_event
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_deauth
</UL>
<BR>[Called By]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_notif_assoc
</UL>

<P><STRONG><a name="[6e3]"></a>hostapd_parse_elems</STRONG> (Thumb, 280 bytes, Stack size 0 bytes, ieee802_11_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_parse_vendor_specific
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_notif_assoc
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_assoc_ies
</UL>

<P><STRONG><a name="[807]"></a>ieee802_11_vendor_ie_concat</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, ieee802_11_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_put
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_alloc
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>

<P><STRONG><a name="[6bf]"></a>get_hdr_bssid</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, ieee802_11_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_mgmt_rx
</UL>

<P><STRONG><a name="[750]"></a>os_zalloc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, os_internal.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_alloc
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_wpa
</UL>

<P><STRONG><a name="[752]"></a>os_realloc</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, os_internal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_resize
</UL>

<P><STRONG><a name="[808]"></a>os_strdup</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, os_internal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[724]"></a>random_get_bytes</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, random.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_extract
</UL>
<BR>[Called By]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_init_gmk_and_counter
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gtk_update
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_rekey_gmk
</UL>

<P><STRONG><a name="[6c1]"></a>random_add_randomness</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, random.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_mix_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_notif_assoc
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_mgmt_rx
</UL>

<P><STRONG><a name="[80b]"></a>Arc4Init</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rc4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc4_skip
</UL>

<P><STRONG><a name="[80c]"></a>Arc4_skip</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, rc4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc4_skip
</UL>

<P><STRONG><a name="[734]"></a>rc4_skip</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, rc4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc4_skip
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arc4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_wpa
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__wpa_send_eapol
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc4
</UL>

<P><STRONG><a name="[80d]"></a>rc4</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rc4.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc4_skip
</UL>

<P><STRONG><a name="[70c]"></a>hmac_sha1_vector</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, sha1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha1_vector
</UL>
<BR>[Called By]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha1
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1_f
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsn_pmkid
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha1_prf
</UL>

<P><STRONG><a name="[70d]"></a>hmac_sha1</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sha1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha1_vector
</UL>
<BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_mic
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1_f
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_extract
</UL>

<P><STRONG><a name="[80f]"></a>sha1_prf</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, sha1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha1_vector
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_pmk_to_ptk
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_init_gmk_and_counter
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gtk_update
</UL>

<P><STRONG><a name="[831]"></a>wpa_auth_for_each_sta</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_setkeys
</UL>

<P><STRONG><a name="[814]"></a>__wpa_send_eapol</STRONG> (Thumb, 730 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_mic
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc4_skip
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc_byte_array
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_sta_flags_to_drv
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_hapd_send_eapol
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_wrap
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_set_eapol
</UL>
<BR>[Called By]<UL><LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_send_eapol
</UL>

<P><STRONG><a name="[7e7]"></a>wpa_remove_ptk</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_set_key
</UL>
<BR>[Called By]<UL><LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_deletekeys_request
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sm_event
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_INITIALIZE_Enter
</UL>

<P><STRONG><a name="[833]"></a>wpa_init</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_gen_wpa_ie
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_set_key_len
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_init_gmk_and_counter
</UL>
<BR>[Called By]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_wpa
</UL>

<P><STRONG><a name="[802]"></a>wpa_init_keys</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_sm_step
</UL>
<BR>[Called By]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_bss
</UL>

<P><STRONG><a name="[836]"></a>wpa_deinit</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_deinit_wpa
</UL>

<P><STRONG><a name="[837]"></a>wpa_reconfig</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, wpa_auth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_gen_wpa_ie
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_set_key_len
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_sm_step
</UL>

<P><STRONG><a name="[6e5]"></a>wpa_auth_sta_init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_notif_assoc
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_assoc_ies
</UL>

<P><STRONG><a name="[7fe]"></a>wpa_auth_sta_associated</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_step
</UL>
<BR>[Called By]<UL><LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_new_assoc_sta
</UL>

<P><STRONG><a name="[6f4]"></a>wpa_auth_sta_no_wpa</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_assoc_ies
</UL>

<P><STRONG><a name="[710]"></a>wpa_auth_sta_deinit</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_free_sta_sm
</UL>
<BR>[Called By]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_free_sta
</UL>

<P><STRONG><a name="[6e1]"></a>wpa_receive</STRONG> (Thumb, 722 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_compare_rsn_ie
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_add_randomness
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_kde_ies
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive_error_report
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_request_new_ptk
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sta_disconnect
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_rekey_gtk
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_step
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_verify_key_mic
</UL>
<BR>[Called By]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_1x_receive
</UL>

<P><STRONG><a name="[6e9]"></a>wpa_auth_sm_event</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_remove_ptk
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_step
</UL>
<BR>[Called By]<UL><LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_new_assoc_sta
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_disconnect
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_notif_assoc
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_auth
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_mgmt
</UL>

<P><STRONG><a name="[719]"></a>wpa_gtk_rekey</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gtk_update
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_config_group_keys
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tkip_countermeasures_start
</UL>

<P><STRONG><a name="[718]"></a>wpa_auth_countermeasures_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tkip_countermeasures_start
</UL>

<P><STRONG><a name="[715]"></a>wpa_auth_sta_local_mic_failure_report</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;michael_mic_failure
</UL>

<P><STRONG><a name="[7e9]"></a>wpa_auth_get_wpa_ie</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_wpa
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_wpa
</UL>

<P><STRONG><a name="[83b]"></a>wpa_write_rsn_ie</STRONG> (Thumb, 334 bytes, Stack size 0 bytes, wpa_auth_ie.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_gen_wpa_ie
</UL>

<P><STRONG><a name="[834]"></a>wpa_auth_gen_wpa_ie</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, wpa_auth_ie.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_write_rsn_ie
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_write_wpa_ie
</UL>
<BR>[Called By]<UL><LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_reconfig
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_init
</UL>

<P><STRONG><a name="[81b]"></a>wpa_add_kde</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, wpa_auth_ie.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKINITNEGOTIATING_Enter
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_GROUP_REKEYNEGOTIATING_Enter
</UL>

<P><STRONG><a name="[6e6]"></a>wpa_validate_wpa_ie</STRONG> (Thumb, 496 bytes, Stack size 0 bytes, wpa_auth_ie.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_wpa
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_rsn
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_notif_assoc
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_assoc_ies
</UL>

<P><STRONG><a name="[838]"></a>wpa_parse_kde_ies</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, wpa_auth_ie.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_generic
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive
</UL>

<P><STRONG><a name="[71c]"></a>wpa_eapol_key_mic</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, wpa_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha1
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_md5
</UL>
<BR>[Called By]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__wpa_send_eapol
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_verify_key_mic
</UL>

<P><STRONG><a name="[825]"></a>rsn_pmkid</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, wpa_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha1_vector
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKSTART_Enter
</UL>

<P><STRONG><a name="[725]"></a>wpa_pmk_to_ptk</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, wpa_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha1_prf
</UL>
<BR>[Called By]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKCALCNEGOTIATING_Enter
</UL>

<P><STRONG><a name="[72c]"></a>wpa_compare_rsn_ie</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, wpa_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_validate_ie
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive
</UL>

<P><STRONG><a name="[74c]"></a>wpa_parse_wpa_ie_rsn</STRONG> (Thumb, 358 bytes, Stack size 0 bytes, wpa_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsn_selector_to_bitfield
</UL>
<BR>[Called By]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_validate_wpa_ie
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie
</UL>

<P><STRONG><a name="[74b]"></a>wpa_parse_wpa_ie_wpa</STRONG> (Thumb, 436 bytes, Stack size 0 bytes, wpa_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_selector_to_bitfield
</UL>
<BR>[Called By]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_validate_wpa_ie
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie
</UL>

<P><STRONG><a name="[6d2]"></a>hex2digit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wpa_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_wpa
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_wep
</UL>

<P><STRONG><a name="[6ff]"></a>hostapd_drv_sta_remove</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tkip_countermeasures_start
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_remove
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_free_sta
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc_cb
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_mgmt
</UL>

<P><STRONG><a name="[706]"></a>hostapd_set_sta_flags</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc_cb
</UL>

<P><STRONG><a name="[816]"></a>hostapd_sta_flags_to_drv</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_add
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_set_authorized
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__wpa_send_eapol
</UL>

<P><STRONG><a name="[704]"></a>hostapd_drv_sta_add</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_add
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_sta_flags_to_drv
</UL>
<BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc_cb
</UL>

<P><STRONG><a name="[6f8]"></a>hostapd_drv_send_mlme</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_send_mlme
</UL>
<BR>[Called By]<UL><LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_auth_reply
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_assoc_resp
</UL>

<P><STRONG><a name="[7ec]"></a>hostapd_drv_set_ap</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_auth_params
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_auth_alg
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_beacon
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_rate_mode
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cipher2drv
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon
</UL>

<P><STRONG><a name="[855]"></a>hostapd_set_generic_elem</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_wpa
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_deinit_wpa
</UL>

<P><STRONG><a name="[803]"></a>hostapd_drv_set_authmode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_encryption
</UL>

<P><STRONG><a name="[804]"></a>hostapd_drv_set_key</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_key
</UL>
<BR>[Called By]<UL><LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_encryption
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_set_key
</UL>

<P><STRONG><a name="[83a]"></a>hostapd_get_seqnum</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_get_seqnum
</UL>

<P><STRONG><a name="[713]"></a>hostapd_drv_set_countermeasures</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tkip_countermeasures_start
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tkip_countermeasures_stop
</UL>

<P><STRONG><a name="[817]"></a>hostapd_drv_hapd_send_eapol</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_send_eapol
</UL>
<BR>[Called By]<UL><LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__wpa_send_eapol
</UL>

<P><STRONG><a name="[7f8]"></a>hostapd_set_rts</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_interface
</UL>

<P><STRONG><a name="[7f9]"></a>hostapd_set_frag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_interface
</UL>

<P><STRONG><a name="[805]"></a>hostapd_set_privacy</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_wpa
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_deinit_wpa
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_encryption
</UL>

<P><STRONG><a name="[7f7]"></a>hostapd_set_freq</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_freq
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_interface
</UL>

<P><STRONG><a name="[70f]"></a>hostapd_drv_get_inact_sec</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_get_inact_sec
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_handle_timer
</UL>

<P><STRONG><a name="[6e0]"></a>hostapd_set_authorized</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_sta_flags_to_drv
</UL>
<BR>[Called By]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_1x_set_sta_authorized
</UL>

<P><STRONG><a name="[7ff]"></a>hostapd_drv_sta_flush</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_flush_old_stations
</UL>

<P><STRONG><a name="[701]"></a>hostapd_drv_sta_deauth</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_deauth
</UL>
<BR>[Called By]<UL><LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_flush_old_stations
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tkip_countermeasures_start
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_handle_timer
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_new_assoc_sta
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_disconnect
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_rx_from_unknown
</UL>

<P><STRONG><a name="[6e7]"></a>hostapd_drv_sta_disassoc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_disassoc
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_handle_timer
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_notif_assoc
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_rx_from_unknown
</UL>

<P><STRONG><a name="[7fb]"></a>hostapd_set_tx_queue_params</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_tx_queue_params
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_interface
</UL>

<P><STRONG><a name="[815]"></a>aes_wrap</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, aes_wrap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesInitKey
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesEncryptBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__wpa_send_eapol
</UL>

<P><STRONG><a name="[7e4]"></a>psAesInitKey</STRONG> (Thumb, 612 bytes, Stack size 0 bytes, aesMatrix.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_mix2
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_unwrap
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesInit
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_wrap
</UL>

<P><STRONG><a name="[846]"></a>psAesInit</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, aesMatrix.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesInitKey
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>

<P><STRONG><a name="[843]"></a>psAesEncryptBlock</STRONG> (Thumb, 700 bytes, Stack size 0 bytes, aesMatrix.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesEncrypt
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_wrap
</UL>

<P><STRONG><a name="[847]"></a>psAesEncrypt</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, aesMatrix.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesEncryptBlock
</UL>

<P><STRONG><a name="[7e5]"></a>psAesDecryptBlock</STRONG> (Thumb, 702 bytes, Stack size 0 bytes, aesMatrix.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_unwrap
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesDecrypt
</UL>

<P><STRONG><a name="[848]"></a>psAesDecrypt</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, aesMatrix.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesDecryptBlock
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>

<P><STRONG><a name="[849]"></a>MD5Final</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, md5.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Transform
</UL>
<BR>[Called By]<UL><LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_vector
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5
</UL>

<P><STRONG><a name="[84b]"></a>MD5Update</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, md5.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Transform
</UL>
<BR>[Called By]<UL><LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_vector
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5
</UL>

<P><STRONG><a name="[84d]"></a>MD5Init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, md5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_vector
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5
</UL>

<P><STRONG><a name="[84c]"></a>md5</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, md5.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Init
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Update
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Final
</UL>

<P><STRONG><a name="[84e]"></a>md5_vector</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, md5.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Init
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Update
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Final
</UL>
<BR>[Called By]<UL><LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_md5_vector
</UL>

<P><STRONG><a name="[84f]"></a>hmac_md5_vector</STRONG> (Thumb, 294 bytes, Stack size 0 bytes, md5.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;md5_vector
</UL>
<BR>[Called By]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_md5
</UL>

<P><STRONG><a name="[83e]"></a>hmac_md5</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, md5.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_md5_vector
</UL>
<BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_mic
</UL>

<P><STRONG><a name="[850]"></a>SHA1Transform</STRONG> (Thumb, 4308 bytes, Stack size 0 bytes, sha1_internal.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA1Update
</UL>

<P><STRONG><a name="[851]"></a>SHA1Update</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, sha1_internal.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA1Transform
</UL>
<BR>[Called By]<UL><LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha1
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA1Final
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha1_vector
</UL>

<P><STRONG><a name="[852]"></a>SHA1Final</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, sha1_internal.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA1Update
</UL>
<BR>[Called By]<UL><LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha1
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha1_vector
</UL>

<P><STRONG><a name="[854]"></a>SHA1Init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, sha1_internal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha1
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha1_vector
</UL>

<P><STRONG><a name="[853]"></a>sha1</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, sha1_internal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA1Init
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA1Final
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA1Update
</UL>

<P><STRONG><a name="[80e]"></a>sha1_vector</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, sha1_internal.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA1Init
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA1Final
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA1Update
</UL>
<BR>[Called By]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha1_vector
</UL>

<P><STRONG><a name="[7fd]"></a>hostapd_deinit_wpa</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wpa_auth_glue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_set_privacy
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tkip_countermeasures_deinit
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_set_generic_elem
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_interface_deinit
</UL>

<P><STRONG><a name="[801]"></a>hostapd_setup_wpa</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, wpa_auth_glue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_set_privacy
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_get_wpa_ie
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_set_generic_elem
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_bss
</UL>

<P><STRONG><a name="[1b3]"></a>__rt_ctype_table</STRONG> (ARM, 20 bytes, Stack size 0 bytes, rt_ctype_table.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_uint (via BLX)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrHToL (via BLX)
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol (via BLX)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toupper (via BLX)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tolower (via BLX)
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb (via BLX)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace (via BLX)
</UL>

<P><STRONG><a name="[856]"></a>_malloc_internal</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, h1_alloc_mt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Heap1_SizeAdjust
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[109]"></a>malloc</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, h1_alloc_mt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor (via BLX)
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[85a]"></a>_free_internal</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, h1_free_mt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[10a]"></a>free</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, h1_free_mt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor (via BLX)
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[4ee]"></a>realloc</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, h1_realloc_mt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Heap1_SizeAdjust
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_realloc_debug
</UL>

<P><STRONG><a name="[66e]"></a>__aeabi_ldivmod</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llsdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LO_Leakage_Deal (via BLX)
</UL>

<P><STRONG><a name="[85c]"></a>_ll_sdiv</STRONG> (ARM, 80 bytes, Stack size 0 bytes, llsdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[1b2]"></a>tolower</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tolower.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrCaseStr
</UL>

<P><STRONG><a name="[1b0]"></a>toupper</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, toupper.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrHToL
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrCaseStr
</UL>

<P><STRONG><a name="[108]"></a>printf</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zc_hf_adpter.o(.text)
</UL>
<P><STRONG><a name="[1c9]"></a>__2printf</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, __2printf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsDmaRequest
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateUserTask
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_dataframe_recv
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_jd_oneshot
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_lsd_oneshot
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_net_send
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_rx
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserUartRxCallback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserWlanStatusChangedEvent
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write_checks
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_recv_cb
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_tim_ie
</UL>

<P><STRONG><a name="[205]"></a>__2sprintf</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, __2sprintf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvListTaskWithinSingleList
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fwup_rsp
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_scan_cmplt
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_rpt
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_http_client_recv_callback
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_http_client_err_callback
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_atcmd_exec
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lprsr_proc
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpchrs_proc
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lppstr_proc
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lprstt_proc
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lptstt_proc
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpchl_proc
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_spif_proc
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rwhwv_proc
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_hwv_proc
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_txg_proc
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_flsr_proc
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rfr_proc
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_regr_proc
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_updd_proc
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ver_proc
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_mac_proc
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_custdata_proc
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_http_client_proc
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_pass_proc
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_set_oneshot_proc
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_cmdm_proc
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_iom_proc
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_webs_proc
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_espt_proc
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_espc_proc
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atpt_proc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_dns_proc
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atlt_proc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_uart_proc
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_portm_proc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atrm_proc
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atm_proc
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_nip_proc
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_warc_proc
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_warm_proc
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wpsm_proc
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_watc_proc
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wbgr_proc
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wreg_proc
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_chll_proc
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_chnl_proc
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_get_connect_param_proc
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_brd_ssid_proc
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_bssid_proc
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_encrypt_proc
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_key_proc
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ssid_proc
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wprt_proc
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skghbn_proc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sktsrceip_proc
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sktrptmode_proc
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skrcv_proc
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_sksnd_proc
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skclose_proc
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skstt_proc
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skct_proc
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_get_sta_info
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_link_status_proc
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wjoin_proc
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_sta_detail
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mactostr
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iptostr
</UL>

<P><STRONG><a name="[861]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, _printf_pad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[862]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _printf_pad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[860]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, _printf_str.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[14b]"></a>_printf_int_dec</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, _printf_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10 (via BLX)
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i (via Veneer)
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u (via Veneer)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d (via Veneer)
</UL>

<P><STRONG><a name="[867]"></a>_printf_longlong_hex</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[151]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x (via Veneer)
</UL>

<P><STRONG><a name="[159]"></a>_printf_ll_hex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx (via Veneer)
</UL>

<P><STRONG><a name="[143]"></a>_printf_hex_ptr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p (via Veneer)
</UL>

<P><STRONG><a name="[868]"></a>__printf</STRONG> (Thumb, 386 bytes, Stack size 0 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent (via BLX)
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[4f4]"></a>__0sscanf</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, __0sscanf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_ipaddr
</UL>

<P><STRONG><a name="[86c]"></a>_scanf_int</STRONG> (Thumb, 330 bytes, Stack size 0 bytes, _scanf_int.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[895]"></a>_scanf_string</STRONG> (Thumb, 228 bytes, Stack size 0 bytes, _scanf_str.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[2d0]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, atoi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_uint
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrinfo
</UL>

<P><STRONG><a name="[19c]"></a>atol</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, atol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetHostByName
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersParse
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSetURL
</UL>

<P><STRONG><a name="[1bf]"></a>srand</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperInitRandomeNumber
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_wep_init
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[165]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[1b1]"></a>strchr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, strchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_atcmd_parse
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrGetToken
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrCaseStr
</UL>

<P><STRONG><a name="[18f]"></a>strstr</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, strstr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrSearch
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersFind
</UL>

<P><STRONG><a name="[1ad]"></a>memcmp</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, memcmp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_to_flash
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnGetRemoteChunkLength
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnGetRemoteHeaders
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg4
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg2
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_AssemblePkt
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_hash_del
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_mgmt_filter
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_handle
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_deauth
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_probe_resp
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_queued_mgmt
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_auth
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_beacon
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_match_bss
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_get
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_pmk_to_ptk
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_compare_rsn_ie
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_validate_ie
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_free_sta
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_assoc_ies
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_auth
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_wpa
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_connect
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_res_match
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_associnfo
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_mgmt
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_mac_comp_empty
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_to_flash
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_ssid
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_set_ssid
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_ClientDelete
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CleanClientHistory
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClientTableLookup
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_verify_key_mic
</UL>

<P><STRONG><a name="[176]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskList
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_customdata
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atrm_proc
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_default_socket_params
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_default_socket_params
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSetVerb
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersSend
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersFind
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_save_user
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_load_factory_default
</UL>

<P><STRONG><a name="[186]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_decode_new_oneshot_data
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_connect_by_bssid
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_connect_by_ssid_bssid
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_connect
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr_to_uinit
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_atcmd_exec
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rwhwv_proc
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_http_client_proc
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_pass_proc
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_dns_proc
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atrm_proc
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_key_proc
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ssid_proc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_init_socket_cfg
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_post
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stricmp
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetHostByName
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrInsensitiveCompare
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrCaseStr
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientFindFirstHeader
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientWriteData
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSendRequest
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientAddRequestHeaders
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSetURL
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersSend
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersFind
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strdup
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_Start
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_strstr
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_enqueue
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrinfo
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_gethostbyname_r
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_gethostbyname
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1_f
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_Config
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_RecvCb
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSNameErrGenAndSend
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSAnswerGenAndSend
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha1_prf
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_strdup
</UL>

<P><STRONG><a name="[2c9]"></a>memchr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, memchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_atcmd_eol
</UL>

<P><STRONG><a name="[18d]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvListTaskWithinSingleList
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_flsr_proc
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_rfr_proc
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_regr_proc
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientWriteData
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersSend
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersFind
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshotinfo_resolve_probereq
</UL>

<P><STRONG><a name="[184]"></a>__aeabi_memcpy</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_copy_rxbuf (via BLX)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write32_then_writen (via BLX)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write (via BLX)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_read (via BLX)
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write_then_read (via BLX)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue (via BLX)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue (via BLX)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init (via BLX)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_decode_new_oneshot_data (via BLX)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_ssid_bssid (via BLX)
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_decrypt_data (via BLX)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_jd_oneshot (via BLX)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_lsd_oneshot (via BLX)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_compare_mac_addr (via BLX)
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_write (via BLX)
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial (via BLX)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_net_send (via BLX)
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_atcmd_line (via BLX)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_udp_sendto (via BLX)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_get_status (via BLX)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_scan_cmplt (via BLX)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_wjoin_success (via BLX)
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler (via BLX)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_recv (via BLX)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_mac (via BLX)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_current_bss (via BLX)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint (via BLX)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_socket_state (via BLX)
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_socket (via BLX)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_atcmd_parse (via BLX)
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_pass_proc (via BLX)
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_dname_proc (via BLX)
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_upnp_proc (via BLX)
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ddns_proc (via BLX)
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_dns_proc (via BLX)
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_aolm_proc (via BLX)
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_get_connect_param_proc (via BLX)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_key_proc (via BLX)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ssid_proc (via BLX)
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skct_proc (via BLX)
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wjoin_proc (via BLX)
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_gpio_proc (via BLX)
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create (via BLX)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set (via BLX)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get (via BLX)
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write (via BLX)
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_ip_info (via BLX)
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_bssid (via BLX)
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_key (via BLX)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_ssid (via BLX)
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_link_status (via BLX)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_net (via BLX)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_ip_info (via BLX)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_bssid (via BLX)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_ssid (via BLX)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_key (via BLX)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_ver (via BLX)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_post (via BLX)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req (via BLX)
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSetURL (via BLX)
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersRemove (via BLX)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersAdd (via BLX)
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_pkcs1_encrypt (via BLX)
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_pkcs1_decrypt (via BLX)
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_Encrypt (via BLX)
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_RecvAccessMsg2 (via BLX)
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendCloudAccessMsg3 (via BLX)
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendCloudAccessMsg1 (via BLX)
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_AssemblePkt (via BLX)
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_DealSessionOpt (via BLX)
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEC_Decrypt (via BLX)
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_StoreAccessInfo (via BLX)
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_StoreConnectionInfo (via BLX)
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_StoreTokenKey (via BLX)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_StoreRegisterInfo (via BLX)
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ConfigInitPara (via BLX)
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildOption (via BLX)
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_RecvData (via BLX)
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildMsg (via BLX)
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildBcMsg (via BLX)
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_SendClientQueryReq (via BLX)
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_RecvDataFromClient (via BLX)
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSG_RecvDataFromCloud (via BLX)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserUartRxCallback (via BLX)
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_proc_data (via BLX)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler (via BLX)
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strndup (via BLX)
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strdup (via BLX)
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_auto_reconnect (via BLX)
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_Start (via BLX)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init (via BLX)
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input (via BLX)
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_output (via BLX)
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry (via BLX)
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw (via BLX)
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input (via BLX)
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip (via BLX)
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram (via BLX)
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram (via BLX)
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass (via BLX)
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag (via BLX)
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response (via BLX)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_take (via BLX)
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_enqueue (via BLX)
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send (via BLX)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_recv (via BLX)
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname (via BLX)
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrinfo (via BLX)
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_gethostbyname_r (via BLX)
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy (via BLX)
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write (via BLX)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom (via BLX)
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept (via BLX)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_fast_write (via BLX)
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_get_ntp_timestamp (via BLX)
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_ssid_txt (via BLX)
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_wpa (via BLX)
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add (via BLX)
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_defragment (via BLX)
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_check_frame (via BLX)
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle (via BLX)
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_h_amsdu (via BLX)
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_michael_mic_verify (via BLX)
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_data_to_8023 (via BLX)
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_delba (via BLX)
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp (via BLX)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_addba_resp (via BLX)
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_associated (via BLX)
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_pspoll (via BLX)
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_nullfunc (via BLX)
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_rsp (via BLX)
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_assoc (via BLX)
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_auth (via BLX)
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update (via BLX)
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_realloc (via BLX)
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_put_data (via BLX)
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_send_eapol (via BLX)
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_ssid (via BLX)
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_bssid (via BLX)
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_alloc_eapol (via BLX)
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_pmk_to_ptk (via BLX)
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_mic (via BLX)
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_get_bytes (via BLX)
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_unwrap (via BLX)
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_4_of_4 (via BLX)
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_4 (via BLX)
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_key_request (via BLX)
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_decrypt_key_data (via BLX)
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_2 (via BLX)
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_rsn (via BLX)
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk (via BLX)
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic (via BLX)
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_wpa (via BLX)
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4 (via BLX)
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha1_vector (via BLX)
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1_f (via BLX)
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_scan (via BLX)
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_get_vendor_ie_multi (via BLX)
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_validate_wpa_ie (via BLX)
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sta_init (via BLX)
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon (via BLX)
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req (via BLX)
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_add (via BLX)
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_supp_rates (via BLX)
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_auth_reply (via BLX)
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc (via BLX)
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_assoc_resp (via BLX)
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive (via BLX)
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_notify_assoc (via BLX)
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_wpa (via BLX)
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_get_res (via BLX)
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg (via BLX)
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_config_validate_network_test (via BLX)
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_get_vendor_ie_multi (via BLX)
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_add (via BLX)
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_conf_ap (via BLX)
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_alloc_ps_pkt (via BLX)
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_save_user (via BLX)
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_load_factory_default (via BLX)
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_to_flash (via BLX)
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt (via BLX)
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_pbreq_encry_data (via BLX)
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_resolve_info (via BLX)
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshotinfo_resolve_probereq (via BLX)
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_data (via BLX)
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_req (via BLX)
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_authed_sta (via BLX)
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_ip_info (via BLX)
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key_4_ap (via BLX)
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key (via BLX)
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_bssid (via BLX)
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_ssid (via BLX)
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_beacon_get (via BLX)
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_ssid_txt (via BLX)
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx (via BLX)
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_tx (via BLX)
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add_apsta (via BLX)
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_set_ssid (via BLX)
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_mgmt (via BLX)
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_deauth_disassoc (via BLX)
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_scan_req (via BLX)
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_ssid (via BLX)
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_scan (via BLX)
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_beacon (via BLX)
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_bssid (via BLX)
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_get_scan_res (via BLX)
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_bss_info_changed (via BLX)
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key_cfg (via BLX)
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_disassoc (via BLX)
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc (via BLX)
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_pmk (via BLX)
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_own_addr (via BLX)
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_config (via BLX)
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie_default (via BLX)
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie (via BLX)
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie (via BLX)
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie (via BLX)
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol (via BLX)
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_key (via BLX)
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1 (via BLX)
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_default_configs (via BLX)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_from_unknown (via BLX)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_mgmt (via BLX)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_eapol (via BLX)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_assoc (via BLX)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_mic_err (via BLX)
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configs (via BLX)
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate (via BLX)
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_rx_eapol (via BLX)
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_create_softap (via BLX)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_ps (via BLX)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_pspoll (via BLX)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_sta_active (via BLX)
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_Config (via BLX)
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_RecvCb (via BLX)
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSNameErrGenAndSend (via BLX)
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DNSAnswerGenAndSend (via BLX)
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPNakGenAndSend (via BLX)
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ParseDhcpOptions (via BLX)
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPOfferGenAndSend (via BLX)
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPAckGenAndSend (via BLX)
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClientTableLookup (via BLX)
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_DealEvent (via BLX)
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendDeviceRegsiterWithMac (via BLX)
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildEasyMessage (via BLX)
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildMessage (via BLX)
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_BuildOption (via BLX)
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_core (via BLX)
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA1Update (via BLX)
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA1Transform (via BLX)
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_md5_vector (via BLX)
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Update (via BLX)
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Final (via BLX)
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_write_rsn_ie (via BLX)
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_gen_wpa_ie (via BLX)
<LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_add_kde (via BLX)
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsn_pmkid (via BLX)
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_wrap (via BLX)
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_init (via BLX)
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__wpa_send_eapol (via BLX)
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_Step (via BLX)
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_AUTHENTICATION2_Enter (via BLX)
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gtk_update (via BLX)
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKCALCNEGOTIATING_Enter (via BLX)
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_verify_key_mic (via BLX)
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKINITNEGOTIATING_Enter (via BLX)
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha1_prf (via BLX)
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_extract (via BLX)
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_strdup (via BLX)
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_vendor_ie_concat (via BLX)
</UL>

<P><STRONG><a name="[870]"></a>__rt_memcpy</STRONG> (ARM, 212 bytes, Stack size 0 bytes, rt_memcpy.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[541]"></a>__aeabi_memmove</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memmove.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_DealSessionOpt (via BLX)
</UL>

<P><STRONG><a name="[871]"></a>__rt_memmove</STRONG> (ARM, 212 bytes, Stack size 0 bytes, rt_memmove.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[1cb]"></a>__aeabi_memcpy4</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_restore_param_from_backup (via BLX)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_init (via BLX)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_init_socket_cfg (via BLX)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_post (via BLX)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_rx (via BLX)
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_montmul (via BLX)
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendCloudAccessMsg3 (via BLX)
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendCloudAccessMsg1 (via BLX)
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ConfigPara (via BLX)
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_ConfigInitPara (via BLX)
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EVENT_BuildBcMsg (via BLX)
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_prepare_rates (via BLX)
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_alloc (via BLX)
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update (via BLX)
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic (via BLX)
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1_f (via BLX)
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc (via BLX)
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_wpa (via BLX)
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_wep (via BLX)
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_open (via BLX)
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_add (via BLX)
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_config_defaults (via BLX)
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_to_flash (via BLX)
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan (via BLX)
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_create_ap (via BLX)
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_default_configs (via BLX)
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configs (via BLX)
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle (via BLX)
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_create_softap (via BLX)
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_ConfigWifi (via BLX)
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod (via BLX)
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_swap (via BLX)
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_copy (via BLX)
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc (via BLX)
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_reconfig (via BLX)
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_init (via BLX)
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_init_gmk_and_counter (via BLX)
</UL>

<P><STRONG><a name="[2ee]"></a>__aeabi_memset</STRONG> (ARM, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_restore_param_from_backup (via BLX)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_clear_oneshot_data (via BLX)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint (via BLX)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate (via BLX)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_StoreRegisterInfo (via BLX)
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_flush_old_stations (via BLX)
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon (via BLX)
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_load_factory_default (via BLX)
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt (via BLX)
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_req (via BLX)
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_key (via BLX)
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_wrap (via BLX)
</UL>

<P><STRONG><a name="[17a]"></a>__aeabi_memclr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_cfg_user_mode (via BLX)
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_isr (via BLX)
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_disable_user_mode (via BLX)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_decode_new_oneshot_data (via BLX)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect_by_ssid_bssid (via BLX)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_start_oneshot (via BLX)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_switch_channel_tim (via BLX)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_dataframe_recv (via BLX)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_lsd_oneshot (via BLX)
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_stop_oneshot (via BLX)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_clear_oneshot_data (via BLX)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_port_init (via BLX)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_open (via BLX)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_get_status (via BLX)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint (via BLX)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_custdata_proc (via BLX)
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_get_sta_info (via BLX)
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wjoin_proc (via BLX)
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_softap_create (via BLX)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_connect (via BLX)
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_key (via BLX)
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_sta_detail (via BLX)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_join_net (via BLX)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_key (via BLX)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_post (via BLX)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req (via BLX)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientOpenRequest (via BLX)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersParse (via BLX)
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersRemove (via BLX)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersFind (via BLX)
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersAdd (via BLX)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSessionReset (via BLX)
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strndup (via BLX)
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strdup (via BLX)
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send (via BLX)
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sta_associated (via BLX)
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_remove_ptk (via BLX)
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_ht_cap_ie_to_sta_ht_cap (via BLX)
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_assoc (via BLX)
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_zalloc (via BLX)
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_zeropad (via BLX)
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_resize (via BLX)
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_alloc_eapol (via BLX)
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic (via BLX)
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sm_event (via BLX)
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon (via BLX)
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req (via BLX)
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_auth_reply (via BLX)
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_assoc_resp (via BLX)
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_auth (via BLX)
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_alloc_ps_pkt (via BLX)
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_load_factory_default (via BLX)
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt (via BLX)
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshot_resolve_info (via BLX)
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_clear_1shot_info (via BLX)
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_key_4_ap (via BLX)
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_mark_disassoc (via BLX)
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc (via BLX)
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate (via BLX)
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_write_binary (via BLX)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Final (via BLX)
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__wpa_send_eapol (via BLX)
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_sm_step (via BLX)
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_Step (via BLX)
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_verify_key_mic (via BLX)
</UL>

<P><STRONG><a name="[874]"></a>__rt_memclr</STRONG> (ARM, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[873]"></a>_memset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[179]"></a>__aeabi_memclr4</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write32_then_writen (via BLX)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write (via BLX)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_read (via BLX)
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write_then_read (via BLX)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_message_init (via BLX)
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init (via BLX)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init (via BLX)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_init (via BLX)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_init (via BLX)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_ethernet_init (via BLX)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDeviceInit (via BLX)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_parse_elems (via BLX)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_start_oneshot (via BLX)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_dataframe_recv (via BLX)
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_send_mac (via BLX)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_port_init (via BLX)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init (via BLX)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_open (via BLX)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_send (via BLX)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_create (via BLX)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_close (via BLX)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_create_default_socket (via BLX)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_init (via BLX)
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler (via BLX)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint (via BLX)
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_load_user (via BLX)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_socket_state (via BLX)
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_socket (via BLX)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lprstr_proc (via BLX)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lptstr_proc (via BLX)
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_spif_proc (via BLX)
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_flsw_proc (via BLX)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_flsr_proc (via BLX)
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_http_client_proc (via BLX)
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_atrm_proc (via BLX)
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_get_connect_param_proc (via BLX)
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skstt_proc (via BLX)
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skct_proc (via BLX)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_scan (via BLX)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_wr_flash (via BLX)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_encrypt (via BLX)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_post (via BLX)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req (via BLX)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientGetInfo (via BLX)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientWriteData (via BLX)
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSendRequest (via BLX)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientOpenRequest (via BLX)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSessionReset (via BLX)
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_montmul (via BLX)
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsa_init (via BLX)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler (via BLX)
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_Start (via BLX)
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_Stop (via BLX)
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_Start (via BLX)
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tcpip_stack_init (via BLX)
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram (via BLX)
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc (via BLX)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_inform (via BLX)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_start (via BLX)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_set_struct (via BLX)
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_parse_reply (via BLX)
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrinfo (via BLX)
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_new (via BLX)
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new (via BLX)
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_net_init (via BLX)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_alloc_socket (via BLX)
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_wpa (via BLX)
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_ap (via BLX)
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesInitKey (via BLX)
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add (via BLX)
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_delba (via BLX)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_addba_resp (via BLX)
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_associated (via BLX)
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_pspoll (via BLX)
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_nullfunc (via BLX)
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_rsp (via BLX)
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_assoc (via BLX)
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_auth (via BLX)
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update (via BLX)
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_wpa (via BLX)
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_rsn (via BLX)
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_ies (via BLX)
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_init (via BLX)
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk (via BLX)
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2 (via BLX)
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4 (via BLX)
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha1_vector (via BLX)
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_scan (via BLX)
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sta_init (via BLX)
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_parse_elems (via BLX)
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_add (via BLX)
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_add (via BLX)
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_supp_rates (via BLX)
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc (via BLX)
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_add (via BLX)
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_alloc_bss_data (via BLX)
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_config_defaults (via BLX)
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_load_factory_default (via BLX)
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint_mgmt (via BLX)
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_clear_1shot_info (via BLX)
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_req (via BLX)
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_encrypt (via BLX)
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LO_Leakage_Deal (via BLX)
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add_apsta (via BLX)
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_set_ssid (via BLX)
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_mgmt (via BLX)
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_deauth_disassoc (via BLX)
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_scan_req (via BLX)
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_tx_init (via BLX)
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init_ifdata (via BLX)
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan (via BLX)
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_create_ap (via BLX)
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_key (via BLX)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_timer_task (via BLX)
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_default_configs (via BLX)
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_reload_config (via BLX)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_from_unknown (via BLX)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_mgmt (via BLX)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_eapol (via BLX)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_assoc (via BLX)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_disassoc (via BLX)
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_disconnect_network (via BLX)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_mic_err (via BLX)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_scan_completed (via BLX)
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_associate (via BLX)
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_suites (via BLX)
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout (via BLX)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_ps (via BLX)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_rx_pspoll (via BLX)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_sta_active (via BLX)
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_Config (via BLX)
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_RecvCb (via BLX)
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPNakGenAndSend (via BLX)
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPOfferGenAndSend (via BLX)
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPAckGenAndSend (via BLX)
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClientTableLookup (via BLX)
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod (via BLX)
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_lset (via BLX)
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_copy (via BLX)
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_grow (via BLX)
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_free (via BLX)
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_init (via BLX)
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA1Final (via BLX)
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA1Transform (via BLX)
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_md5_vector (via BLX)
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Final (via BLX)
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesDecrypt (via BLX)
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesEncrypt (via BLX)
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesInit (via BLX)
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_kde_ies (via BLX)
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_init (via BLX)
</UL>

<P><STRONG><a name="[875]"></a>_memset_w</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[19f]"></a>strncpy</STRONG> (ARM, 104 bytes, Stack size 0 bytes, strncpy.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_decrypt_data (via BLX)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate (via BLX)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientGetNextHeader (via BLX)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersParse (via BLX)
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_pbreq_encry_data (via BLX)
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_oneshotinfo_resolve_probereq (via BLX)
</UL>

<P><STRONG><a name="[27e]"></a>strcmp</STRONG> (ARM, 156 bytes, Stack size 0 bytes, strcmp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_atcmd_exec (via BLX)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_gethostbyname (via BLX)
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[462]"></a>__aeabi_uread4</STRONG> (ARM, 0 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate (via BLX)
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram (via BLX)
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram (via BLX)
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass (via BLX)
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response (via BLX)
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment (via BLX)
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit (via BLX)
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input (via BLX)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process (via BLX)
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive (via BLX)
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe (via BLX)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if (via BLX)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_recv (via BLX)
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_handle_ack (via BLX)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input (via BLX)
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output (via BLX)
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_michael_mic_verify (via BLX)
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx_michael_mic_add (via BLX)
</UL>

<P><STRONG><a name="[44b]"></a>__aeabi_uwrite4</STRONG> (ARM, 0 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate (via BLX)
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input (via BLX)
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment (via BLX)
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment (via BLX)
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header (via BLX)
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input (via BLX)
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive (via BLX)
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst (via BLX)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if (via BLX)
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_create_msg (via BLX)
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx_michael_mic_add (via BLX)
</UL>

<P><STRONG><a name="[1b9]"></a>__aeabi_idivmod</STRONG> (ARM, 380 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_espt_proc (via BLX)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_standby (via BLX)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sleep (via BLX)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperItoa (via BLX)
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive (via BLX)
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select (via BLX)
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_count (via BLX)
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_assoc (via BLX)
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_ext_supp_rates (via BLX)
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_supp_rates (via BLX)
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_conf_ap (via BLX)
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_req (via BLX)
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_frequency_to_channel (via BLX)
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento (via BLX)
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real (via BLX)
</UL>

<P><STRONG><a name="[5]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[859]"></a>__rt_heap_descriptor</STRONG> (ARM, 16 bytes, Stack size 0 bytes, rt_heap_descriptor_onelibspace.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_libspace (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc (via BLX)
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc (via BLX)
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free (via BLX)
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc (via BLX)
</UL>

<P><STRONG><a name="[167]"></a>__rt_locale</STRONG> (ARM, 16 bytes, Stack size 0 bytes, rt_locale_onelibspace.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_libspace (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common (via BLX)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via BLX)
</UL>

<P><STRONG><a name="[86e]"></a>__aeabi_errno_addr</STRONG> (ARM, 4 bytes, Stack size 0 bytes, rt_errno_addr_onelibspace.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_libspace (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol (via BLX)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol (via BLX)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi (via BLX)
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul (via BLX)
</UL>

<P><STRONG><a name="[b]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[8]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[858]"></a>__Heap_Full</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, init_alloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[878]"></a>__Heap_Broken</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[163]"></a>_init_alloc</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, init_alloc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor (via BLX)
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[87a]"></a>__Heap_Initialize</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, h1_init_mt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[6]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init_mt.o(.text), UNUSED)

<P><STRONG><a name="[85d]"></a>__aeabi_uldivmod</STRONG> (ARM, 0 bytes, Stack size 0 bytes, lludiv5.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
</UL>

<P><STRONG><a name="[863]"></a>_printf_truncate_signed</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[864]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[866]"></a>_printf_int_common</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, _printf_intcommon.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[141]"></a>_printf_charcount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n (via Veneer)
</UL>

<P><STRONG><a name="[85f]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[131]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __2sprintf.o(.text)
</UL>
<P><STRONG><a name="[87c]"></a>_printf_cs_common</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[15b]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c (via Veneer)
</UL>

<P><STRONG><a name="[15d]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s (via Veneer)
</UL>

<P><STRONG><a name="[85e]"></a>_printf_char_file</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _printf_char_file.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>

<P><STRONG><a name="[87f]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, _printf_wctomb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[153]"></a>_printf_longlong_dec</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu (via Veneer)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld (via Veneer)
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli (via Veneer)
</UL>

<P><STRONG><a name="[882]"></a>_printf_longlong_oct</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[14f]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o (via Veneer)
</UL>

<P><STRONG><a name="[157]"></a>_printf_ll_oct</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo (via Veneer)
</UL>

<P><STRONG><a name="[86d]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[86b]"></a>__vfscanf_char</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[132]"></a>_sgetc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[133]"></a>_sbackspace</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[86f]"></a>strtol</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, strtol.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[885]"></a>__rt_memmove_w</STRONG> (ARM, 128 bytes, Stack size 0 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[872]"></a>__memmove_aligned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[865]"></a>__rt_udiv10</STRONG> (ARM, 44 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec (via BLX)
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via BLX)
</UL>

<P><STRONG><a name="[877]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, h1_extend_mt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[881]"></a>_ll_udiv10</STRONG> (ARM, 152 bytes, Stack size 0 bytes, lludiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec (via BLX)
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
</UL>

<P><STRONG><a name="[137]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, isspace.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[88b]"></a>_printf_fp_dec_real</STRONG> (Thumb, 618 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10 (via BLX)
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via BLX)
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify (via BLX)
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec (via Veneer)
</UL>

<P><STRONG><a name="[88e]"></a>_printf_fp_hex_real</STRONG> (Thumb, 712 bytes, Stack size 0 bytes, _printf_fp_hex.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify (via BLX)
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee_status (via BLX)
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex (via Veneer)
</UL>

<P><STRONG><a name="[88f]"></a>_printf_lcs_common</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wc (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[15f]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc (via Veneer)
</UL>

<P><STRONG><a name="[161]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls (via Veneer)
</UL>

<P><STRONG><a name="[883]"></a>__vfscanf</STRONG> (Thumb, 910 bytes, Stack size 0 bytes, _scanf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wstring (Weak Reference)
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_wctomb (Weak Reference)
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real (Weak Reference)
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_mbtowc (Weak Reference)
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[884]"></a>_strtoul</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, _strtoul.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[880]"></a>_wcrtomb</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, _wcrtomb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[879]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[88d]"></a>_printf_fp_infnan</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[887]"></a>_btod_etento</STRONG> (Thumb, 206 bytes, Stack size 0 bytes, bigflt0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul (via BLX)
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[170]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via BLX)
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[898]"></a>__sig_exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[897]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[89b]"></a>__default_signal_display</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, defsig_general.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[1ba]"></a>__aeabi_uidivmod</STRONG> (ARM, 36 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv))
<BR><BR>[Calls]<UL><LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div_large
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div2
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div5
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div8
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_page_write (via BLX)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_flush_sector (via BLX)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_sclk (via BLX)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockRead (via BLX)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiDmaBlockWrite (via BLX)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMasterInit (via BLX)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_switch_channel_tim (via BLX)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_init (via BLX)
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write (via BLX)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch (via BLX)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperItoa (via BLX)
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_SendUnbindMsg (via BLX)
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_Rand (via BLX)
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Cloudfunc (via BLX)
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_SetTimer (via BLX)
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_Start (via BLX)
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_ntoa_r (via BLX)
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr (via BLX)
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_release (via BLX)
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_renew (via BLX)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_bind (via BLX)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_reboot (via BLX)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_rebind (via BLX)
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_select (via BLX)
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_discover (via BLX)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt_internal (via BLX)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait (via BLX)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_erase (via BLX)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_fast_write (via BLX)
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_get_ntp_timestamp (via BLX)
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rate_control_init (via BLX)
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_get_inact_sec (via BLX)
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_power_save (via BLX)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;standby_timeout (via BLX)
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mod_int (via BLX)
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_div_mpi (via BLX)
</UL>

<P><STRONG><a name="[888]"></a>_btod_d2e</STRONG> (ARM, 56 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
</UL>

<P><STRONG><a name="[8a1]"></a>_d2e_denorm_low</STRONG> (ARM, 84 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[8a0]"></a>_d2e_norm_op1</STRONG> (ARM, 104 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[8a2]"></a>__btod_div_common</STRONG> (ARM, 712 bytes, Stack size 0 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Called By]<UL><LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[8a3]"></a>_e2e</STRONG> (ARM, 220 bytes, Stack size 0 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Called By]<UL><LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[889]"></a>_btod_ediv</STRONG> (ARM, 48 bytes, Stack size 0 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Calls]<UL><LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento (via BLX)
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
</UL>

<P><STRONG><a name="[88a]"></a>_btod_emul</STRONG> (ARM, 48 bytes, Stack size 0 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Calls]<UL><LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento (via BLX)
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
</UL>

<P><STRONG><a name="[8a4]"></a>__btod_mult_common</STRONG> (ARM, 612 bytes, Stack size 0 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Called By]<UL><LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[13b]"></a>Init_MPU</STRONG> (ARM, 124 bytes, Stack size 0 bytes, mpu.o(InitMPU))
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[351]"></a>vPortStartFirstTask</STRONG> (ARM, 0 bytes, Stack size 0 bytes, portasm.o(PORT_ASM))
<BR><BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler (via BLX)
</UL>

<P><STRONG><a name="[326]"></a>vPortYield</STRONG> (ARM, 0 bytes, Stack size 0 bytes, portasm.o(PORT_ASM))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume (via BLX)
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend (via BLX)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet (via BLX)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete (via BLX)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask (via BLX)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask (via BLX)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll (via BLX)
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay (via BLX)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend (via BLX)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive (via BLX)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate (via BLX)
</UL>

<P><STRONG><a name="[7e]"></a>vPortYieldProcessor</STRONG> (ARM, 0 bytes, Stack size 0 bytes, portasm.o(PORT_ASM))
<BR>[Address Reference Count : 1]<UL><LI> start.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>freeRtosirqHandler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, portasm.o(PORT_ASM))
<BR><BR>[Calls]<UL><LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freeRtos_irq_isr_handler (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> start.o(RESET)
</UL>
<P><STRONG><a name="[348]"></a>portDISABLE_INTERRUPTS</STRONG> (ARM, 0 bytes, Stack size 0 bytes, portasm.o(PORT_ASM))
<BR><BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskEndScheduler (via BLX)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler (via BLX)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical (via BLX)
</UL>

<P><STRONG><a name="[352]"></a>portENABLE_INTERRUPTS</STRONG> (ARM, 0 bytes, Stack size 0 bytes, portasm.o(PORT_ASM))
<BR><BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical (via BLX)
</UL>

<P><STRONG><a name="[66d]"></a>__ARM_common_ll_mulss</STRONG> (ARM, 12 bytes, Stack size 0 bytes, tls_wl_rf65.o(i.__ARM_common_ll_mulss))
<BR><BR>[Called By]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LO_Leakage_Deal (via BLX)
</UL>

<P><STRONG><a name="[279]"></a>__ARM_common_switch8</STRONG> (ARM, 24 bytes, Stack size 0 bytes, wm_cmdp_at.o(i.__ARM_common_switch8))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_scheduler (via BLX)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_parse_elems (via BLX)
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_sync (via BLX)
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler (via BLX)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_state_changed_ATCMD (via BLX)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_default_socket_state_changed (via BLX)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf65_lo_leakage (via BLX)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lptstr_proc (via BLX)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set (via BLX)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get (via BLX)
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_HandleEvent (via BLX)
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZC_GetStoreInfor (via BLX)
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_TimeoutAction (via BLX)
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PCT_Run (via BLX)
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_RecvMessage (via BLX)
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc (via BLX)
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_aton (via BLX)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process (via BLX)
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown (via BLX)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt_internal (via BLX)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt_internal (via BLX)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback (via BLX)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread (via BLX)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt (via BLX)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt (via BLX)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_int_enable (via BLX)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_get_param (via BLX)
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_mgmt (via BLX)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_queued_mgmt (via BLX)
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sm_event (via BLX)
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive (via BLX)
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_to_flash (via BLX)
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_auth (via BLX)
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_update_encrypt_cfg (via BLX)
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_param (via BLX)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_timer_task (via BLX)
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_state_txt (via BLX)
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle (via BLX)
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_Step (via BLX)
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_set_eapol (via BLX)
</UL>

<P><STRONG><a name="[88c]"></a>__ARM_fpclassify</STRONG> (ARM, 44 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real (via BLX)
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via BLX)
</UL>

<P><STRONG><a name="[869]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[130]"></a>_get_lc_ctype</STRONG> (ARM, 72 bytes, Stack size 0 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2 (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[16a]"></a>_get_lc_numeric</STRONG> (ARM, 72 bytes, Stack size 0 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2 (via BLX)
</UL>

<P><STRONG><a name="[8a6]"></a>__fpl_dcheck_NaN1</STRONG> (ARM, 12 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[1c4]"></a>__aeabi_d2iz</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetRandomeNumber (via BLX)
</UL>

<P><STRONG><a name="[8a8]"></a>_dfix</STRONG> (ARM, 112 bytes, Stack size 0 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[1c2]"></a>__aeabi_i2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetRandomeNumber (via BLX)
</UL>

<P><STRONG><a name="[8a9]"></a>__fpl_dnaninf</STRONG> (ARM, 184 bytes, Stack size 0 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
</UL>

<P><STRONG><a name="[a]"></a>__ieee_status</STRONG> (ARM, 8 bytes, Stack size 0 bytes, istatus.o(x$fpl$ieeestatus))
<BR><BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real (via BLX)
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits (via BLX)
</UL>

<P><STRONG><a name="[145]"></a>_printf_fp_dec</STRONG> (ARM, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Calls]<UL><LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[149]"></a>_printf_fp_hex</STRONG> (ARM, 4 bytes, Stack size 0 bytes, printf2.o(x$fpl$printf2))
<BR><BR>[Calls]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>

<P><STRONG><a name="[8a7]"></a>__fpl_return_NaN</STRONG> (ARM, 116 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[1c3]"></a>__ARM_scalbn</STRONG> (ARM, 104 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetRandomeNumber (via BLX)
</UL>

<P><STRONG><a name="[8aa]"></a>__fpl_cmpreturn</STRONG> (ARM, 60 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[17c]"></a>HTTPIntrnSessionReset</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetUpTime
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSetVerb
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientReset
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersReceive
</UL>

<P><STRONG><a name="[183]"></a>HTTPIntrnHeadersAdd</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSendRequest
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientAddRequestHeaders
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersSend
</UL>

<P><STRONG><a name="[187]"></a>HTTPIntrnSend</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetSocketError
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSessionEvalTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientWriteData
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSendRequest
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersSend
</UL>

<P><STRONG><a name="[18c]"></a>HTTPIntrnHeadersFind</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrCaseStr
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientGetNextHeader
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersParse
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersRemove
</UL>

<P><STRONG><a name="[190]"></a>HTTPIntrnHeadersRemove</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersFind
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersSend
</UL>

<P><STRONG><a name="[191]"></a>HTTPIntrnHeadersSend</STRONG> (Thumb, 430 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperItoa
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSetVerb
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersRemove
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSend
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersAdd
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSendRequest
</UL>

<P><STRONG><a name="[193]"></a>HTTPIntrnConnectionOpen</STRONG> (Thumb, 274 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;socket
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connect
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bind
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetSocketError
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetHostByName
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrExtract
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSendRequest
</UL>

<P><STRONG><a name="[199]"></a>HTTPIntrnSetURL</STRONG> (Thumb, 312 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrSearch
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrInsensitiveCompare
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSendRequest
</UL>

<P><STRONG><a name="[19e]"></a>HTTPIntrnHeadersParse</STRONG> (Thumb, 470 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrInsensitiveCompare
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrGetToken
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersFind
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersReceive
</UL>

<P><STRONG><a name="[1a1]"></a>HTTPIntrnRecv</STRONG> (Thumb, 570 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetSocketError
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSessionEvalTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientReadData
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnGetRemoteChunkLength
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnGetRemoteHeaders
</UL>

<P><STRONG><a name="[1a3]"></a>HTTPIntrnHeadersReceive</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnGetRemoteHeaders
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersParse
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSessionReset
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientWriteData
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientRecvResponse
</UL>

<P><STRONG><a name="[188]"></a>HTTPIntrnSessionEvalTimeout</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPWrapperGetUpTime
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSendRequest
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnRecv
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnSend
</UL>

<P><STRONG><a name="[1a4]"></a>HTTPIntrnGetRemoteHeaders</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnRecv
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnHeadersReceive
</UL>

<P><STRONG><a name="[1a9]"></a>HTTPIntrnGetRemoteChunkLength</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, httpclient.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPStrHToL
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPIntrnRecv
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientReadData
</UL>

<P><STRONG><a name="[1c7]"></a>http_snd_req</STRONG> (Thumb, 304 bytes, Stack size 0 bytes, wm_httpclient_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientFindCloseHeader
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientFindFirstHeader
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientReadData
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientRecvResponse
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSendRequest
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientCloseRequest
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPClientSetVerb
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_rx
</UL>

<P><STRONG><a name="[84]"></a>http_client_rx</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, wm_httpclient_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_snd_req
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_httpclient_task.o(.text)
</UL>
<P><STRONG><a name="[85]"></a>ResetTimerProc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_cmdp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp.o(.text)
</UL>
<P><STRONG><a name="[e]"></a>atcmd_insdisp_proc</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>atcmd_entm_proc</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_rx_enable
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_rx_disable
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_enable
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_irq_disable
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_set_uart1_mode
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_uart1_port
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>atcmd_reset_proc</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_reset_sys
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>atcmd_ps_proc</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_ps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>atcmd_reset_flash_proc</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_reset_flash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>atcmd_pmtf_proc</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_pmtf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>atcmd_gpio_proc</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>atcmd_wjoin_proc</STRONG> (Thumb, 498 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_current_bss
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_join
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_net_up
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>atcmd_wleave_proc</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_disconnect_network
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>atcmd_wscan_proc</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_scan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>atcmd_link_status_proc</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_link_status
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>atcmd_get_sta_info</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_sta_detail
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_wireless_mode
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>atcmd_skct_proc</STRONG> (Thumb, 410 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_socket_state
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_create_socket
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_filter_quotation
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_ipaddr
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>atcmd_skstt_proc</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_recvmit
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_socket_status
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>atcmd_skclose_proc</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_close_socket
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>atcmd_sksdf_proc</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_default_socket
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>atcmd_sksnd_proc</STRONG> (Thumb, 288 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_timer2_start
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_default_socket
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_socket_state
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_set_uart1_sock_param
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_set_uart1_mode
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>atcmd_skrcv_proc</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_socket_state
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>atcmd_sktrptmode_proc</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>atcmd_sktsrceip_proc</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_net_set_sourceip
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_net_get_sourceip
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>atcmd_skghbn_proc</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_filter_quotation
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gethostbyname
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>atcmd_wprt_proc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_wireless_mode
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_wireless_mode
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>atcmd_ssid_proc</STRONG> (Thumb, 206 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_filter_quotation
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_ssid
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_ssid
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>atcmd_key_proc</STRONG> (Thumb, 284 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_filter_quotation
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtodec
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_key
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_key
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>atcmd_encrypt_proc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_encrypt
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_encrypt
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>atcmd_bssid_proc</STRONG> (Thumb, 284 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex_to_digit
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_bssid
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_bssid
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>atcmd_brd_ssid_proc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_hide_ssid
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_hide_ssid
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>atcmd_get_connect_param_proc</STRONG> (Thumb, 218 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_original_key
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_original_ssid
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_bssid
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>atcmd_chnl_proc</STRONG> (Thumb, 220 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_channel
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_channel
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>atcmd_chll_proc</STRONG> (Thumb, 254 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtohex
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_channellist
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_channellist
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>atcmd_wreg_proc</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_region
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_region
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>atcmd_wbgr_proc</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_hw_mode
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_hw_mode
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>atcmd_watc_proc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_adhoc_create_mode
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_adhoc_create_mode
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>atcmd_wpsm_proc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_wl_ps_mode
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_wl_ps_mode
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>atcmd_warm_proc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_roaming_mode
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_roaming_mode
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>atcmd_warc_proc</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtodec
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_warc
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_warc
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>atcmd_nip_proc</STRONG> (Thumb, 356 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_filter_quotation
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_ipaddr
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_ip_info
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_ip_info
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>atcmd_atm_proc</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_work_mode
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_work_mode
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>atcmd_atrm_proc</STRONG> (Thumb, 382 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_filter_quotation
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_ipaddr
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_default_socket_params
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_default_socket_params
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>atcmd_aolm_proc</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>atcmd_portm_proc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_hostif_mode
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_hostif_mode
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>atcmd_uart_proc</STRONG> (Thumb, 228 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_uart_params
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_uart_params
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>atcmd_atlt_proc</STRONG> (Thumb, 272 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_atlt
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_atlt
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>atcmd_dns_proc</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_filter_quotation
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_dnsname
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_dnsname
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>atcmd_ddns_proc</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>atcmd_upnp_proc</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>atcmd_dname_proc</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>atcmd_atpt_proc</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_atpt
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_atpt
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>atcmd_espc_proc</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtohex
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_espc
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_espc
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>atcmd_espt_proc</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtodec
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_espt
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_espt
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>atcmd_webs_proc</STRONG> (Thumb, 252 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtodec
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_webs
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_webs
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>atcmd_iom_proc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtodec
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_iom
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_iom
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>atcmd_cmdm_proc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtodec
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_cmdm
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_cmdm
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[44]"></a>atcmd_set_oneshot_proc</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_task_init
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_add_status_event
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtodec
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_oneshot
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_oneshot
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[43]"></a>atcmd_pass_proc</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_filter_quotation
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_pass
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_pass
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>atcmd_dbg_proc</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_dbg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[45]"></a>atcmd_updp_proc</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set_updp_mode
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_save_user_default
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_load_user
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[46]"></a>atcmd_http_client_proc</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_filter_quotation
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_client_post
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[66]"></a>atcmd_custdata_proc</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_customdata
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>atcmd_mac_proc</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_mac
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_mac
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_set_mac_addr
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtohexarray
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_filter_quotation
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>atcmd_ver_proc</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_ver
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>atcmd_updm_proc</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_get_current_session_id
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_exit
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_enter
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_disconnect_network
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_set_fwup_mode
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_fwup_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>atcmd_updd_proc</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_get_current_update_numer
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_get_current_session_id
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_current_state
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_set_uart0_mode
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_set_uart1_mode
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>atcmd_regr_proc</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr_to_uinit
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>atcmd_regw_proc</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr_to_uinit
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>atcmd_rfr_proc</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr_to_uinit
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_read
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>atcmd_rfw_proc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr_to_uinit
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_write
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>atcmd_flsr_proc</STRONG> (Thumb, 278 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr_to_uinit
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_read
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[50]"></a>atcmd_flsw_proc</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr_to_uinit
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>atcmd_txg_proc</STRONG> (Thumb, 260 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_efuse_write
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtohexarray
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_tx_gain
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[52]"></a>atcmd_hwv_proc</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_ver
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[65]"></a>atcmd_rwhwv_proc</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atodec
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_filter_quotation
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_hw_ver
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_hw_ver
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[53]"></a>atcmd_spif_proc</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_efuse_write
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_efuse_read
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtohexarray
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[54]"></a>atcmd_lpchl_proc</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_change_chanel
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;string_to_uint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpinit
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_channel
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpchrs_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>atcmd_lptstr_proc</STRONG> (Thumb, 484 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_tx_send_litepoint
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr_to_uinit
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpinit
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lptbd_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[56]"></a>atcmd_lptstp_proc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpstpt_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>atcmd_lptstt_proc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>atcmd_lprstr_proc</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_change_chanel
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr_to_uinit
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpinit
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpchlr_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[59]"></a>atcmd_lprstp_proc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpstpr_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[5a]"></a>atcmd_lprstt_proc</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpragc_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[5b]"></a>atcmd_lppstr_proc</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr_to_uinit
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_read
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf65_lo_leakage
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[5c]"></a>atcmd_lppstp_proc</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_efuse_write
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr_to_uinit
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf_read
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_rf65_lo_leakage
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[5d]"></a>atcmd_lprfps_proc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_ok_resp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[5e]"></a>atcmd_lpchrs_proc</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hexstr_to_uinit
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpchl_proc
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[5f]"></a>atcmd_lptbd_proc</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_err_resp
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lptstr_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[60]"></a>atcmd_lpstpt_proc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lptstp_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[61]"></a>atcmd_lpchlr_proc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lprstr_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[62]"></a>atcmd_lpstpr_proc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lprstp_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[63]"></a>atcmd_lpragc_proc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lprstt_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[64]"></a>atcmd_lprsr_proc</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_at.o(.data)
</UL>
<P><STRONG><a name="[24d]"></a>tls_os_sem_acquire</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_skct_proc
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wscan_proc
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_wjoin_proc
</UL>

<P><STRONG><a name="[277]"></a>atcmd_lpinit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_cmdp_at.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lprstr_proc
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lptstr_proc
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atcmd_lpchl_proc
</UL>

<P><STRONG><a name="[280]"></a>tls_os_sem_release</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_net_status_changed
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_state_changed_ATCMD
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_wscan_cmplt
</UL>

<P><STRONG><a name="[283]"></a>tls_os_timer_create</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_init
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_default_socket_create_tmr
</UL>

<P><STRONG><a name="[284]"></a>tls_os_timer_start</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_init
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_default_socket_create_tmr
</UL>

<P><STRONG><a name="[285]"></a>tls_os_timer_change</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_default_socket_err
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_default_socket_create_tmr
</UL>

<P><STRONG><a name="[286]"></a>alloc_recvmit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_set_recvmit
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_recvmit
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_state_changed_ATCMD
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_default_socket_state_changed
</UL>

<P><STRONG><a name="[288]"></a>free_recvmit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_set_recvmit
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_recvmit
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_close_default_socket
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_socket_state_changed_ATCMD
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_default_socket_state_changed
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_close_socket
</UL>

<P><STRONG><a name="[8a]"></a>hostif_wscan_cmplt</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_scan_rslt
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_scan_cmplt
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_hostif.o(.text)
</UL>
<P><STRONG><a name="[2ab]"></a>hostif_default_socket_create_tmr</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_start
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_create_default_socket
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_net_status_changed
</UL>

<P><STRONG><a name="[8e]"></a>hostif_default_socket_state_changed</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_recvmit
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_recvmit
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_hostif.o(.text)
</UL>
<P><STRONG><a name="[8d]"></a>hostif_default_socket_err</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_auto_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_hostif.o(.text)
</UL>
<P><STRONG><a name="[8c]"></a>hostif_socket_recv</STRONG> (Thumb, 206 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_recv_data
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_tx_msg
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_get_socket_state
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_hostif.o(.text)
</UL>
<P><STRONG><a name="[8b]"></a>hostif_default_socket_setup</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_close_default_socket
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_create_default_socket
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_hostif.o(.text)
</UL>
<P><STRONG><a name="[8f]"></a>hostif_socket_rpt</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_process_cmdrsp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_hostif.o(.text)
</UL>
<P><STRONG><a name="[91]"></a>hostif_socket_state_changed_ATCMD</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_dis
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_join
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_recvmit
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_recvmit
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_hostif.o(.text)
</UL>
<P><STRONG><a name="[90]"></a>hostif_socket_state_changed_RICMD</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_dis
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_join
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_tcp_conn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_hostif.o(.text)
</UL>
<P><STRONG><a name="[92]"></a>tls_hostif_net_status_changed</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_close_default_socket
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_linkdown
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_wjoin_failed
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_wjoin_success
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_send_event_port_check
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostif_default_socket_create_tmr
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_cmd_set_net_up
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_hostif.o(.text)
</UL>
<P><STRONG><a name="[2a5]"></a>dl_list_add_tail</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_init
</UL>

<P><STRONG><a name="[28c]"></a>dl_list_del</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_tx_msg
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_tx_event_msg
</UL>

<P><STRONG><a name="[28b]"></a>dl_list_empty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_tx_msg
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_tx_event_msg
</UL>

<P><STRONG><a name="[287]"></a>tls_hostif_set_recvmit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_cmdp_hostif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_recvmit
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_recvmit
</UL>

<P><STRONG><a name="[2b8]"></a>tls_os_task_create</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_open
</UL>

<P><STRONG><a name="[2b9]"></a>tls_os_mailbox_send</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart0_task_rx_cb
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart0_task_tx_cb
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart1_task_rx_cb
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart1_task_tx_cb
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_tx_msg
</UL>

<P><STRONG><a name="[2ba]"></a>tls_os_mailbox_receive</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_0_tx_task
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_0_rx_task
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_1_tx_task
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_1_rx_task
</UL>

<P><STRONG><a name="[9c]"></a>uart_send_tx_msg</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_send
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_uart_task.o(.text)
</UL>
<P><STRONG><a name="[9d]"></a>uart_get_uart1_port</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wm_uart_task.o(.text)
</UL>
<P><STRONG><a name="[9e]"></a>uart_set_uart1_mode</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_fc_status
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_uart_task.o(.text)
</UL>
<P><STRONG><a name="[9b]"></a>uart_set_uart0_mode</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_fc_status
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_uart_task.o(.text)
</UL>
<P><STRONG><a name="[9f]"></a>uart_set_uart1_sock_param</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wm_uart_task.o(.text)
</UL>
<P><STRONG><a name="[2c3]"></a>uart_fwup_rsp</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_process_cmdrsp
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_fwup_send
</UL>

<P><STRONG><a name="[2c8]"></a>find_atcmd_eol</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memchr
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_atcmd_eol
</UL>

<P><STRONG><a name="[2ca]"></a>parse_atcmd_eol</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modify_atcmd_tail
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_atcmd_eol
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_atcmd_line
</UL>

<P><STRONG><a name="[2cc]"></a>parse_atcmd_line</STRONG> (Thumb, 368 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_atcmd_eol
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_cmd_handler
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx
</UL>

<P><STRONG><a name="[2cf]"></a>str_to_uint</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
</UL>

<P><STRONG><a name="[96]"></a>tls_uart1_task_tx_cb</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_uart_task.o(.text)
</UL>
<P><STRONG><a name="[95]"></a>tls_uart1_task_rx_cb</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_fc_status
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_uart_task.o(.text)
</UL>
<P><STRONG><a name="[94]"></a>tls_uart0_task_tx_cb</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_uart_task.o(.text)
</UL>
<P><STRONG><a name="[93]"></a>tls_uart0_task_rx_cb</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_fc_status
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_mailbox_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_uart_task.o(.text)
</UL>
<P><STRONG><a name="[2bc]"></a>dl_list_add_tail</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tcp_recv
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cache_tcp_recv
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_tx_msg
</UL>

<P><STRONG><a name="[2d5]"></a>dl_list_del</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tcp_recv
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cache_tcp_recv
</UL>

<P><STRONG><a name="[2d2]"></a>dl_list_empty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
</UL>

<P><STRONG><a name="[2dc]"></a>tls_os_mailbox_create</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_open
</UL>

<P><STRONG><a name="[2cb]"></a>modify_atcmd_tail</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_atcmd_eol
</UL>

<P><STRONG><a name="[2d6]"></a>cache_tcp_recv</STRONG> (Thumb, 290 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_del
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_hostif_get_recvmit
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
</UL>

<P><STRONG><a name="[2d7]"></a>uart_tcp_recv</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, wm_uart_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_tx_chars_start
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_del
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_hostif
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx
</UL>

<P><STRONG><a name="[a1]"></a>wm_cmdp_oneshot_task</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, wm_cmdp_oneshot_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wm_cmdp_oneshot_send_mac
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_cmdp_oneshot_task.o(.text)
</UL>
<P><STRONG><a name="[2ea]"></a>tls_os_timer_change</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_start_oneshot
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_switch_channel_tim
</UL>

<P><STRONG><a name="[2eb]"></a>tls_os_timer_stop</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_start_oneshot
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_stop_oneshot
</UL>

<P><STRONG><a name="[2f6]"></a>ieee80211_get_SA</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_jd_oneshot
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_lsd_oneshot
</UL>

<P><STRONG><a name="[2f3]"></a>tls_compare_ether_addr</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_dataframe_recv
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_compare_mac_addr
</UL>

<P><STRONG><a name="[2f2]"></a>tls_wifi_compare_mac_addr</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_compare_ether_addr
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_jd_oneshot
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_lsd_oneshot
</UL>

<P><STRONG><a name="[2f5]"></a>ieee80211_get_DA</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_jd_oneshot
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_lsd_oneshot
</UL>

<P><STRONG><a name="[2f8]"></a>tls_is_zero_ether_addr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm_wifi_oneshot.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_dataframe_recv
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_lsd_oneshot
</UL>

<P><STRONG><a name="[a4]"></a>tls_main_net_status_changed</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wm_main.o(.text)
</UL>
<P><STRONG><a name="[322]"></a>prvUnlockQueue</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[325]"></a>prvCopyDataToQueue</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[32a]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, queue.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[32f]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, rtostimers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[332]"></a>prvSampleTimeNow</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rtostimers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[a7]"></a>prvTimerTask</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtostimers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtostimers.o(.text)
</UL>
<P><STRONG><a name="[336]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, rtostimers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreate
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateExt
</UL>

<P><STRONG><a name="[333]"></a>prvSwitchTimerLists</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, rtostimers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[335]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, rtostimers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[334]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, rtostimers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield (via BLX)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[33f]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[a8]"></a>prvIdleTask</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(.text)
</UL>
<P><STRONG><a name="[34c]"></a>prvListTaskWithinSingleList</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usTaskCheckFreeStackSpace
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskList
</UL>

<P><STRONG><a name="[347]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListRemove
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[34d]"></a>usTaskCheckFreeStackSpace</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetStackHighWaterMark
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvListTaskWithinSingleList
</UL>

<P><STRONG><a name="[353]"></a>tls_os_sem_release</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write32_then_writen
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_read
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write_then_read
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_async
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_scheduler
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_continue_transfer
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_complete
</UL>

<P><STRONG><a name="[354]"></a>tls_os_queue_send</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_async
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_interrupt_handler
</UL>

<P><STRONG><a name="[367]"></a>spi_set_mode</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_start_transfer
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
</UL>

<P><STRONG><a name="[355]"></a>SpiMasterInit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsDmaInit
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_setup
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_trans_type
</UL>

<P><STRONG><a name="[357]"></a>SpiDmaBlockWrite</STRONG> (Thumb, 372 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsDmaWaitComplt
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsDmaStart
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsDmaRequest
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsDmaFree
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiWaitIdle
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write32_then_writen
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write
</UL>

<P><STRONG><a name="[35d]"></a>SpiDmaBlockRead</STRONG> (Thumb, 374 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsDmaWaitComplt
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsDmaStart
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsDmaRequest
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsDmaFree
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiWaitIdle
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_read
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write_then_read
</UL>

<P><STRONG><a name="[a9]"></a>spi_complete</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_hostspi.o(.text)
</UL>
<P><STRONG><a name="[360]"></a>spi_fill_txfifo</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_get_status
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_scheduler
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_continue_transfer
</UL>

<P><STRONG><a name="[362]"></a>spi_get_rxfifo</STRONG> (Thumb, 270 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_get_status
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_continue_transfer
</UL>

<P><STRONG><a name="[363]"></a>spi_next_message</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_next_transfer
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_scheduler
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_continue_transfer
</UL>

<P><STRONG><a name="[366]"></a>spi_start_transfer</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_sclk
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_chipselect_mode
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_scheduler
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_continue_transfer
</UL>

<P><STRONG><a name="[36a]"></a>spi_continue_transfer</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_clk_set
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_next_transfer
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_chipselect_mode
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_del
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_start_transfer
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_next_message
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_get_rxfifo
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_fill_txfifo
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_interrupt_handler
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_scheduler
</UL>

<P><STRONG><a name="[aa]"></a>spi_scheduler</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_clk_set
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_continue_transfer
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_start_transfer
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_next_message
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_fill_txfifo
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_hostspi.o(.text)
</UL>
<P><STRONG><a name="[ab]"></a>spi_interrupt_handler</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_continue_transfer
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_hostspi.o(.text)
</UL>
<P><STRONG><a name="[370]"></a>dl_list_add_tail</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write32_then_writen
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_read
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write_then_read
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_async
</UL>

<P><STRONG><a name="[36c]"></a>dl_list_del</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_continue_transfer
</UL>

<P><STRONG><a name="[364]"></a>dl_list_empty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_async
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_next_transfer
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_next_message
</UL>

<P><STRONG><a name="[372]"></a>tls_os_sem_create</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_sync
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
</UL>

<P><STRONG><a name="[36b]"></a>tls_os_sem_acquire</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write32_then_writen
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_read
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write_then_read
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_sync
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_async
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_scheduler
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_continue_transfer
</UL>

<P><STRONG><a name="[35f]"></a>spi_set_endian</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_trans_type
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
</UL>

<P><STRONG><a name="[368]"></a>spi_set_chipselect_mode</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_continue_transfer
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_start_transfer
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
</UL>

<P><STRONG><a name="[369]"></a>spi_set_sclk</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_start_transfer
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_init
</UL>

<P><STRONG><a name="[361]"></a>spi_get_status</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_get_rxfifo
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_fill_txfifo
</UL>

<P><STRONG><a name="[374]"></a>spi_message_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write32_then_writen
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_read
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write_then_read
</UL>

<P><STRONG><a name="[365]"></a>spi_next_transfer</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_hostspi.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_continue_transfer
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_next_message
</UL>

<P><STRONG><a name="[37c]"></a>tls_uart_tx_chars</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_isr
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_fc_status
</UL>

<P><STRONG><a name="[ad]"></a>tls_uart_tx_cb</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_uart.o(.text)
</UL>
<P><STRONG><a name="[37e]"></a>tls_uart_tx_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_isr
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_set_fc_status
</UL>

<P><STRONG><a name="[390]"></a>tls_os_sem_release</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wm_fls.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_read
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_get_param
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_erase
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_fast_write
</UL>

<P><STRONG><a name="[393]"></a>tls_fls_flush_sector</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wm_fls.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_page_write
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_fast_write_destroy
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_fast_write
</UL>

<P><STRONG><a name="[391]"></a>tls_os_sem_acquire</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_fls.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_read
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_get_param
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_erase
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_fast_write
</UL>

<P><STRONG><a name="[39d]"></a>gd25qxx_wait_write_enable</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, wm_fls_gd25qxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write_then_read
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_low
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_high
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_chip_erase
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_erase
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_page_write
</UL>

<P><STRONG><a name="[39e]"></a>gd25qxx_wait_flash_ready</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, wm_fls_gd25qxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write_then_read
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_low
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_high
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_chip_erase
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_erase
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_page_write
</UL>

<P><STRONG><a name="[67]"></a>gd25qxx_read</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, wm_fls_gd25qxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write_then_read
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap32
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_low
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_high
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_fls_gd25qxx.o(.data)
</UL>
<P><STRONG><a name="[68]"></a>gd25qxx_fast_read</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_fls_gd25qxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wm_fls_gd25qxx.o(.data)
</UL>
<P><STRONG><a name="[69]"></a>gd25qxx_page_write</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, wm_fls_gd25qxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write32_then_writen
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_write_enable
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap32
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_wait_flash_ready
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_wait_write_enable
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_low
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_high
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_fls_gd25qxx.o(.data)
</UL>
<P><STRONG><a name="[6a]"></a>gd25qxx_erase</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, wm_fls_gd25qxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_write_enable
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap32
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_wait_flash_ready
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_wait_write_enable
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_low
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_high
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_fls_gd25qxx.o(.data)
</UL>
<P><STRONG><a name="[6b]"></a>gd25qxx_chip_erase</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, wm_fls_gd25qxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_write_enable
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_wait_flash_ready
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_wait_write_enable
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_low
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_high
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_fls_gd25qxx.o(.data)
</UL>
<P><STRONG><a name="[6c]"></a>gd25qxx_probe</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, wm_fls_gd25qxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write_then_read
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_low
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_high
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_fls_gd25qxx.o(.data)
</UL>
<P><STRONG><a name="[6d]"></a>gd25qxx_remove</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_fls_gd25qxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> wm_fls_gd25qxx.o(.data)
</UL>
<P><STRONG><a name="[39f]"></a>swap32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_fls_gd25qxx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_erase
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_page_write
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_read
</UL>

<P><STRONG><a name="[3a0]"></a>gd25qxx_write_enable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_fls_gd25qxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_spi_write
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_low
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fls_cs_high
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_chip_erase
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_erase
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25qxx_page_write
</UL>

<P><STRONG><a name="[3a6]"></a>cal_count</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, wm_pwm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_pwm_freq_duty_set
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_pwm_freq_set
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_pwm_duty_set
</UL>

<P><STRONG><a name="[3cb]"></a>net_free_socket</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_create
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_connect
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_create_connect
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_close_connect
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_poll_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_err_cb
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_alloc_socket
</UL>

<P><STRONG><a name="[3cd]"></a>net_alloc_socket</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_free_socket
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_create
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_accept_cb
</UL>

<P><STRONG><a name="[b2]"></a>net_tcp_err_cb</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_accept
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_send_event_to_hostif
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_free_socket
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_recv_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_netconn.o(.text)
</UL>
<P><STRONG><a name="[b1]"></a>net_tcp_poll_cb</STRONG> (Thumb, 220 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_accept
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_server_conn
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_send_event_to_hostif
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_close_connect
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_free_socket
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_netconn.o(.text)
</UL>
<P><STRONG><a name="[3d6]"></a>net_tcp_close_connect</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_shutdown
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_accept
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_free_socket
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_connect
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_poll_cb
</UL>

<P><STRONG><a name="[b3]"></a>raw_sk_free_pbuf_custom_fn</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sk_free_pbuf_custom
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_netconn.o(.text)
</UL>
<P><STRONG><a name="[b4]"></a>net_tcp_recv_cb</STRONG> (Thumb, 310 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloced_custom
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_server_conn
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sk_free_pbuf_custom
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_err_cb
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_netconn.o(.text)
</UL>
<P><STRONG><a name="[b5]"></a>net_tcp_connect_cb</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_send_event_to_hostif
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_netconn.o(.text)
</UL>
<P><STRONG><a name="[b6]"></a>net_tcp_accept_cb</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_send_event_to_hostif
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_alloc_socket
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_netconn.o(.text)
</UL>
<P><STRONG><a name="[b7]"></a>net_udp_recv_cb</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_netconn.o(.text)
</UL>
<P><STRONG><a name="[3dd]"></a>net_tcp_start</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_with_backlog
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_accept
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_create_connect
</UL>

<P><STRONG><a name="[ba]"></a>net_do_send</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_send
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_netconn.o(.text)
</UL>
<P><STRONG><a name="[bb]"></a>net_do_write</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_server_conn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_netconn.o(.text)
</UL>
<P><STRONG><a name="[b8]"></a>do_create_connect</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_send_event_to_hostif
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_start
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_free_socket
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_netconn.o(.text)
</UL>
<P><STRONG><a name="[b9]"></a>do_close_connect</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_net_get_socket
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_close_connect
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_free_socket
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_netconn.o(.text)
</UL>
<P><STRONG><a name="[3d5]"></a>net_send_event_to_hostif</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_create_connect
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_accept_cb
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_connect_cb
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_poll_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_err_cb
</UL>

<P><STRONG><a name="[3db]"></a>raw_sk_free_pbuf_custom</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_tcp_recv_cb
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sk_free_pbuf_custom_fn
</UL>

<P><STRONG><a name="[3ee]"></a>netconn_msg</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, tls_netconn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_socket_send
</UL>

<P><STRONG><a name="[bc]"></a>tcpip_thread</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, tcpip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_untimeout_p
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_mbox_fetch_p
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_p
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcpip.o(.text)
</UL>
<P><STRONG><a name="[bd]"></a>pbuf_free_int</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tcpip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcpip.o(.text)
</UL>
<P><STRONG><a name="[be]"></a>mem_free_int</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tcpip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcpip.o(.text)
</UL>
<P><STRONG><a name="[411]"></a>netconn_recv_data</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_tcp_pbuf
</UL>

<P><STRONG><a name="[419]"></a>netconn_close_shutdown</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, api_lib.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_shutdown
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close
</UL>

<P><STRONG><a name="[d2]"></a>recv_raw</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[d3]"></a>recv_udp</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[ce]"></a>recv_tcp</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[cd]"></a>err_tcp</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[41e]"></a>do_writemore</STRONG> (Thumb, 268 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sndbuf
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poll_tcp
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sent_tcp
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_write
</UL>

<P><STRONG><a name="[cb]"></a>sent_tcp</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sndbuf
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[420]"></a>do_close_internal</STRONG> (Thumb, 268 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_shutdown
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_accept
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poll_tcp
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sent_tcp
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_delconn
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close
</UL>

<P><STRONG><a name="[cc]"></a>poll_tcp</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sndbuf
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[421]"></a>setup_tcp</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connected
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connect
</UL>

<P><STRONG><a name="[d0]"></a>accept_function</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_set_invalid
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[425]"></a>netconn_drain</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_set_invalid
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_valid
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_delconn
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close
</UL>

<P><STRONG><a name="[cf]"></a>do_connected</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[d1]"></a>do_dns_found</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[424]"></a>pcb_new</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, api_msg.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_recv
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_new
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_newconn
</UL>

<P><STRONG><a name="[43f]"></a>alloc_socket</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
</UL>

<P><STRONG><a name="[d7]"></a>event_callback</STRONG> (Thumb, 288 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sockets.o(.text)
</UL>
<P><STRONG><a name="[442]"></a>lwip_selscan</STRONG> (Thumb, 250 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
</UL>

<P><STRONG><a name="[444]"></a>lwip_getaddrname</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockname
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getpeername
</UL>

<P><STRONG><a name="[d8]"></a>lwip_getsockopt_internal</STRONG> (Thumb, 280 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sockets.o(.text)
</UL>
<P><STRONG><a name="[d9]"></a>lwip_setsockopt_internal</STRONG> (Thumb, 268 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sockets.o(.text)
</UL>
<P><STRONG><a name="[443]"></a>tryget_socket</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
</UL>

<P><STRONG><a name="[451]"></a>dhcp_option_trailer</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_inform
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_release
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_renew
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_reboot
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_rebind
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_select
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_discover
</UL>

<P><STRONG><a name="[450]"></a>dhcp_option_short</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_inform
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_renew
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_reboot
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_rebind
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_select
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_discover
</UL>

<P><STRONG><a name="[44a]"></a>dhcp_create_msg</STRONG> (Thumb, 312 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_byte
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via BLX)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_inform
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_release
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_renew
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_reboot
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_rebind
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_select
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_discover
</UL>

<P><STRONG><a name="[44e]"></a>dhcp_discover</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_set_state
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_byte
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_delete_msg
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_create_msg
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_short
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_trailer
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_network_changed
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_start
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_timeout
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_recv
</UL>

<P><STRONG><a name="[456]"></a>dhcp_option_long</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_reboot
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_select
</UL>

<P><STRONG><a name="[455]"></a>dhcp_select</STRONG> (Thumb, 226 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_set_state
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_byte
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_delete_msg
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_long
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_create_msg
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_short
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_trailer
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_timeout
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_recv
</UL>

<P><STRONG><a name="[458]"></a>dhcp_rebind</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_set_state
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_delete_msg
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_create_msg
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_short
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_trailer
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_coarse_tmr
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_timeout
</UL>

<P><STRONG><a name="[45a]"></a>dhcp_reboot</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_set_state
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_delete_msg
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_long
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_create_msg
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_short
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_option_trailer
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_network_changed
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_timeout
</UL>

<P><STRONG><a name="[461]"></a>dhcp_handle_ack</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_setserver
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_recv
</UL>

<P><STRONG><a name="[466]"></a>dhcp_bind</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_up
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_netmask
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_gw
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_set_state
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_recv
</UL>

<P><STRONG><a name="[467]"></a>dhcp_parse_reply</STRONG> (Thumb, 514 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_recv
</UL>

<P><STRONG><a name="[da]"></a>dhcp_recv</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_netmask
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_gw
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_down
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_set_state
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_parse_reply
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_bind
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_handle_ack
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_select
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_discover
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dhcp.o(.text)
</UL>
<P><STRONG><a name="[454]"></a>dhcp_delete_msg</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_inform
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_release
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_renew
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_reboot
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_rebind
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_select
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_discover
</UL>

<P><STRONG><a name="[44d]"></a>dhcp_option_byte</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_select
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_discover
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_create_msg
</UL>

<P><STRONG><a name="[44c]"></a>dhcp_option</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_inform
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_renew
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_reboot
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_rebind
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_select
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_discover
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_create_msg
</UL>

<P><STRONG><a name="[44f]"></a>dhcp_set_state</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_inform
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_stop
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_release
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_renew
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_recv
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_bind
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_reboot
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_rebind
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_select
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_discover
</UL>

<P><STRONG><a name="[460]"></a>dhcp_timeout</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, dhcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_release
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_renew
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_reboot
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_rebind
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_select
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_discover
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_fine_tmr
</UL>

<P><STRONG><a name="[db]"></a>dns_recv</STRONG> (Thumb, 360 bytes, Stack size 0 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_parse_name
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dns.o(.text)
</UL>
<P><STRONG><a name="[46c]"></a>dns_send</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_connect
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_check_entry
</UL>

<P><STRONG><a name="[46d]"></a>dns_check_entry</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_tmr
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_enqueue
</UL>

<P><STRONG><a name="[46a]"></a>dns_parse_name</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_parse_name
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_parse_name
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_recv
</UL>

<P><STRONG><a name="[46f]"></a>dns_enqueue</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, dns.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_check_entry
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_gethostbyname
</UL>

<P><STRONG><a name="[490]"></a>tcp_close_shutdown</STRONG> (Thumb, 296 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_shutdown
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
</UL>

<P><STRONG><a name="[499]"></a>tcp_new_port</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
</UL>

<P><STRONG><a name="[dc]"></a>tcp_accept_null</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tcp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tcp.o(.text)
</UL>
<P><STRONG><a name="[49e]"></a>tcp_receive</STRONG> (Thumb, 1180 bytes, Stack size 0 bytes, tcp_in.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_fast
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_update_rcv_ann_wnd
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via BLX)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
</UL>

<P><STRONG><a name="[4a2]"></a>tcp_parseopt</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, tcp_in.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
</UL>

<P><STRONG><a name="[4a3]"></a>tcp_process</STRONG> (Thumb, 840 bytes, Stack size 0 bytes, tcp_in.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[4a5]"></a>tcp_listen_input</STRONG> (Thumb, 282 bytes, Stack size 0 bytes, tcp_in.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[4a9]"></a>tcp_timewait_input</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, tcp_in.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[4aa]"></a>tcp_output_alloc_header</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
</UL>

<P><STRONG><a name="[4ab]"></a>tcp_create_segment</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[4ac]"></a>tcp_pbuf_prealloc</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[4af]"></a>tcp_output_segment</STRONG> (Thumb, 228 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via BLX)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[4ad]"></a>tcp_write_checks</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, tcp_out.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[de]"></a>tcpip_tcp_timer</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, timers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text)
</UL>
<P><STRONG><a name="[df]"></a>ip_reass_timer</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, timers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_tmr
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text)
</UL>
<P><STRONG><a name="[e0]"></a>arp_timer</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_tmr
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text)
</UL>
<P><STRONG><a name="[e1]"></a>dhcp_timer_coarse</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_coarse_tmr
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text)
</UL>
<P><STRONG><a name="[e2]"></a>dhcp_timer_fine</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, timers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_fine_tmr
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text)
</UL>
<P><STRONG><a name="[e3]"></a>dns_timer</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, timers.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_tmr
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text)
</UL>
<P><STRONG><a name="[4b7]"></a>icmp_send_response</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, icmp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_time_exceeded
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
</UL>

<P><STRONG><a name="[4b9]"></a>lwip_standard_chksum</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, inet_chksum.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo_partial
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pbuf
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
</UL>

<P><STRONG><a name="[4c2]"></a>ip_reass_free_complete_datagram</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, ip_frag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_time_exceeded
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_tmr
</UL>

<P><STRONG><a name="[4c4]"></a>ip_reass_remove_oldest_datagram</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, ip_frag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[4c5]"></a>ip_reass_chain_frag_into_datagram_and_validate</STRONG> (Thumb, 364 bytes, Stack size 0 bytes, ip_frag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4 (via BLX)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[e4]"></a>ipfrag_free_pbuf_custom</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ip_frag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ip_frag.o(.text)
</UL>
<P><STRONG><a name="[4c3]"></a>ip_reass_dequeue_datagram</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ip_frag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[4c6]"></a>ip_reass_enqueue_new_datagram</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, ip_frag.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[4c7]"></a>etharp_free_entry</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, etharp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_tmr
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_cleanup_netif
</UL>

<P><STRONG><a name="[4c8]"></a>etharp_find_entry</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, etharp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_addr
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
</UL>

<P><STRONG><a name="[4c9]"></a>etharp_send_ip</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, etharp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
</UL>

<P><STRONG><a name="[4cc]"></a>etharp_arp_input</STRONG> (Thumb, 296 bytes, Stack size 0 bytes, etharp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
</UL>

<P><STRONG><a name="[4cd]"></a>etharp_raw</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, etharp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
</UL>

<P><STRONG><a name="[4ce]"></a>etharp_output_to_arp_index</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, etharp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
</UL>

<P><STRONG><a name="[e6]"></a>low_level_output</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, ethernetif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_buffer_release
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_buffer_acquire
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernetif.o(.text)
</UL>
<P><STRONG><a name="[4d3]"></a>low_level_input</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, ethernetif.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
</UL>

<P><STRONG><a name="[eb]"></a>netif_status_changed</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_oneshot_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernet.o(.text)
</UL>
<P><STRONG><a name="[ec]"></a>wifi_status_changed</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ethernet.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ethernet.o(.text)
</UL>
<P><STRONG><a name="[4e6]"></a>tls_os_queue_send</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
</UL>

<P><STRONG><a name="[7d]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, start.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> start.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, start.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> start.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, start.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> start.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, start.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> start.o(RESET)
</UL>
<P><STRONG><a name="[4e9]"></a>tls_os_queue_send</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, tls_sys.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_auto_mode_run
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_net_status_changed
</UL>

<P><STRONG><a name="[f2]"></a>sys_net_status_changed</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_sys.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_sys.o(.text)
</UL>
<P><STRONG><a name="[4eb]"></a>sys_net_up</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, tls_sys.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_set_addr
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dhcp_stop
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dhcp_start
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dnss_start
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_dhcps_start
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_set_up
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_dns_setserver
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_task
</UL>

<P><STRONG><a name="[4ef]"></a>_cal_crc32</STRONG> (Thumb, 1036 bytes, Stack size 0 bytes, utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc32
</UL>

<P><STRONG><a name="[4f7]"></a>tls_os_sem_release</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_request_complete
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_async
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
</UL>

<P><STRONG><a name="[f4]"></a>fwup_scheduler</STRONG> (Thumb, 964 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_fast_write_destroy
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_set_oneshot_flag
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_auto_connect_flag
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_reset
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_read
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_32
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_crc8
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_fast_write
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_fwup.o(.text)
</UL>
<P><STRONG><a name="[4fe]"></a>tls_fwup_request_async</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_sync
</UL>

<P><STRONG><a name="[4f8]"></a>dl_list_empty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_async
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
</UL>

<P><STRONG><a name="[4ff]"></a>tls_os_sem_create</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_init
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_sync
</UL>

<P><STRONG><a name="[4fc]"></a>tls_os_sem_acquire</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_sync
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fwup_request_async
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
</UL>

<P><STRONG><a name="[4fa]"></a>swap_32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wm_fwup.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fwup_scheduler
</UL>

<P><STRONG><a name="[502]"></a>tls_os_queue_send</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, user_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScanTimerProc
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserUartRxCallback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserWlanStatusChangedEvent
</UL>

<P><STRONG><a name="[503]"></a>uart_proc_data</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, user_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_UartRecv
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserTaskProc
</UL>

<P><STRONG><a name="[f6]"></a>UserWlanStatusChangedEvent</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, user_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_main.o(.text)
</UL>
<P><STRONG><a name="[f5]"></a>UserUartRxCallback</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, user_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_main.o(.text)
</UL>
<P><STRONG><a name="[f8]"></a>UserTaskProc</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, user_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_user_uart_set_baud_rate
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_user_uart_rx_register
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_uart_cfg_user_mode
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_add_status_event
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_netif_get_ethif
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_WakeUp
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_Sleep
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HF_BcInit
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AC_SendRestMsg
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_proc_data
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_main.o(.text)
</UL>
<P><STRONG><a name="[f7]"></a>KeyScanTimerProc</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, user_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_cfg
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_gpio_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_main.o(.text)
</UL>
<P><STRONG><a name="[50a]"></a>CreateUserTask</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, user_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateExt
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserDeviceInit
</UL>

<P><STRONG><a name="[580]"></a>mpi_sub_hlp</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_montmul
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_abs
</UL>

<P><STRONG><a name="[586]"></a>mpi_mul_hlp</STRONG> (Thumb, 3048 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_montmul
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mul_mpi
</UL>

<P><STRONG><a name="[58d]"></a>mpi_montmul</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_mul_hlp
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_sub_hlp
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_cmp_abs
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_montred
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
</UL>

<P><STRONG><a name="[58f]"></a>mpi_montred</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, bignum.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_montmul
</UL>
<BR>[Called By]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpi_exp_mod
</UL>

<P><STRONG><a name="[10c]"></a>_DhcpTickHandle</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, dhcp_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dhcp_server.o(.text)
</UL>
<P><STRONG><a name="[5ad]"></a>_ClientTableLookup</STRONG> (Thumb, 406 bytes, Stack size 0 bytes, dhcp_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_RecvCb
</UL>

<P><STRONG><a name="[5ae]"></a>_DHCPAckGenAndSend</STRONG> (Thumb, 344 bytes, Stack size 0 bytes, dhcp_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_netif
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_take
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DhcpClientSMEHandle
</UL>

<P><STRONG><a name="[5af]"></a>_DHCPOfferGenAndSend</STRONG> (Thumb, 366 bytes, Stack size 0 bytes, dhcp_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_netif
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_take
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DhcpClientSMEHandle
</UL>

<P><STRONG><a name="[5b0]"></a>_CleanClientHistory</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, dhcp_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DhcpClientSMEHandle
</UL>

<P><STRONG><a name="[5b1]"></a>_ParseDhcpOptions</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, dhcp_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_RecvCb
</UL>

<P><STRONG><a name="[5b3]"></a>_DHCPNakGenAndSend</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, dhcp_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_take
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_RecvCb
</UL>

<P><STRONG><a name="[5b2]"></a>_DhcpClientSMEHandle</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, dhcp_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CleanClientHistory
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPOfferGenAndSend
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DHCPAckGenAndSend
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHCPS_RecvCb
</UL>

<P><STRONG><a name="[5b5]"></a>_DNSAnswerGenAndSend</STRONG> (Thumb, 288 bytes, Stack size 0 bytes, dns_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_take
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_RecvCb
</UL>

<P><STRONG><a name="[5b6]"></a>_DNSNameErrGenAndSend</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, dns_server.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_take
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DNSS_RecvCb
</UL>

<P><STRONG><a name="[5b8]"></a>tls_os_task_create</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
</UL>

<P><STRONG><a name="[5b9]"></a>tls_os_queue_send</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_auth_timer
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_timeout
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_beacon_done
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_ps_pkt_timer_expire
</UL>

<P><STRONG><a name="[5ba]"></a>tls_os_timer_create</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init
</UL>

<P><STRONG><a name="[5bb]"></a>tls_os_timer_start</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_net_up
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
</UL>

<P><STRONG><a name="[5bc]"></a>tls_os_timer_change</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_connect_timeout
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_auth_timeout
</UL>

<P><STRONG><a name="[5bd]"></a>tls_os_timer_stop</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_connect_timeout
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_auth_timeout
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_auth_timeout
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_event_net_down
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_connect_timeout
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_clear_connection
</UL>

<P><STRONG><a name="[5c8]"></a>wpa_supplicant_clear_connection</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_mark_disassoc
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_config
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_clear_keys
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deauthenticate
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
</UL>

<P><STRONG><a name="[113]"></a>supplicant_ps_pkt_timer_expire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.text)
</UL>
<P><STRONG><a name="[74]"></a>supplicant_event_beacon_done</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_tim_ie
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_queue_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.data)
</UL>
<P><STRONG><a name="[77]"></a>supplicant_event_sta_active</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.data)
</UL>
<P><STRONG><a name="[76]"></a>supplicant_event_rx_pspoll</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.data)
</UL>
<P><STRONG><a name="[75]"></a>supplicant_event_rx_ps</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant.o(.data)
</UL>
<P><STRONG><a name="[5fe]"></a>supplicant_connect_network</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_init_wpa
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_own_addr
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_reload_configs
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_delete_connection
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_connect_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[602]"></a>supplicant_create_softap</STRONG> (Thumb, 432 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_create_ap
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ap_deinit
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_channel_to_frequency
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[604]"></a>tls_supplicant_event_handle</STRONG> (Thumb, 510 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_scan
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_disassoc
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_disconnect
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;michael_mic_failure
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_1x_receive
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_rx_from_unknown
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_ps_rx
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_proc_beacon_done
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_mgmt_rx
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_ctrl_sta_active
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_ctrl_rx_pspoll
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_check_ps_pkt
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cleanup
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_rx_eapol
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_timeout
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_handle_timeout
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_del
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_create_softap
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_connect_network
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_task
</UL>

<P><STRONG><a name="[5f7]"></a>dl_list_add_tail</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_send_event
</UL>

<P><STRONG><a name="[605]"></a>dl_list_del</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_remove_timeout
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[5c0]"></a>dl_list_empty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_handle_timeout
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_supplicant_event_handle
</UL>

<P><STRONG><a name="[5cc]"></a>is_zero_ether_addr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_deauthenticate
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_timeout
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_disassociate
</UL>

<P><STRONG><a name="[5bf]"></a>eloop_remove_timeout</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wpa_supplicant.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_del
</UL>
<BR>[Called By]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_handle_timeout
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
</UL>

<P><STRONG><a name="[617]"></a>tls_os_task_create</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
</UL>

<P><STRONG><a name="[618]"></a>tls_os_sem_release</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_isr
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_mgmt_tx_isr
</UL>

<P><STRONG><a name="[619]"></a>tls_os_timer_create</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
</UL>

<P><STRONG><a name="[61b]"></a>tls_wl_init_ifdata</STRONG> (Thumb, 290 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_get_rate_table
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
</UL>

<P><STRONG><a name="[61d]"></a>tls_os_sem_create</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tls_wl_core.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_init
</UL>

<P><STRONG><a name="[630]"></a>tls_os_sem_release</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_remove
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_add
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_xmit
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_get_scan_res
</UL>

<P><STRONG><a name="[631]"></a>tls_os_timer_change</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_standby
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sleep
</UL>

<P><STRONG><a name="[632]"></a>tls_os_timer_stop</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_standby
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sleep
</UL>

<P><STRONG><a name="[635]"></a>tls_os_sem_acquire</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_remove
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_add
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_xmit
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_get_scan_res
</UL>

<P><STRONG><a name="[63d]"></a>set_sta_flags</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tls_wl_if.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_sta_add
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_add_key
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_sta_flags
</UL>

<P><STRONG><a name="[675]"></a>tls_os_sem_release</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_buffer_release
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_txmgmt_cmpt_task
</UL>

<P><STRONG><a name="[685]"></a>compare_ether_addr</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
</UL>

<P><STRONG><a name="[683]"></a>tls_wl_set_rates</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_tx_start
</UL>

<P><STRONG><a name="[680]"></a>hed_tx_start</STRONG> (Thumb, 498 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx_encrypt_add_iv
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_is_ht
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_is_ht40_plus
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_is_ht40_minus
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_set_rates
</UL>
<BR>[Called By]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
</UL>

<P><STRONG><a name="[684]"></a>ieee80211_tx</STRONG> (Thumb, 1252 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx_michael_mic_add
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx_rate_ctrl
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_qos_hdr
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_ap_rx_ps
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conf_is_ht
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_qos_ctl
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_is_data_qos
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_tx_start
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_ether_addr
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_wake_up
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_buffer_release
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_tx
</UL>

<P><STRONG><a name="[686]"></a>tls_os_sem_acquire</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_buffer_acquire
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_txmgmt_cmpt_task
</UL>

<P><STRONG><a name="[689]"></a>dl_list_empty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_txmgmt_cmpt_task
</UL>

<P><STRONG><a name="[67e]"></a>ieee80211_has_a4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx_michael_mic_add
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_qos_ctl
</UL>

<P><STRONG><a name="[688]"></a>ieee80211_is_data_qos</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
</UL>

<P><STRONG><a name="[677]"></a>ieee80211_get_qos_ctl</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_has_a4
</UL>
<BR>[Called By]<UL><LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_qos_hdr
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
</UL>

<P><STRONG><a name="[681]"></a>conf_is_ht40_minus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_tx_start
</UL>

<P><STRONG><a name="[682]"></a>conf_is_ht40_plus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_tx_start
</UL>

<P><STRONG><a name="[67c]"></a>conf_is_ht</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx_rate_ctrl
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_tx_start
</UL>

<P><STRONG><a name="[679]"></a>ieee80211_wep_get_iv</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx_encrypt_add_iv
</UL>

<P><STRONG><a name="[687]"></a>ieee80211_ap_rx_ps</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tls_wl_tx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_tx
</UL>

<P><STRONG><a name="[68e]"></a>ieee80211_has_a4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hdrlen
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_bssid
</UL>

<P><STRONG><a name="[68f]"></a>ieee80211_is_ctl</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hdrlen
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_bssid
</UL>

<P><STRONG><a name="[68d]"></a>ieee80211_is_data</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_wl_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hdrlen
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_bssid
</UL>

<P><STRONG><a name="[6a2]"></a>tls_wifi_clear_1shot_info</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, wm_wifi_oneshot_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_decode_new_oneshot_data
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_pbreq_recv
</UL>

<P><STRONG><a name="[6ac]"></a>tls_os_sem_release</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, wm_param.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_init
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_to_flash
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>

<P><STRONG><a name="[6ad]"></a>param_to_flash</STRONG> (Thumb, 690 bytes, Stack size 0 bytes, wm_param.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_crc32
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_write
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_fls_read
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_restore_param_from_backup
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_init
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_to_flash
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_to_default
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
</UL>

<P><STRONG><a name="[6af]"></a>tls_os_sem_acquire</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_param.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_init
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_to_flash
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>

<P><STRONG><a name="[6b1]"></a>hostapd_alloc_ps_pkt</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_ps_rx
</UL>

<P><STRONG><a name="[6bb]"></a>hostapd_config_defaults</STRONG> (Thumb, 322 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_create_ap
</UL>

<P><STRONG><a name="[6bc]"></a>wpa_supplicant_conf_ap</STRONG> (Thumb, 364 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_create_ap
</UL>

<P><STRONG><a name="[6c6]"></a>dl_list_add_tail</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_ps_rx
</UL>

<P><STRONG><a name="[6b3]"></a>dl_list_del</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_clean_ps_multicast
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_send_pkt2sta
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_send_all_pkt2sta
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_proc_beacon_done
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_check_ps_pkt
</UL>

<P><STRONG><a name="[6b4]"></a>dl_list_empty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_send_pkt2sta
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_send_all_pkt2sta
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_proc_beacon_done
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_check_ps_pkt
</UL>

<P><STRONG><a name="[6b5]"></a>hostapd_clear_multicast_ps_bit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_tim_ie
</UL>
<BR>[Called By]<UL><LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_proc_beacon_done
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_check_ps_pkt
</UL>

<P><STRONG><a name="[6c4]"></a>hostapd_send_all_pkt2sta</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_clear_unicast_ps_bit
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_del
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_xmit
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_sta_flags
</UL>
<BR>[Called By]<UL><LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_ctrl_sta_active
</UL>

<P><STRONG><a name="[6c5]"></a>hostapd_send_pkt2sta</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, ap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_clear_unicast_ps_bit
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_empty
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_del
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_xmit
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_if_set_sta_flags
</UL>
<BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_ctrl_rx_pspoll
</UL>

<P><STRONG><a name="[6cf]"></a>wpa_supplicant_event_associnfo</STRONG> (Thumb, 300 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc
</UL>

<P><STRONG><a name="[6d3]"></a>wpa_config_validate_network_test</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_config_update_psk
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
</UL>

<P><STRONG><a name="[6d5]"></a>wpa_supplicant_update_cfg</STRONG> (Thumb, 784 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_sys_clk_set
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_to_flash
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_get_vendor_ie
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_get_ie
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_wpa
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_wep
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_key_open
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_config_validate_network_test
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cipher2host
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_res_match
</UL>

<P><STRONG><a name="[6d9]"></a>wpa_supplicant_ssid_bss_match</STRONG> (Thumb, 254 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_get_vendor_ie
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_get_ie
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_key_mgmt_wpa
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie
</UL>
<BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_res_match
</UL>

<P><STRONG><a name="[6db]"></a>wpa_scan_res_match</STRONG> (Thumb, 294 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_get_vendor_ie
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_get_ie
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_key_mgmt_wpa
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ssid_bss_match
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
</UL>

<P><STRONG><a name="[6dc]"></a>wpa_supplicant_select_bss</STRONG> (Thumb, 200 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_get_res
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_res_match
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_add
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_bss_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_scan_results
</UL>

<P><STRONG><a name="[6da]"></a>wpa_key_mgmt_wpa</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_scan_res_match
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_ssid_bss_match
</UL>

<P><STRONG><a name="[6d8]"></a>wpa_supplicant_update_key_open</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_set
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_update_cfg
</UL>

<P><STRONG><a name="[6dd]"></a>wpa_scan_get_res</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, events.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_select_bss
</UL>

<P><STRONG><a name="[6ed]"></a>handle_auth</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sm_event
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_authenticate_indication
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_add
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_auth_reply
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_mgmt
</UL>

<P><STRONG><a name="[6f0]"></a>check_assoc_ies</STRONG> (Thumb, 296 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_validate_wpa_ie
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sta_no_wpa
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sta_init
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_parse_elems
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_wmm_valid
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_print_ssid
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_supp_rates
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc
</UL>

<P><STRONG><a name="[6f5]"></a>send_assoc_resp</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_wmm
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_send_mlme
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_own_capab_info
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_ext_supp_rates
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_eid_supp_rates
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc
</UL>

<P><STRONG><a name="[6f9]"></a>handle_assoc</STRONG> (Thumb, 520 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_send_mlme
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_notif_assoc
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc_cb
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_get_aid
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_assoc_resp
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_assoc_ies
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_mgmt
</UL>

<P><STRONG><a name="[6ef]"></a>send_auth_reply</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_send_mlme
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_auth
</UL>

<P><STRONG><a name="[6fa]"></a>hostapd_get_aid</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc
</UL>

<P><STRONG><a name="[6f3]"></a>copy_supp_rates</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_assoc_ies
</UL>

<P><STRONG><a name="[6fc]"></a>handle_assoc_cb</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, ieee802_11.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_reassociate_indication
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_associate_indication
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_set_sta_flags
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_remove
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_add
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_disconnect
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_assoc
</UL>

<P><STRONG><a name="[707]"></a>tls_os_timer_stop</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_req_scan
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_cancel_scan
</UL>

<P><STRONG><a name="[70b]"></a>pbkdf2_sha1_f</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, sha1-pbkdf2.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha1_vector
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha1
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbkdf2_sha1
</UL>

<P><STRONG><a name="[123]"></a>ap_sta_disassoc_cb_timeout</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hostapd_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_remove
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mlme_disassociate_indication
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hostapd_sta_info.o(.text)
</UL>
<P><STRONG><a name="[70e]"></a>ap_sta_remove</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, hostapd_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_disassoc_cb_timeout
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_disconnect
</UL>

<P><STRONG><a name="[124]"></a>ieee80211_tkip_countermeasures_stop</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tkip_countermeasures.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_countermeasures
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tkip_countermeasures.o(.text)
</UL>
<P><STRONG><a name="[717]"></a>ieee80211_tkip_countermeasures_start</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, tkip_countermeasures.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gtk_rekey
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_countermeasures_start
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_countermeasures
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_remove
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_deauth
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_set_authorized
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;michael_mic_failure
</UL>

<P><STRONG><a name="[722]"></a>wpa_supplicant_process_1_of_4</STRONG> (Thumb, 268 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_ies
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_deauthenticate
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_pmk_to_ptk
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_get_bytes
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_4
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
</UL>

<P><STRONG><a name="[727]"></a>wpa_supplicant_key_neg_complete</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_cancel_auth_timeout
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
</UL>

<P><STRONG><a name="[125]"></a>wpa_sm_rekey_ptk</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_key_request
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa.o(.text)
</UL>
<P><STRONG><a name="[733]"></a>wpa_supplicant_check_group_cipher</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_rsn
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_wpa
</UL>

<P><STRONG><a name="[729]"></a>wpa_supplicant_install_gtk</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_key
</UL>
<BR>[Called By]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
</UL>

<P><STRONG><a name="[72b]"></a>wpa_supplicant_validate_ie</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_compare_rsn_ie
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_report_ie_mismatch
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
</UL>

<P><STRONG><a name="[72f]"></a>wpa_supplicant_process_3_of_4</STRONG> (Thumb, 236 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_ies
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_deauthenticate
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_4_of_4
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_ptk
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_validate_ie
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
</UL>

<P><STRONG><a name="[732]"></a>wpa_supplicant_process_1_of_2_wpa</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc4_skip
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_unwrap
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_gtk_tx_bit_workaround
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_check_group_cipher
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
</UL>

<P><STRONG><a name="[737]"></a>wpa_supplicant_process_1_of_2</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_get_state
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_deauthenticate
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_cancel_auth_timeout
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_2
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_rsn
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_wpa
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_gtk
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_key_neg_complete
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_set_state
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
</UL>

<P><STRONG><a name="[71b]"></a>is_zero_ether_addr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
</UL>

<P><STRONG><a name="[73b]"></a>wpa_supplicant_verify_eapol_key_mic</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_mic
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
</UL>

<P><STRONG><a name="[730]"></a>wpa_supplicant_install_ptk</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_key
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
</UL>

<P><STRONG><a name="[736]"></a>wpa_supplicant_gtk_tx_bit_workaround</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_rsn
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_pairwise_gtk
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2_wpa
</UL>

<P><STRONG><a name="[731]"></a>wpa_supplicant_pairwise_gtk</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_gtk_tx_bit_workaround
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_gtk
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_check_group_cipher
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_key_neg_complete
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4
</UL>

<P><STRONG><a name="[72d]"></a>wpa_report_ie_mismatch</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_disassociate
</UL>
<BR>[Called By]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_validate_ie
</UL>

<P><STRONG><a name="[739]"></a>wpa_supplicant_process_1_of_2_rsn</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_ies
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_gtk_tx_bit_workaround
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_check_group_cipher
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
</UL>

<P><STRONG><a name="[73a]"></a>wpa_supplicant_send_2_of_2</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_alloc_eapol
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_2
</UL>

<P><STRONG><a name="[73c]"></a>wpa_supplicant_decrypt_key_data</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, wpa.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc4_skip
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_unwrap
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol
</UL>

<P><STRONG><a name="[749]"></a>is_broadcast_ether_addr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_remove_key
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_set_key
</UL>

<P><STRONG><a name="[747]"></a>cipher2drv</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wpa_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_associate
</UL>

<P><STRONG><a name="[74d]"></a>wpa_gen_wpa_ie_wpa</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, wpa_ie.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gen_wpa_ie
</UL>

<P><STRONG><a name="[74e]"></a>wpa_gen_wpa_ie_rsn</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, wpa_ie.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gen_wpa_ie
</UL>

<P><STRONG><a name="[74f]"></a>wpa_parse_generic</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, wpa_ie.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_ies
</UL>

<P><STRONG><a name="[754]"></a>wpabuf_head</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wpabuf.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_zeropad
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_dup
</UL>

<P><STRONG><a name="[755]"></a>wpabuf_put_data</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wpabuf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_put
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_zeropad
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_dup
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpabuf_alloc_copy
</UL>

<P><STRONG><a name="[757]"></a>tls_os_sem_release</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, tls_wl_bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_match_bss
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_get
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_add
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_timeout
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_flush_by_age
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_del
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_flush
</UL>

<P><STRONG><a name="[126]"></a>bss_release</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tls_wl_bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_bss.o(.text)
</UL>
<P><STRONG><a name="[75a]"></a>tls_os_sem_acquire</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_bss.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_match_bss
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_get
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_add
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_flush_by_age
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_del
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_flush
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_bss_mgmt_task
</UL>

<P><STRONG><a name="[761]"></a>tls_os_sem_release</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_config
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_bss_info_changed
</UL>

<P><STRONG><a name="[76a]"></a>hed_get_key_table_idx</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_multicast_key
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_ccmp_key
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_wep_key
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_tkip_key
</UL>

<P><STRONG><a name="[767]"></a>hed_sec_set_bd_key_tbl</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_32
</UL>
<BR>[Called By]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_ccmp_key
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_wep_key
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_tkip_key
</UL>

<P><STRONG><a name="[773]"></a>hed_sec_set_key_info</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_ccmp_key
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_wep_key
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_tkip_key
</UL>

<P><STRONG><a name="[778]"></a>hed_sec_clr_key_info</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_del_key
</UL>

<P><STRONG><a name="[774]"></a>hed_sec_set_ctrl_reg</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_ccmp_key
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_wep_key
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_tkip_key
</UL>

<P><STRONG><a name="[771]"></a>hed_hw_set_tkip_key</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_mac_addr
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_uni_key_tbl
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_ctrl_reg
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_key_info
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_bd_key_tbl
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_get_key_table_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_set_key
</UL>

<P><STRONG><a name="[775]"></a>hed_hw_set_wep_key</STRONG> (Thumb, 308 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_mac_addr
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_ctrl_reg
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_key_info
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_bd_key_tbl
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_get_key_table_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_set_key
</UL>

<P><STRONG><a name="[765]"></a>tls_os_sem_acquire</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_config
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_bss_info_changed
</UL>

<P><STRONG><a name="[768]"></a>swap_32</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_uni_key_tbl
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_bd_key_tbl
</UL>

<P><STRONG><a name="[772]"></a>hed_sec_set_uni_key_tbl</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_32
</UL>
<BR>[Called By]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_ccmp_key
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_hw_set_tkip_key
</UL>

<P><STRONG><a name="[776]"></a>hed_hw_set_ccmp_key</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, tls_wl_hw.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_mac_addr
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_uni_key_tbl
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_ctrl_reg
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_key_info
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_sec_set_bd_key_tbl
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hed_get_key_table_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_set_key
</UL>

<P><STRONG><a name="[779]"></a>tls_os_sem_release</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, tls_wl_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_free_keys
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_free
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_link
</UL>

<P><STRONG><a name="[77e]"></a>__ieee80211_key_replace</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, tls_wl_key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_link
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_key_free
</UL>

<P><STRONG><a name="[77d]"></a>tls_os_sem_acquire</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_free_keys
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_free
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_link
</UL>

<P><STRONG><a name="[77f]"></a>__ieee80211_key_destroy</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tls_wl_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_del_key
</UL>
<BR>[Called By]<UL><LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_link
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_key_free
</UL>

<P><STRONG><a name="[781]"></a>__ieee80211_key_free</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, tls_wl_key.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_key_destroy
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee80211_key_replace
</UL>
<BR>[Called By]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_free_keys
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_key_free
</UL>

<P><STRONG><a name="[783]"></a>tls_wl_set_mac_txbd</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, tls_wl_mgmt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_set_tx_rate_and_power
</UL>
<BR>[Called By]<UL><LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_pspoll
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_nullfunc
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_rsp
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_assoc
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_auth
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_req
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_mgmt
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_deauth_disassoc
</UL>

<P><STRONG><a name="[784]"></a>tls_wl_enable_tx_mgmt_frm</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, tls_wl_mgmt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_wake_up
</UL>
<BR>[Called By]<UL><LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_pspoll
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_nullfunc
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_rsp
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_assoc
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_auth
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_mgmt
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_deauth_disassoc
</UL>

<P><STRONG><a name="[785]"></a>dl_list_add_tail</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tls_wl_mgmt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_enable_tx_mgmt_frm
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_req
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_deauth_disassoc
</UL>

<P><STRONG><a name="[78c]"></a>tls_os_sem_release</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_timer
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_mgmt
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_authenticate
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associate
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_associated
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_req_auth
</UL>

<P><STRONG><a name="[78d]"></a>tls_os_timer_change</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_notify
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_deauth
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_authenticate
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_queued_mgmt
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associate
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associated
</UL>

<P><STRONG><a name="[79a]"></a>ieee80211_sta_wmm_params</STRONG> (Thumb, 640 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_beacon
</UL>

<P><STRONG><a name="[78f]"></a>ieee80211_sta_send_apinfo</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_authenticate
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associate
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_disassoc
</UL>

<P><STRONG><a name="[792]"></a>ieee80211_handle_bss_capability</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_beacon
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_associated
</UL>

<P><STRONG><a name="[791]"></a>ieee80211_set_associated</STRONG> (Thumb, 412 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sta_flags
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_acquire
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_handle_bss_capability
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_get
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_put
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_set_key
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_change_notify
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hw_config
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
</UL>

<P><STRONG><a name="[795]"></a>ieee80211_associated</STRONG> (Thumb, 252 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sta_flags
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_nullfunc
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_probe_req
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_disassoc
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_mlme_task
</UL>

<P><STRONG><a name="[796]"></a>ieee80211_associate</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_send_apinfo
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_assoc
</UL>
<BR>[Called By]<UL><LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_auth_completed
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_mlme_task
</UL>

<P><STRONG><a name="[798]"></a>ieee80211_rx_bss_info</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_channel
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_channel_to_frequency
</UL>
<BR>[Called By]<UL><LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_probe_resp
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_beacon
</UL>

<P><STRONG><a name="[799]"></a>ieee80211_rx_mgmt_beacon</STRONG> (Thumb, 424 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_parse_elems
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_bss_info
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_handle_bss_capability
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_wmm_params
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_pspoll
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_nullfunc
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_channel
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_power_save
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_change_notify
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_channel_to_frequency
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_queued_mgmt
</UL>

<P><STRONG><a name="[79b]"></a>ieee80211_rx_mgmt_auth</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_parse_elems
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_auth_completed
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_auth
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_queued_mgmt
</UL>

<P><STRONG><a name="[7a6]"></a>ieee80211_send_addba_resp</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dl_list_add_tail
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_set_tx_rate_and_power
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_get_mgmt_txbuf
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_hw_wake_up
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_process_addba_request
</UL>

<P><STRONG><a name="[7aa]"></a>ieee80211_rx_mgmt_assoc_resp</STRONG> (Thumb, 648 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_parse_elems
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_enable_ht
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_ht_cap_ie_to_sta_ht_cap
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sta_flags
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associated
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_associated
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_wmm_params
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add_apsta
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rate_control_init
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_queued_mgmt
</UL>

<P><STRONG><a name="[7ac]"></a>ieee80211_sta_rx_queued_mgmt</STRONG> (Thumb, 298 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_free_rxbuf
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_action
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_deauth
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_probe_resp
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_auth
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_beacon
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_disassoc
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_mlme_task
</UL>

<P><STRONG><a name="[793]"></a>tls_os_sem_acquire</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_associated
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_mlme_task
</UL>

<P><STRONG><a name="[7b2]"></a>set_bit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_timer
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_config_auth
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_req_auth
</UL>

<P><STRONG><a name="[7b7]"></a>test_and_clear_bit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_mlme_task
</UL>

<P><STRONG><a name="[79f]"></a>dl_list_add_tail</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_mgmt
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_delba
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_addba_resp
</UL>

<P><STRONG><a name="[7b6]"></a>dl_list_empty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_mlme_task
</UL>

<P><STRONG><a name="[794]"></a>get_sta_flags</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associated
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_associated
</UL>

<P><STRONG><a name="[7ab]"></a>set_sta_flags</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_assoc_resp
</UL>

<P><STRONG><a name="[7b8]"></a>ieee80211_authenticate</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_send_apinfo
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_sem_release
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_auth
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_mlme_task
</UL>

<P><STRONG><a name="[79c]"></a>ieee80211_auth_completed</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_associate
</UL>
<BR>[Called By]<UL><LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_auth
</UL>

<P><STRONG><a name="[7ad]"></a>ieee80211_rx_mgmt_probe_resp</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_parse_elems
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_bss_info
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_channel
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_channel_to_frequency
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_queued_mgmt
</UL>

<P><STRONG><a name="[7ae]"></a>ieee80211_rx_mgmt_deauth</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_os_timer_change
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_disassoc
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_queued_mgmt
</UL>

<P><STRONG><a name="[7af]"></a>ieee80211_rx_mgmt_action</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, tls_wl_mlme.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_process_chanswitch
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_process_delba
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_process_addba_request
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_queued_mgmt
</UL>

<P><STRONG><a name="[7bb]"></a>rc_valid_phyrate</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, tls_wl_rc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_setvalid_htrates
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_init
</UL>

<P><STRONG><a name="[7b9]"></a>rc_wl_select_max_rate</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, tls_wl_rc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_init
</UL>

<P><STRONG><a name="[7ba]"></a>rc_init</STRONG> (Thumb, 354 bytes, Stack size 0 bytes, tls_wl_rc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_setvalid_htrates
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_wl_select_max_rate
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_valid_phyrate
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rate_control_init
</UL>

<P><STRONG><a name="[7c0]"></a>rc_get_highest_rix</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, tls_wl_rc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_set_rate
</UL>

<P><STRONG><a name="[7c1]"></a>rc_rate_set_series</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, tls_wl_rc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_set_rate
</UL>

<P><STRONG><a name="[7bf]"></a>rc_set_rate</STRONG> (Thumb, 476 bytes, Stack size 0 bytes, tls_wl_rc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rate_control_send_low
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_rate_set_series
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_get_highest_rix
</UL>
<BR>[Called By]<UL><LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_set_rate
</UL>

<P><STRONG><a name="[7bc]"></a>rc_setvalid_htrates</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, tls_wl_rc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_valid_phyrate
</UL>
<BR>[Called By]<UL><LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rc_init
</UL>

<P><STRONG><a name="[7c8]"></a>compare_ether_addr</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_reassemble_find
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_check_frame
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_h_amsdu
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prepare_for_handlers
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_frame_allowed
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_data_to_8023
</UL>

<P><STRONG><a name="[7c5]"></a>ieee80211_data_to_8023</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_DA
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_SA
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_ether_addr
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hdrlen
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle
</UL>

<P><STRONG><a name="[7c9]"></a>ieee80211_frame_allowed</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sta_flags
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_ether_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_h_amsdu
</UL>

<P><STRONG><a name="[7cb]"></a>prepare_for_handlers</STRONG> (Thumb, 504 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sta_flags
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_is_pspoll
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_is_data
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_is_mgmt
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_ether_addr
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_bssid
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
</UL>

<P><STRONG><a name="[7d0]"></a>ieee80211_rx_michael_mic_verify</STRONG> (Thumb, 452 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_DA
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_SA
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_bssid
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mic_block
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4 (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle
</UL>

<P><STRONG><a name="[7d1]"></a>ieee80211_rx_h_amsdu</STRONG> (Thumb, 650 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_deliver_frame
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_frame_allowed
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_ether_addr
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hdrlen
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_data_handle
</UL>

<P><STRONG><a name="[7d2]"></a>ieee80211_rx_mgmt_handle</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_parse_elems
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_is_beacon
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_mgmt
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_bss_info_update
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_channel
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_channel_to_frequency
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
</UL>

<P><STRONG><a name="[7d4]"></a>ieee80211_rx_data_handle</STRONG> (Thumb, 520 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_deliver_frame
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_h_amsdu
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_michael_mic_verify
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_frame_allowed
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_data_to_8023
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_ether_addr
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_rx_notify
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_pspoll
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_send_nullfunc
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_bssid
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_put
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
</UL>

<P><STRONG><a name="[7d5]"></a>ieee80211_check_frame</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_DA
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_SA
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_ether_addr
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_pbreq_recv
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_hdrlen
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
</UL>

<P><STRONG><a name="[7d7]"></a>atomic_sub_return</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
</UL>

<P><STRONG><a name="[7c2]"></a>dl_list_add_tail</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_free_rxbuf
</UL>

<P><STRONG><a name="[7d6]"></a>dl_list_empty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
</UL>

<P><STRONG><a name="[7d9]"></a>ieee80211_has_a4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_get_SA
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
</UL>

<P><STRONG><a name="[7cc]"></a>ieee80211_is_mgmt</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prepare_for_handlers
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
</UL>

<P><STRONG><a name="[7cd]"></a>ieee80211_is_data</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prepare_for_handlers
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
</UL>

<P><STRONG><a name="[7d3]"></a>ieee80211_is_beacon</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_mgmt_filter
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_mgmt_handle
</UL>

<P><STRONG><a name="[7ce]"></a>ieee80211_is_pspoll</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prepare_for_handlers
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
</UL>

<P><STRONG><a name="[7c7]"></a>ieee80211_get_SA</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_has_a4
</UL>
<BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_check_frame
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_michael_mic_verify
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_data_to_8023
</UL>

<P><STRONG><a name="[7c6]"></a>ieee80211_get_DA</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_check_frame
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_michael_mic_verify
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_data_to_8023
</UL>

<P><STRONG><a name="[7ca]"></a>test_sta_flags</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prepare_for_handlers
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_frame_allowed
</UL>

<P><STRONG><a name="[7c4]"></a>ieee80211_reassemble_find</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, tls_wl_rx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_ether_addr
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_free_rxbuf
</UL>
<BR>[Called By]<UL><LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_rx_defragment
</UL>

<P><STRONG><a name="[7d8]"></a>ieee80211_mgmt_filter</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, tls_wl_rx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_is_beacon
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wifi_get_listen_mode
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_rx_task
</UL>

<P><STRONG><a name="[7db]"></a>tls_os_sem_release</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, tls_wl_scan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_scan_completed
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_start_scan
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_wl_scan_task
</UL>

<P><STRONG><a name="[7de]"></a>tls_os_sem_release</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, tls_wl_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tls_get_isr_count
</UL>
<BR>[Called By]<UL><LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_expire
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_flush
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add_apsta
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
</UL>

<P><STRONG><a name="[12a]"></a>sta_info_release</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tls_wl_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tls_wl_sta_info.o(.text)
</UL>
<P><STRONG><a name="[7df]"></a>tls_os_sem_acquire</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tls_wl_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee80211_sta_expire
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_flush
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add_apsta
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_get
</UL>

<P><STRONG><a name="[7e0]"></a>sta_info_hash_add</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tls_wl_sta_info.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_add_apsta
</UL>

<P><STRONG><a name="[7e2]"></a>sta_info_hash_del</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, tls_wl_sta_info.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sta_info_free
</UL>

<P><STRONG><a name="[7eb]"></a>ieee802_11_erp_info</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, beacon.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon
</UL>

<P><STRONG><a name="[7e8]"></a>hostapd_eid_wpa</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, beacon.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_get_wpa_ie
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req
</UL>

<P><STRONG><a name="[7ea]"></a>hostapd_eid_ds_params</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, beacon.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_probe_req
</UL>

<P><STRONG><a name="[7f2]"></a>swap_32</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_get_ntp_timestamp
</UL>

<P><STRONG><a name="[7ef]"></a>hex2num</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, common.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2byte
</UL>

<P><STRONG><a name="[7fc]"></a>hostapd_flush_old_stations</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, hostapd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_flush
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_free_stas
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_sta_deauth
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_bss
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_interface_deinit
</UL>

<P><STRONG><a name="[7fa]"></a>hostapd_setup_bss</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, hostapd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_init_keys
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_wpa
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_wpa_psk
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_encryption
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_flush_old_stations
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_drv_remove_key
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_11_set_beacon
</UL>
<BR>[Called By]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_interface
</UL>

<P><STRONG><a name="[800]"></a>hostapd_setup_encryption</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, hostapd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_set_privacy
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_key
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_authmode
</UL>
<BR>[Called By]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_setup_bss
</UL>

<P><STRONG><a name="[806]"></a>ieee802_11_parse_vendor_specific</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, ieee802_11_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_parse_elems
</UL>

<P><STRONG><a name="[80a]"></a>random_mix_pool</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, random.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_add_randomness
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_extract
</UL>

<P><STRONG><a name="[809]"></a>random_extract</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, random.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha1
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_mix_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_get_bytes
</UL>

<P><STRONG><a name="[810]"></a>wpa_auth_set_eapol</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ieee802_1x_set_sta_authorized
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_get_sta
</UL>
<BR>[Called By]<UL><LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__wpa_send_eapol
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_Step
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_INITIALIZE_Enter
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKINITDONE_Enter
</UL>

<P><STRONG><a name="[811]"></a>wpa_auth_set_key</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_key
</UL>
<BR>[Called By]<UL><LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_remove_ptk
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_config_group_keys
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKINITDONE_Enter
</UL>

<P><STRONG><a name="[12b]"></a>wpa_rekey_gmk</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_get_bytes
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_auth.o(.text)
</UL>
<P><STRONG><a name="[812]"></a>wpa_free_sta_sm</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sta_deinit
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_step
</UL>

<P><STRONG><a name="[81d]"></a>sm_WPA_PTK_GROUP_IDLE_Enter</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_GROUP_Step
</UL>

<P><STRONG><a name="[12c]"></a>wpa_send_eapol_timeout</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_step
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_auth.o(.text)
</UL>
<P><STRONG><a name="[818]"></a>wpa_send_eapol</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__wpa_send_eapol
</UL>
<BR>[Called By]<UL><LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKSTART_Enter
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKINITNEGOTIATING_Enter
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_GROUP_REKEYNEGOTIATING_Enter
</UL>

<P><STRONG><a name="[819]"></a>sm_WPA_PTK_GROUP_REKEYNEGOTIATING_Enter</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_add_kde
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_get_seqnum
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_send_eapol
</UL>
<BR>[Called By]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_GROUP_Step
</UL>

<P><STRONG><a name="[81c]"></a>sm_WPA_PTK_GROUP_Step</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_GROUP_REKEYNEGOTIATING_Enter
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_GROUP_IDLE_Enter
</UL>
<BR>[Called By]<UL><LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_step
</UL>

<P><STRONG><a name="[81e]"></a>sm_WPA_PTK_PTKINITNEGOTIATING_Enter</STRONG> (Thumb, 298 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_debug
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_alloc_debug
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_add_kde
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_get_seqnum
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_send_eapol
</UL>
<BR>[Called By]<UL><LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_Step
</UL>

<P><STRONG><a name="[81f]"></a>sm_WPA_PTK_DISCONNECT_Enter</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sta_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_Step
</UL>

<P><STRONG><a name="[12d]"></a>wpa_rekey_ptk</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_request_new_ptk
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_step
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_auth.o(.text)
</UL>
<P><STRONG><a name="[822]"></a>sm_WPA_PTK_PTKINITDONE_Enter</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sta_disconnect
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_set_key
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_set_eapol
</UL>
<BR>[Called By]<UL><LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_Step
</UL>

<P><STRONG><a name="[823]"></a>sm_WPA_PTK_PTKSTART_Enter</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rsn_pmkid
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_key_mgmt_sha256
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_send_eapol
</UL>
<BR>[Called By]<UL><LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_Step
</UL>

<P><STRONG><a name="[826]"></a>wpa_verify_key_mic</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_mic
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKCALCNEGOTIATING_Enter
</UL>

<P><STRONG><a name="[827]"></a>sm_WPA_PTK_PTKCALCNEGOTIATING_Enter</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_pmk_to_ptk
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_cancel_timeout
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_key_mgmt_sha256
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_verify_key_mic
</UL>
<BR>[Called By]<UL><LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_Step
</UL>

<P><STRONG><a name="[828]"></a>wpa_group_config_group_keys</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_set_key
</UL>
<BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gtk_rekey
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_setkeysdone
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_AUTHENTICATION2_Enter
</UL>

<P><STRONG><a name="[829]"></a>wpa_gtk_update</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_get_ntp_timestamp
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_get_bytes
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc_byte_array
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha1_prf
</UL>
<BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gtk_rekey
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_sm_step
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_setkeys
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_AUTHENTICATION2_Enter
</UL>

<P><STRONG><a name="[82a]"></a>wpa_group_init_gmk_and_counter</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_get_ntp_timestamp
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_get_bytes
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via BLX)
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha1_prf
</UL>
<BR>[Called By]<UL><LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_init
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_AUTHENTICATION2_Enter
</UL>

<P><STRONG><a name="[82b]"></a>sm_WPA_PTK_AUTHENTICATION2_Enter</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inc_byte_array
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_init_gmk_and_counter
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gtk_update
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_config_group_keys
</UL>
<BR>[Called By]<UL><LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_Step
</UL>

<P><STRONG><a name="[82c]"></a>sm_WPA_PTK_INITIALIZE_Enter</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_remove_ptk
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_set_eapol
</UL>
<BR>[Called By]<UL><LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_Step
</UL>

<P><STRONG><a name="[82d]"></a>sm_WPA_PTK_Step</STRONG> (Thumb, 464 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_DISCONNECTED_Enter
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_INITIALIZE_Enter
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_AUTHENTICATION2_Enter
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKCALCNEGOTIATING_Enter
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKSTART_Enter
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKINITDONE_Enter
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_DISCONNECT_Enter
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKINITNEGOTIATING_Enter
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_set_eapol
</UL>
<BR>[Called By]<UL><LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_step
</UL>

<P><STRONG><a name="[813]"></a>wpa_sm_step</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_sm_step
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_Step
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_GROUP_Step
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_free_sta_sm
</UL>
<BR>[Called By]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sta_associated
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_sm_event
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_update_sta
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_rekey_ptk
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_send_eapol_timeout
</UL>

<P><STRONG><a name="[12e]"></a>wpa_group_update_sta</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_step
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_auth.o(.text)
</UL>
<P><STRONG><a name="[830]"></a>wpa_group_setkeys</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_for_each_sta
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gtk_update
</UL>
<BR>[Called By]<UL><LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_sm_step
</UL>

<P><STRONG><a name="[82f]"></a>wpa_group_sm_step</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via BLX)
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_setkeysdone
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_setkeys
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_gtk_update
</UL>
<BR>[Called By]<UL><LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_init_keys
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_reconfig
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_rekey_gtk
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_step
</UL>

<P><STRONG><a name="[12f]"></a>wpa_rekey_gtk</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eloop_register_timeout
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_sm_step
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_auth.o(.text)
</UL>
<P><STRONG><a name="[824]"></a>wpa_key_mgmt_sha256</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKCALCNEGOTIATING_Enter
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKSTART_Enter
</UL>

<P><STRONG><a name="[81a]"></a>wpa_auth_get_seqnum</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_get_seqnum
</UL>
<BR>[Called By]<UL><LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKINITNEGOTIATING_Enter
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_GROUP_REKEYNEGOTIATING_Enter
</UL>

<P><STRONG><a name="[820]"></a>wpa_sta_disconnect</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ap_sta_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_PTKINITDONE_Enter
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_DISCONNECT_Enter
</UL>

<P><STRONG><a name="[821]"></a>wpa_request_new_ptk</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive_error_report
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_rekey_ptk
</UL>

<P><STRONG><a name="[82e]"></a>sm_WPA_PTK_DISCONNECTED_Enter</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_WPA_PTK_Step
</UL>

<P><STRONG><a name="[832]"></a>wpa_group_setkeysdone</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_config_group_keys
</UL>
<BR>[Called By]<UL><LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_group_sm_step
</UL>

<P><STRONG><a name="[835]"></a>wpa_group_set_key_len</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_reconfig
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_init
</UL>

<P><STRONG><a name="[839]"></a>wpa_receive_error_report</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, wpa_auth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;michael_mic_failure
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_request_new_ptk
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_receive
</UL>

<P><STRONG><a name="[83c]"></a>wpa_write_wpa_ie</STRONG> (Thumb, 252 bytes, Stack size 0 bytes, wpa_auth_ie.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_auth_gen_wpa_ie
</UL>

<P><STRONG><a name="[83d]"></a>wpa_parse_generic</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, wpa_auth_ie.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_kde_ies
</UL>

<P><STRONG><a name="[83f]"></a>rsn_selector_to_bitfield</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, wpa_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_rsn
</UL>

<P><STRONG><a name="[840]"></a>wpa_selector_to_bitfield</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, wpa_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_parse_wpa_ie_wpa
</UL>

<P><STRONG><a name="[841]"></a>cipher2drv</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, hostapd_wpa_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hostapd_drv_set_ap
</UL>

<P><STRONG><a name="[844]"></a>setup_mix</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, aesMatrix.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesInitKey
</UL>

<P><STRONG><a name="[845]"></a>setup_mix2</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, aesMatrix.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psAesInitKey
</UL>

<P><STRONG><a name="[84a]"></a>MD5Transform</STRONG> (Thumb, 1718 bytes, Stack size 0 bytes, md5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Update
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MD5Final
</UL>

<P><STRONG><a name="[857]"></a>Heap1_SizeAdjust</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, h1_alloc_mt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_internal
</UL>

<P><STRONG><a name="[85b]"></a>Heap1_SizeAdjust</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, h1_realloc_mt.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>

<P><STRONG><a name="[89e]"></a>__arm_div8</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[89d]"></a>__arm_div5</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[89c]"></a>__arm_div2</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[89f]"></a>__arm_div_large</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[134]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[136]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[886]"></a>_fp_digits</STRONG> (Thumb, 410 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee_status (via BLX)
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul (via BLX)
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv (via BLX)
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e (via BLX)
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[899]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[87d]"></a>_printf_mbtowc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[890]"></a>_printf_wc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[892]"></a>_scanf_longlong</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[894]"></a>_scanf_mbtowc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[891]"></a>_scanf_real</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[896]"></a>_scanf_wctomb</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[893]"></a>_scanf_wstring</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<HR></body></html>
